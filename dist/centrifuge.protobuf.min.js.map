{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///centrifuge.protobuf.min.js","webpack:///webpack/bootstrap 47bab6f8ac7bae08148c","webpack:///./node_modules/protobufjs/src/util.js","webpack:///./node_modules/protobufjs/src/enum.js","webpack:///./node_modules/protobufjs/src/util/minimal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/protobufjs/src/object.js","webpack:///./node_modules/protobufjs/src/field.js","webpack:///./node_modules/protobufjs/src/namespace.js","webpack:///./node_modules/protobufjs/src/types.js","webpack:///./src/utils.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/protobufjs/src/writer.js","webpack:///./node_modules/protobufjs/src/reader.js","webpack:///./node_modules/protobufjs/src/oneof.js","webpack:///./node_modules/protobufjs/src/message.js","webpack:///./src/centrifuge.js","webpack:///./src/json.js","webpack:///./node_modules/process/browser.js","webpack:///./src/subscription.js","webpack:///./node_modules/@protobufjs/aspromise/index.js","webpack:///./node_modules/@protobufjs/inquire/index.js","webpack:///./node_modules/protobufjs/src/rpc.js","webpack:///./node_modules/protobufjs/src/roots.js","webpack:///./node_modules/protobufjs/src/encoder.js","webpack:///./node_modules/protobufjs/src/type.js","webpack:///./node_modules/protobufjs/src/mapfield.js","webpack:///./node_modules/protobufjs/src/service.js","webpack:///./node_modules/protobufjs/src/method.js","webpack:///./node_modules/protobufjs/src/decoder.js","webpack:///./node_modules/protobufjs/src/verifier.js","webpack:///./node_modules/protobufjs/src/converter.js","webpack:///./node_modules/protobufjs/src/wrappers.js","webpack:///./node_modules/protobufjs/src/root.js","webpack:///./src/protobuf.js","webpack:///./node_modules/protobufjs/light.js","webpack:///./node_modules/protobufjs/src/index-light.js","webpack:///./node_modules/protobufjs/src/index-minimal.js","webpack:///./node_modules/@protobufjs/base64/index.js","webpack:///./node_modules/@protobufjs/eventemitter/index.js","webpack:///./node_modules/@protobufjs/float/index.js","webpack:///./node_modules/@protobufjs/utf8/index.js","webpack:///./node_modules/@protobufjs/pool/index.js","webpack:///./node_modules/protobufjs/src/util/longbits.js","webpack:///./node_modules/protobufjs/src/writer_buffer.js","webpack:///./node_modules/protobufjs/src/reader_buffer.js","webpack:///./node_modules/protobufjs/src/rpc/service.js","webpack:///./node_modules/@protobufjs/codegen/index.js","webpack:///./node_modules/@protobufjs/fetch/index.js","webpack:///./node_modules/@protobufjs/path/index.js","webpack:///./src/client.proto.json","webpack:///./src/index_protobuf.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Type","Enum","util","roots","codegen","fetch","path","fs","inquire","toArray","keys","array","Array","length","index","toObject","key","val","undefined","safePropBackslashRe","safePropQuoteRe","isReserved","test","safeProp","prop","replace","ucFirst","str","charAt","toUpperCase","substring","camelCaseRe","camelCase","$0","$1","compareFieldsById","a","b","id","decorateType","ctor","typeName","$type","decorateRoot","remove","add","type","value","decorateEnumIndex","decorateEnum","enm","values","options","comment","comments","ReflectionObject","TypeError","valuesById","create","reserved","constructor","className","Namespace","fromJSON","json","toJSON","toJSONOptions","keepComments","Boolean","isString","isInteger","Error","isReservedId","isReservedName","allow_alias","global","merge","dst","src","ifNotSet","newError","CustomError","message","properties","captureStackTrace","stack","toString","asPromise","base64","EventEmitter","float","utf8","pool","LongBits","emptyArray","freeze","emptyObject","isNode","process","versions","node","Number","isFinite","Math","floor","String","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","longs","enums","bytes","_configure","encoding","allocUnsafe","size","g","Function","eval","window","parent","resolved","filename","Root","defineProperties","ptr","fullName","unshift","join","onAdd","_handleAdd","onRemove","_handleRemove","resolve","getOption","setOption","setOptions","Root_","Field","rule","extend","ruleRe","required","optional","repeated","map","partOf","typeDefault","defaultValue","long","types","resolvedType","extensionField","declaringField","_packed","defaults","lookupTypeOrEnum","packed","fromNumber","buf","decode","write","fieldId","fieldType","fieldRule","fieldName","default","Type_","arrayToJSON","nested","_nestedArray","clearCache","namespace","Service","addJSON","nestedArray","nestedJson","ns","names","fields","methods","getEnum","prev","split","part","shift","resolveAll","lookup","filterTypes","parentAlreadyChecked","slice","found","indexOf","lookupType","lookupEnum","lookupService","Service_","bake","offset","basic","mapKey","isFunction","startsWith","prefix","lastIndexOf","log","level","args","console","logger","apply","backoff","step","min","max","jitter","random","interval","pow","errorExists","data","error","_events","_maxListeners","arg","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","er","handler","len","listeners","arguments","err","context","addListener","listener","newListener","push","warned","trace","on","once","removeListener","fired","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","objectOrFunction","x","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","setTimeout","callback","queue","then","onFulfillment","onRejection","child","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","Constructor","promise","selfFulfillment","cannotReturnOwn","getThen","TRY_CATCH_ERROR","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","tryCatch","hasCallback","succeeded","failed","initializePromise","resolver","nextId","validationError","all","entries","Enumerator","race","_","reject$1","needsResolver","needsNew","polyfill","local","P","Promise","promiseToString","cast","Promise$1","_isArray","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isWorker","Uint8ClampedArray","importScripts","MessageChannel","nextTick","iterations","observer","document","createTextNode","observe","characterData","channel","port1","onmessage","port2","postMessage","vertx","require","runOnLoop","runOnContext","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","_settledAt","_willSettleAt","state","enumerator","catch","finally","_setScheduler","_setAsap","_asap","Op","fn","next","State","writer","head","tail","states","Writer","writeByte","pos","writeVarint32","VarintOp","writeVarint64","writeFixed32","BufferWriter","alloc","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","set","string","fork","reset","ldelim","finish","BufferWriter_","indexOutOfRange","reader","writeLength","RangeError","Reader","buffer","readLongVarint","readFixed32_end","end","readFixed64","BufferReader","create_array","isBuffer","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","OneOf","oneof","fieldsArray","addFieldsToParent","field","oneofName","Message","encode","encodeDelimited","decodeDelimited","verify","fromObject","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","setPrototypeOf","__proto__","Centrifuge","_typeof","Symbol","iterator","_createClass","target","props","descriptor","protoProps","staticProps","_json","_utils","Subscription","_EventEmitter","url","_this","getPrototypeOf","_methodType","methodTypeJSON","_messageType","messageTypeJSON","_url","_sockjs","_isSockjs","_binary","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_subs","_lastPublicationUID","_messages","_isBatching","_isAuthBatching","_authChannels","_numRefreshFailed","_refreshTimeout","_pingInterval","_pongTimeout","_retries","_callbacks","_latency","_latencyStart","_credentials","_config","debug","sockjs","retry","maxRetry","timeout","resubscribe","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","authEndpoint","authHeaders","authParams","onAuth","credentials","params","headers","query","_debug","xhr","XMLHttpRequest","ActiveXObject","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","JSON","parse","responseText","_log","send","stringify","WebSocket","format","JsonEncoder","JsonDecoder","configuration","assign","_setFormat","user","exp","info","sign","SockJS","newStatus","reconnect","uid","callbacks","errback","_createErrorObject","sub","_isSuccess","_triggerUnsubscribe","_setSubscribing","_setUnsubscribed","commands","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","transport","onheartbeat","_restartPing","_resetRetry","msg","method","CONNECT","Date","_call","result","_connectResponse","decodeCommandResult","_disconnect","onerror","onclose","closeEvent","needReconnect","advice","event","_getRetryInterval","_connect","replies","decodeReplies","_dispatchReply","RPC","MESSAGE","_callAsync","_addMessage","_registerCall","isConnected","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","clearTimeout","close","_refreshFailed","cb","_refresh","round","REFRESH","_refreshResponse","_ajax","_setNew","SUBSCRIBE","startAuthBatching","_subscribe","stopAuthBatching","_recover","recover","last","_getLastID","_subscribeResponse","_subscribeError","UNSUBSCRIBE","_getSub","getTime","expires","expired","client","ttl","startBatching","_shouldResubscribe","stopBatching","latency","clearInterval","setInterval","_stopPing","_startPing","_isSubscribing","code","_setSubscribeError","publications","reverse","_handlePublication","body","recovered","_setSubscribeSuccess","decodeMessageData","JOIN","leave","LEAVE","unsubscribe","publication","PUBLICATION","reply","decodeMessage","_handleJoin","_handleLeave","_handleUnsub","_handleCommandReply","_handleAsyncReply","messages","_send","PING","lastUID","async","_nextMessageId","_isConnected","_ping","_flush","authChannels","channels","batch","channelResponse","events","currentSub","_setEvents","_isUnsubscribed","PUBLISH","PRESENCE","PRESENCE_STATS","HISTORY","UNSUB","encodedCommands","encodedReplies","methodType","messageType","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","run","Item","title","browser","env","argv","version","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_STATE_NEW","centrifuge","_centrifuge","_error","_isResubscribe","_recovered","_ready","_promise","_noResubscribe","_initializePromise","_resolve","_reject","knownEvents","ev","successContext","_getSubscribeSuccessContext","errContext","_getSubscribeErrorContext","noResubscribe","isResubscribe","subscribeErrorContext","_unsubscribe","_methodCall","ctx","pending","moduleName","mod","genTypePartial","gen","fieldIndex","ref","group","encoder","mtype","sort","_fieldsArray","keyType","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","MapField","decoder","verifier","converter","wrappers","fieldsById","oneofsArray","generateConstructor","ctorProperties","inherited","filter","setup","wrapper","originalThis","bind","resolvedKeyType","fieldKeyType","fieldValueType","_methodsArray","service","Method","rpc","methodsArray","rpcImpl","requestDelimited","responseDelimited","rpcService","methodName","q","resolvedRequestType","resolvedResponseType","requestType","responseType","requestStream","responseStream","missing","rfield","invalid","expected","genVerifyValue","j","genVerifyKey","seenFirstField","oneofProp","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","low","high","fromCharCode","hasKs2","type_url","substr","deferred","files","SYNC","tryHandleExtension","extendedType","sisterField","common","resolvePath","load","sync","source","imports","weakImports","queued","weak","idx","altname","readFileSync","loadSync","exposeRe","parse_","common_","CentrifugeProtobuf","ProtobufDecoder","ProtobufEncoder","messageTypeProtobuf","methodTypeProtobuf","protobuf","proto","methodValues","methodSchema","MessageSchema","Command","Reply","command","_decode","res","_Centrifuge","build","configure","ceil","b64","s64","t","parts","chunk","charCodeAt","_listeners","evt","Float32Array","writeFloat_f32_cpy","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","le","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","exponent","LN2","mantissa","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","c1","c2","SIZE","MAX","slab","zero","parseInt","fromString","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","copy","byteLength","utf8Slice","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","functionParams","functionName","Codegen","formatStringOrScope","verbose","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","functionNameOverride","readFile","contents","binary","overrideMimeType","isAbsolute","normalize","absolute","originPath","includePath","alreadyNormalized","MethodType","MessageType","ClientInfo","connInfo","chanInfo","Publication","Join","Leave","Unsub","ConnectRequest","opts","ConnectResponse","ConnectResult","RefreshRequest","RefreshResponse","RefreshResult","SubscribeRequest","SubscribeResponse","SubscribeResult","UnsubscribeRequest","UnsubscribeResponse","UnsubscribeResult","PublishRequest","PublishResponse","PublishResult","PresenceRequest","PresenceResponse","PresenceResult","presence","PresenceStatsRequest","PresenceStatsResponse","PresenceStatsResult","numClients","numUsers","HistoryRequest","HistoryResponse","HistoryResult","PingRequest","PingResponse","PingResult","RPCRequest","RPCResponse","RPCResult","MessageRequest","Communicate","_protobuf"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,gBAAAH,GACA,gBAAAC,SACAA,QAAA,WAAAD,IAEAD,EAAA,WAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,MDgBM,SAAU9B,EAAQD,EAASO,GAEjC,YEzEA,IAIAyB,GACAC,EALAC,EAAAjC,EAAAD,QAAAO,EAAA,GAEA4B,EAAA5B,EAAA,GAKA2B,GAAAE,QAAA7B,EAAA,IACA2B,EAAAG,MAAA9B,EAAA,IACA2B,EAAAI,KAAA/B,EAAA,IAMA2B,EAAAK,GAAAL,EAAAM,QAAA,MAOAN,EAAAO,QAAA,SAAAf,GACA,GAAAA,EAAA,CAIA,IAHA,GAAAgB,GAAAvB,OAAAuB,KAAAhB,GACAiB,EAAA,GAAAC,OAAAF,EAAAG,QACAC,EAAA,EACAA,EAAAJ,EAAAG,QACAF,EAAAG,GAAApB,EAAAgB,EAAAI,KACA,OAAAH,GAEA,UAQAT,EAAAa,SAAA,SAAAJ,GAGA,IAFA,GAAAjB,MACAoB,EAAA,EACAA,EAAAH,EAAAE,QAAA,CACA,GAAAG,GAAAL,EAAAG,KACAG,EAAAN,EAAAG,SACAI,KAAAD,IACAvB,EAAAsB,GAAAC,GAEA,MAAAvB,GAGA,IAAAyB,GAAA,MACAC,EAAA,IAOAlB,GAAAmB,WAAA,SAAArC,GACA,6TAAAsC,KAAAtC,IAQAkB,EAAAqB,SAAA,SAAAC,GACA,mBAAAF,KAAAE,IAAAtB,EAAAmB,WAAAG,GACA,KAAAA,EAAAC,QAAAN,EAAA,QAAAM,QAAAL,EAAA,YACA,IAAAI,GAQAtB,EAAAwB,QAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,UAAA,GAGA,IAAAC,GAAA,WAOA7B,GAAA8B,UAAA,SAAAL,GACA,MAAAA,GAAAG,UAAA,KACAH,EAAAG,UAAA,GACAL,QAAAM,EAAA,SAAAE,EAAAC,GAAuD,MAAAA,GAAAL,iBASvD3B,EAAAiC,kBAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAE,GAAAD,EAAAC,IAWApC,EAAAqC,aAAA,SAAAC,EAAAC,GAGA,GAAAD,EAAAE,MAMA,MALAD,IAAAD,EAAAE,MAAA1D,OAAAyD,IACAvC,EAAAyC,aAAAC,OAAAJ,EAAAE,OACAF,EAAAE,MAAA1D,KAAAyD,EACAvC,EAAAyC,aAAAE,IAAAL,EAAAE,QAEAF,EAAAE,KAIA1C,KACAA,EAAAzB,EAAA,IAEA,IAAAuE,GAAA,GAAA9C,GAAAyC,GAAAD,EAAAxD,KAKA,OAJAkB,GAAAyC,aAAAE,IAAAC,GACAA,EAAAN,OACArD,OAAAC,eAAAoD,EAAA,SAA0CO,MAAAD,EAAAxD,YAAA,IAC1CH,OAAAC,eAAAoD,EAAA5C,UAAA,SAAoDmD,MAAAD,EAAAxD,YAAA,IACpDwD,EAGA,IAAAE,GAAA,CAOA9C,GAAA+C,aAAA,SAAAvD,GAGA,GAAAA,EAAAgD,MACA,MAAAhD,GAAAgD,KAGAzC,KACAA,EAAA1B,EAAA,GAEA,IAAA2E,GAAA,GAAAjD,GAAA,OAAA+C,IAAAtD,EAGA,OAFAQ,GAAAyC,aAAAE,IAAAK,GACA/D,OAAAC,eAAAM,EAAA,SAA4CqD,MAAAG,EAAA5D,YAAA,IAC5C4D,GASA/D,OAAAC,eAAAc,EAAA,gBACAX,IAAA,WACA,MAAAY,GAAA,YAAAA,EAAA,cAAA5B,EAAA,UFuFM,SAAUN,EAAQD,EAASO,GAEjC,YGnPA,SAAA0B,GAAAjB,EAAAmE,EAAAC,EAAAC,EAAAC,GAGA,GAFAC,EAAA3E,KAAAP,KAAAW,EAAAoE,GAEAD,GAAA,gBAAAA,GACA,KAAAK,WAAA,2BAoCA,IA9BAnF,KAAAoF,cAMApF,KAAA8E,OAAAhE,OAAAuE,OAAArF,KAAAoF,YAMApF,KAAAgF,UAMAhF,KAAAiF,eAMAjF,KAAAsF,aAAAzC,GAMAiC,EACA,OAAAzC,GAAAvB,OAAAuB,KAAAyC,GAAAzE,EAAA,EAAmDA,EAAAgC,EAAAG,SAAiBnC,EACpE,gBAAAyE,GAAAzC,EAAAhC,MACAL,KAAAoF,WAAApF,KAAA8E,OAAAzC,EAAAhC,IAAAyE,EAAAzC,EAAAhC,KAAAgC,EAAAhC,IA/DAT,EAAAD,QAAAiC,CAGA,IAAAsD,GAAAhF,EAAA,KACA0B,EAAAL,UAAAT,OAAAuE,OAAAH,EAAA3D,YAAAgE,YAAA3D,GAAA4D,UAAA,MAEA,IAAAC,GAAAvF,EAAA,GACA2B,EAAA3B,EAAA,EAyEA0B,GAAA8D,SAAA,SAAA/E,EAAAgF,GACA,GAAAd,GAAA,GAAAjD,GAAAjB,EAAAgF,EAAAb,OAAAa,EAAAZ,QAAAY,EAAAX,QAAAW,EAAAV,SAEA,OADAJ,GAAAS,SAAAK,EAAAL,SACAT,GAQAjD,EAAAL,UAAAqE,OAAA,SAAAC,GACA,GAAAC,KAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,UAAA1C,KAAA+E,QACA,SAAA/E,KAAA8E,OACA,WAAA9E,KAAAsF,UAAAtF,KAAAsF,SAAA9C,OAAAxC,KAAAsF,aAAAzC,GACA,UAAAiD,EAAA9F,KAAAgF,YAAAnC,GACA,WAAAiD,EAAA9F,KAAAiF,aAAApC,MAaAjB,EAAAL,UAAAiD,IAAA,SAAA7D,EAAAsD,EAAAe,GAGA,IAAAnD,EAAAmE,SAAArF,GACA,KAAAwE,WAAA,wBAEA,KAAAtD,EAAAoE,UAAAhC,GACA,KAAAkB,WAAA,wBAEA,QAAAtC,KAAA7C,KAAA8E,OAAAnE,GACA,KAAAuF,OAAA,mBAAAvF,EAAA,QAAAX,KAEA,IAAAA,KAAAmG,aAAAlC,GACA,KAAAiC,OAAA,MAAAjC,EAAA,mBAAAjE,KAEA,IAAAA,KAAAoG,eAAAzF,GACA,KAAAuF,OAAA,SAAAvF,EAAA,oBAAAX,KAEA,QAAA6C,KAAA7C,KAAAoF,WAAAnB,GAAA,CACA,IAAAjE,KAAA+E,UAAA/E,KAAA+E,QAAAsB,YACA,KAAAH,OAAA,gBAAAjC,EAAA,OAAAjE,KACAA,MAAA8E,OAAAnE,GAAAsD,MAEAjE,MAAAoF,WAAApF,KAAA8E,OAAAnE,GAAAsD,GAAAtD,CAGA,OADAX,MAAAiF,SAAAtE,GAAAqE,GAAA,KACAhF,MAUA4B,EAAAL,UAAAgD,OAAA,SAAA5D,GAEA,IAAAkB,EAAAmE,SAAArF,GACA,KAAAwE,WAAA,wBAEA,IAAAvC,GAAA5C,KAAA8E,OAAAnE,EACA,UAAAiC,EACA,KAAAsD,OAAA,SAAAvF,EAAA,uBAAAX,KAMA,cAJAA,MAAAoF,WAAAxC,SACA5C,MAAA8E,OAAAnE,SACAX,MAAAiF,SAAAtE,GAEAX,MAQA4B,EAAAL,UAAA4E,aAAA,SAAAlC,GACA,MAAAwB,GAAAU,aAAAnG,KAAAsF,SAAArB,IAQArC,EAAAL,UAAA6E,eAAA,SAAAzF,GACA,MAAA8E,GAAAW,eAAApG,KAAAsF,SAAA3E,KH+QM,SAAUf,EAAQD,EAASO,GAEjC,cAC4B,SAASoG,GIxOrC,QAAAC,GAAAC,EAAAC,EAAAC,GACA,OAAArE,GAAAvB,OAAAuB,KAAAoE,GAAApG,EAAA,EAA4CA,EAAAgC,EAAAG,SAAiBnC,MAC7DwC,KAAA2D,EAAAnE,EAAAhC,KAAAqG,IACAF,EAAAnE,EAAAhC,IAAAoG,EAAApE,EAAAhC,IACA,OAAAmG,GAoBA,QAAAG,GAAAhG,GAEA,QAAAiG,GAAAC,EAAAC,GAEA,KAAA9G,eAAA4G,IACA,UAAAA,GAAAC,EAAAC,EAKAhG,QAAAC,eAAAf,KAAA,WAAgDkB,IAAA,WAAkB,MAAA2F,MAGlEX,MAAAa,kBACAb,MAAAa,kBAAA/G,KAAA4G,GAEA9F,OAAAC,eAAAf,KAAA,SAAkD0E,OAAA,GAAAwB,QAAAc,OAAA,KAElDF,GACAP,EAAAvG,KAAA8G,GAWA,OARAF,EAAArF,UAAAT,OAAAuE,OAAAa,MAAA3E,YAAAgE,YAAAqB,EAEA9F,OAAAC,eAAA6F,EAAArF,UAAA,QAA0DL,IAAA,WAAkB,MAAAP,MAE5EiG,EAAArF,UAAA0F,SAAA,WACA,MAAAjH,MAAAW,KAAA,KAAAX,KAAA6G,SAGAD,EAlRA,GAAA/E,GAAAlC,CAGAkC,GAAAqF,UAAAhH,EAAA,IAGA2B,EAAAsF,OAAAjH,EAAA,IAGA2B,EAAAuF,aAAAlH,EAAA,IAGA2B,EAAAwF,MAAAnH,EAAA,IAGA2B,EAAAM,QAAAjC,EAAA,IAGA2B,EAAAyF,KAAApH,EAAA,IAGA2B,EAAA0F,KAAArH,EAAA,IAGA2B,EAAA2F,SAAAtH,EAAA,IAQA2B,EAAA4F,WAAA3G,OAAA4G,OAAA5G,OAAA4G,cAOA7F,EAAA8F,YAAA7G,OAAA4G,OAAA5G,OAAA4G,cAQA7F,EAAA+F,OAAA7B,QAAAO,EAAAuB,SAAAvB,EAAAuB,QAAAC,UAAAxB,EAAAuB,QAAAC,SAAAC,MAQAlG,EAAAoE,UAAA+B,OAAA/B,WAAA,SAAAvB,GACA,sBAAAA,IAAAuD,SAAAvD,IAAAwD,KAAAC,MAAAzD,QAQA7C,EAAAmE,SAAA,SAAAtB,GACA,sBAAAA,gBAAA0D,SAQAvG,EAAAwG,SAAA,SAAA3D,GACA,MAAAA,IAAA,gBAAAA,IAWA7C,EAAAyG,MAQAzG,EAAA0G,MAAA,SAAAC,EAAArF,GACA,GAAAuB,GAAA8D,EAAArF,EACA,eAAAuB,IAAA8D,EAAAhH,eAAA2B,MACA,gBAAAuB,KAAAnC,MAAAkG,QAAA/D,KAAAlC,OAAA1B,OAAAuB,KAAAqC,GAAAlC,QAAA,IAeAX,EAAA6G,OAAA,WACA,IACA,GAAAA,GAAA7G,EAAAM,QAAA,UAAAuG,MAEA,OAAAA,GAAAnH,UAAAoH,UAAAD,EAAA,KACK,MAAAE,GAEL,gBAKA/G,EAAAgH,aAAA,KAGAhH,EAAAiH,oBAAA,KAOAjH,EAAAkH,UAAA,SAAAC,GAEA,sBAAAA,GACAnH,EAAA6G,OACA7G,EAAAiH,oBAAAE,GACA,GAAAnH,GAAAU,MAAAyG,GACAnH,EAAA6G,OACA7G,EAAAgH,aAAAG,GACA,mBAAAC,YACAD,EACA,GAAAC,YAAAD,IAOAnH,EAAAU,MAAA,mBAAA0G,uBAAA1G,MAeAV,EAAAqH,KAAA5C,EAAA6C,SAAA7C,EAAA6C,QAAAD,MAAArH,EAAAM,QAAA,QAOAN,EAAAuH,OAAA,mBAOAvH,EAAAwH,QAAA,wBAOAxH,EAAAyH,QAAA,6CAOAzH,EAAA0H,WAAA,SAAA7E,GACA,MAAAA,GACA7C,EAAA2F,SAAAgC,KAAA9E,GAAA+E,SACA5H,EAAA2F,SAAAkC,UASA7H,EAAA8H,aAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAjI,EAAA2F,SAAAuC,SAAAH,EACA,OAAA/H,GAAAqH,KACArH,EAAAqH,KAAAc,SAAAF,EAAAG,GAAAH,EAAAI,GAAAL,GACAC,EAAAK,SAAApE,QAAA8D,KAkBAhI,EAAA0E,QAOA1E,EAAAuI,QAAA,SAAA9G,GACA,MAAAA,GAAAC,OAAA,GAAA8G,cAAA/G,EAAAG,UAAA,IA0CA5B,EAAA8E,WAmBA9E,EAAAyI,cAAA3D,EAAA,iBAoBA9E,EAAA0I,YAAA,SAAAC,GAEA,OADAC,MACApK,EAAA,EAAmBA,EAAAmK,EAAAhI,SAAuBnC,EAC1CoK,EAAAD,EAAAnK,IAAA,CAOA,mBACA,OAAAgC,GAAAvB,OAAAuB,KAAArC,MAAAK,EAAAgC,EAAAG,OAAA,EAA+DnC,GAAA,IAAQA,EACvE,OAAAoK,EAAApI,EAAAhC,SAAAwC,KAAA7C,KAAAqC,EAAAhC,KAAA,OAAAL,KAAAqC,EAAAhC,IACA,MAAAgC,GAAAhC,KAiBAwB,EAAA6I,YAAA,SAAAF,GAQA,gBAAA7J,GACA,OAAAN,GAAA,EAAuBA,EAAAmK,EAAAhI,SAAuBnC,EAC9CmK,EAAAnK,KAAAM,SACAX,MAAAwK,EAAAnK,MAoBAwB,EAAAgE,eACA8E,MAAAvC,OACAwC,MAAAxC,OACAyC,MAAAzC,OACAzC,MAAA,GAGA9D,EAAAiJ,WAAA,WACA,GAAApC,GAAA7G,EAAA6G,MAEA,KAAAA,EAEA,YADA7G,EAAAgH,aAAAhH,EAAAiH,oBAAA,KAKAjH,GAAAgH,aAAAH,EAAAc,OAAAP,WAAAO,MAAAd,EAAAc,MAEA,SAAA9E,EAAAqG,GACA,UAAArC,GAAAhE,EAAAqG,IAEAlJ,EAAAiH,oBAAAJ,EAAAsC,aAEA,SAAAC,GACA,UAAAvC,GAAAuC,OJyc6B1K,KAAKZ,EAASO,EAAoB,KAIzD,SAAUN,EAAQD,GK/1BxB,GAAAuL,EAGAA,GAAA,WACA,MAAAlL,QAGA,KAEAkL,KAAAC,SAAA,qBAAAC,MAAA,QACC,MAAAxC,GAED,gBAAAyC,UACAH,EAAAG,QAOAzL,EAAAD,QAAAuL,GLs2BM,SAAUtL,EAAQD,EAASO,GAEjC,YM32BA,SAAAgF,GAAAvE,EAAAoE,GAEA,IAAAlD,EAAAmE,SAAArF,GACA,KAAAwE,WAAA,wBAEA,IAAAJ,IAAAlD,EAAAwG,SAAAtD,GACA,KAAAI,WAAA,4BAMAnF,MAAA+E,UAMA/E,KAAAW,OAMAX,KAAAsL,OAAA,KAMAtL,KAAAuL,UAAA,EAMAvL,KAAAgF,QAAA,KAMAhF,KAAAwL,SAAA,KA1DA5L,EAAAD,QAAAuF,EAEAA,EAAAM,UAAA,kBAEA,IAEAiG,GAFA5J,EAAA3B,EAAA,EAyDAY,QAAA4K,iBAAAxG,EAAA3D,WAQA9B,MACAyB,IAAA,WAEA,IADA,GAAAyK,GAAA3L,KACA,OAAA2L,EAAAL,QACAK,IAAAL,MACA,OAAAK,KAUAC,UACA1K,IAAA,WAGA,IAFA,GAAAe,IAAAjC,KAAAW,MACAgL,EAAA3L,KAAAsL,OACAK,GACA1J,EAAA4J,QAAAF,EAAAhL,MACAgL,IAAAL,MAEA,OAAArJ,GAAA6J,KAAA,SAUA5G,EAAA3D,UAAAqE,OAAA,WACA,KAAAM,UAQAhB,EAAA3D,UAAAwK,MAAA,SAAAT,GACAtL,KAAAsL,QAAAtL,KAAAsL,YACAtL,KAAAsL,OAAA/G,OAAAvE,MACAA,KAAAsL,SACAtL,KAAAuL,UAAA,CACA,IAAA9L,GAAA6L,EAAA7L,IACAA,aAAAgM,IACAhM,EAAAuM,WAAAhM,OAQAkF,EAAA3D,UAAA0K,SAAA,SAAAX,GACA,GAAA7L,GAAA6L,EAAA7L,IACAA,aAAAgM,IACAhM,EAAAyM,cAAAlM,MACAA,KAAAsL,OAAA,KACAtL,KAAAuL,UAAA,GAOArG,EAAA3D,UAAA4K,QAAA,WACA,MAAAnM,MAAAuL,SACAvL,MACAA,KAAAP,eAAAgM,KACAzL,KAAAuL,UAAA,GACAvL,OAQAkF,EAAA3D,UAAA6K,UAAA,SAAAzL,GACA,GAAAX,KAAA+E,QACA,MAAA/E,MAAA+E,QAAApE,IAWAuE,EAAA3D,UAAA8K,UAAA,SAAA1L,EAAA+D,EAAAgC,GAGA,MAFAA,IAAA1G,KAAA+E,aAAAlC,KAAA7C,KAAA+E,QAAApE,MACAX,KAAA+E,UAAA/E,KAAA+E,aAA2CpE,GAAA+D,GAC3C1E,MASAkF,EAAA3D,UAAA+K,WAAA,SAAAvH,EAAA2B,GACA,GAAA3B,EACA,OAAA1C,GAAAvB,OAAAuB,KAAA0C,GAAA1E,EAAA,EAAoDA,EAAAgC,EAAAG,SAAiBnC,EACrEL,KAAAqM,UAAAhK,EAAAhC,GAAA0E,EAAA1C,EAAAhC,IAAAqG,EACA,OAAA1G,OAOAkF,EAAA3D,UAAA0F,SAAA,WACA,GAAAzB,GAAAxF,KAAAuF,YAAAC,UACAoG,EAAA5L,KAAA4L,QACA,OAAAA,GAAApJ,OACAgD,EAAA,IAAAoG,EACApG,GAGAN,EAAA4F,WAAA,SAAAyB,GACAd,EAAAc,INm4BM,SAAU3M,EAAQD,EAASO,GAEjC,YOphCA,SAAAsM,GAAA7L,EAAAsD,EAAAQ,EAAAgI,EAAAC,EAAA3H,EAAAC,GAcA,GAZAnD,EAAAwG,SAAAoE,IACAzH,EAAA0H,EACA3H,EAAA0H,EACAA,EAAAC,MAAA7J,IACKhB,EAAAwG,SAAAqE,KACL1H,EAAAD,EACAA,EAAA2H,EACAA,MAAA7J,IAGAqC,EAAA3E,KAAAP,KAAAW,EAAAoE,IAEAlD,EAAAoE,UAAAhC,MAAA,EACA,KAAAkB,WAAA,oCAEA,KAAAtD,EAAAmE,SAAAvB,GACA,KAAAU,WAAA,wBAEA,QAAAtC,KAAA4J,IAAAE,EAAA1J,KAAAwJ,IAAAxF,WAAAoD,eACA,KAAAlF,WAAA,6BAEA,QAAAtC,KAAA6J,IAAA7K,EAAAmE,SAAA0G,GACA,KAAAvH,WAAA,0BAMAnF,MAAAyM,QAAA,aAAAA,QAAA5J,GAMA7C,KAAAyE,OAMAzE,KAAAiE,KAMAjE,KAAA0M,cAAA7J,GAMA7C,KAAA4M,SAAA,aAAAH,EAMAzM,KAAA6M,UAAA7M,KAAA4M,SAMA5M,KAAA8M,SAAA,aAAAL,EAMAzM,KAAA+M,KAAA,EAMA/M,KAAA6G,QAAA,KAMA7G,KAAAgN,OAAA,KAMAhN,KAAAiN,YAAA,KAMAjN,KAAAkN,aAAA,KAMAlN,KAAAmN,OAAAtL,EAAAqH,UAAArG,KAAAuK,EAAAD,KAAA1I,GAMAzE,KAAA6K,MAAA,UAAApG,EAMAzE,KAAAqN,aAAA,KAMArN,KAAAsN,eAAA,KAMAtN,KAAAuN,eAAA,KAOAvN,KAAAwN,QAAA,KAMAxN,KAAAgF,UAhMApF,EAAAD,QAAA6M,CAGA,IAAAtH,GAAAhF,EAAA,KACAsM,EAAAjL,UAAAT,OAAAuE,OAAAH,EAAA3D,YAAAgE,YAAAiH,GAAAhH,UAAA,OAEA,IAIA7D,GAJAC,EAAA1B,EAAA,GACAkN,EAAAlN,EAAA,GACA2B,EAAA3B,EAAA,GAIAyM,EAAA,8BAuBAH,GAAA9G,SAAA,SAAA/E,EAAAgF,GACA,UAAA6G,GAAA7L,EAAAgF,EAAA1B,GAAA0B,EAAAlB,KAAAkB,EAAA8G,KAAA9G,EAAA+G,OAAA/G,EAAAZ,QAAAY,EAAAX,UAqKAlE,OAAAC,eAAAyL,EAAAjL,UAAA,UACAL,IAAA,WAIA,MAFA,QAAAlB,KAAAwN,UACAxN,KAAAwN,SAAA,IAAAxN,KAAAoM,UAAA,WACApM,KAAAwN,WAOAhB,EAAAjL,UAAA8K,UAAA,SAAA1L,EAAA+D,EAAAgC,GAGA,MAFA,WAAA/F,IACAX,KAAAwN,QAAA,MACAtI,EAAA3D,UAAA8K,UAAA9L,KAAAP,KAAAW,EAAA+D,EAAAgC,IAwBA8F,EAAAjL,UAAAqE,OAAA,SAAAC,GACA,GAAAC,KAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,oBAAA1C,KAAAyM,MAAAzM,KAAAyM,UAAA5J,GACA,OAAA7C,KAAAyE,KACA,KAAAzE,KAAAiE,GACA,SAAAjE,KAAA0M,OACA,UAAA1M,KAAA+E,QACA,UAAAe,EAAA9F,KAAAgF,YAAAnC,MASA2J,EAAAjL,UAAA4K,QAAA,WAEA,GAAAnM,KAAAuL,SACA,MAAAvL,KA0BA,QAxBA6C,MAAA7C,KAAAiN,YAAAG,EAAAK,SAAAzN,KAAAyE,SACAzE,KAAAqN,cAAArN,KAAAuN,eAAAvN,KAAAuN,eAAAjC,OAAAtL,KAAAsL,QAAAoC,iBAAA1N,KAAAyE,MACAzE,KAAAqN,uBAAA1L,GACA3B,KAAAiN,YAAA,KAEAjN,KAAAiN,YAAAjN,KAAAqN,aAAAvI,OAAAhE,OAAAuB,KAAArC,KAAAqN,aAAAvI,QAAA,KAIA9E,KAAA+E,SAAA,MAAA/E,KAAA+E,QAAA,UACA/E,KAAAiN,YAAAjN,KAAA+E,QAAA,QACA/E,KAAAqN,uBAAAzL,IAAA,gBAAA5B,MAAAiN,cACAjN,KAAAiN,YAAAjN,KAAAqN,aAAAvI,OAAA9E,KAAAiN,eAIAjN,KAAA+E,WACA,IAAA/E,KAAA+E,QAAA4I,aAAA9K,KAAA7C,KAAA+E,QAAA4I,SAAA3N,KAAAqN,cAAArN,KAAAqN,uBAAAzL,WACA5B,MAAA+E,QAAA4I,OACA7M,OAAAuB,KAAArC,KAAA+E,SAAAvC,SACAxC,KAAA+E,YAAAlC,KAIA7C,KAAAmN,KACAnN,KAAAiN,YAAApL,EAAAqH,KAAA0E,WAAA5N,KAAAiN,YAAA,MAAAjN,KAAAyE,KAAAlB,OAAA,IAGAzC,OAAA4G,QACA5G,OAAA4G,OAAA1H,KAAAiN,iBAEK,IAAAjN,KAAA6K,OAAA,gBAAA7K,MAAAiN,YAAA,CACL,GAAAY,EACAhM,GAAAsF,OAAAlE,KAAAjD,KAAAiN,aACApL,EAAAsF,OAAA2G,OAAA9N,KAAAiN,YAAAY,EAAAhM,EAAAkH,UAAAlH,EAAAsF,OAAA3E,OAAAxC,KAAAiN,cAAA,GAEApL,EAAAyF,KAAAyG,MAAA/N,KAAAiN,YAAAY,EAAAhM,EAAAkH,UAAAlH,EAAAyF,KAAA9E,OAAAxC,KAAAiN,cAAA,GACAjN,KAAAiN,YAAAY,EAeA,MAXA7N,MAAA+M,IACA/M,KAAAkN,aAAArL,EAAA8F,YACA3H,KAAA8M,SACA9M,KAAAkN,aAAArL,EAAA4F,WAEAzH,KAAAkN,aAAAlN,KAAAiN,YAGAjN,KAAAsL,iBAAA3J,KACA3B,KAAAsL,OAAAnH,KAAA5C,UAAAvB,KAAAW,MAAAX,KAAAkN,cAEAhI,EAAA3D,UAAA4K,QAAA5L,KAAAP,OAuBAwM,EAAA9L,EAAA,SAAAsN,EAAAC,EAAAC,EAAAhB,GAUA,MAPA,kBAAAe,GACAA,EAAApM,EAAAqC,aAAA+J,GAAAtN,KAGAsN,GAAA,gBAAAA,KACAA,EAAApM,EAAA+C,aAAAqJ,GAAAtN,MAEA,SAAAY,EAAA4M,GACAtM,EAAAqC,aAAA3C,EAAAgE,aACAf,IAAA,GAAAgI,GAAA2B,EAAAH,EAAAC,EAAAC,GAAsEE,QAAAlB,OAiBtEV,EAAA1B,WAAA,SAAAuD,GACA1M,EAAA0M,IPilCM,SAAUzO,EAAQD,EAASO,GAEjC,YQv5CA,SAAAoO,GAAAhM,EAAAuD,GACA,GAAAvD,KAAAE,OAAA,CAGA,OADAgG,MACAnI,EAAA,EAAmBA,EAAAiC,EAAAE,SAAkBnC,EACrCmI,EAAAlG,EAAAjC,GAAAM,MAAA2B,EAAAjC,GAAAuF,OAAAC,EACA,OAAA2C,IA4CA,QAAA/C,GAAA9E,EAAAoE,GACAG,EAAA3E,KAAAP,KAAAW,EAAAoE,GAMA/E,KAAAuO,WAAA1L,GAOA7C,KAAAwO,aAAA,KAGA,QAAAC,GAAAC,GAEA,MADAA,GAAAF,aAAA,KACAE,EAhHA9O,EAAAD,QAAA8F,CAGA,IAAAP,GAAAhF,EAAA,KACAuF,EAAAlE,UAAAT,OAAAuE,OAAAH,EAAA3D,YAAAgE,YAAAE,GAAAD,UAAA,WAEA,IAIA7D,GACAgN,EALA/M,EAAA1B,EAAA,GACAsM,EAAAtM,EAAA,GACA2B,EAAA3B,EAAA,EAwBAuF,GAAAC,SAAA,SAAA/E,EAAAgF,GACA,UAAAF,GAAA9E,EAAAgF,EAAAZ,SAAA6J,QAAAjJ,EAAA4I,SAmBA9I,EAAA6I,cAQA7I,EAAAU,aAAA,SAAAb,EAAArB,GACA,GAAAqB,EACA,OAAAjF,GAAA,EAAuBA,EAAAiF,EAAA9C,SAAqBnC,EAC5C,mBAAAiF,GAAAjF,IAAAiF,EAAAjF,GAAA,IAAA4D,GAAAqB,EAAAjF,GAAA,IAAA4D,EACA,QACA,WASAwB,EAAAW,eAAA,SAAAd,EAAA3E,GACA,GAAA2E,EACA,OAAAjF,GAAA,EAAuBA,EAAAiF,EAAA9C,SAAqBnC,EAC5C,GAAAiF,EAAAjF,KAAAM,EACA,QACA,WA0CAG,OAAAC,eAAA0E,EAAAlE,UAAA,eACAL,IAAA,WACA,MAAAlB,MAAAwO,eAAAxO,KAAAwO,aAAA3M,EAAAO,QAAApC,KAAAuO,YA6BA9I,EAAAlE,UAAAqE,OAAA,SAAAC,GACA,MAAAhE,GAAAa,UACA,UAAA1C,KAAA+E,QACA,SAAAuJ,EAAAtO,KAAA6O,YAAAhJ,MASAJ,EAAAlE,UAAAqN,QAAA,SAAAE,GACA,GAAAC,GAAA/O,IAEA,IAAA8O,EACA,OAAAP,GAAAS,EAAAlO,OAAAuB,KAAAyM,GAAAzO,EAAA,EAAgEA,EAAA2O,EAAAxM,SAAkBnC,EAClFkO,EAAAO,EAAAE,EAAA3O,IACA0O,EAAAvK,SACA3B,KAAA0L,EAAAU,OACAtN,EAAA+D,aACA7C,KAAA0L,EAAAzJ,OACAlD,EAAA8D,aACA7C,KAAA0L,EAAAW,QACAP,EAAAjJ,aACA7C,KAAA0L,EAAAtK,GACAuI,EAAA9G,SACAD,EAAAC,UAAAsJ,EAAA3O,GAAAkO,GAIA,OAAAvO,OAQAyF,EAAAlE,UAAAL,IAAA,SAAAP,GACA,MAAAX,MAAAuO,QAAAvO,KAAAuO,OAAA5N,IACA,MAUA8E,EAAAlE,UAAA4N,QAAA,SAAAxO,GACA,GAAAX,KAAAuO,QAAAvO,KAAAuO,OAAA5N,YAAAiB,GACA,MAAA5B,MAAAuO,OAAA5N,GAAAmE,MACA,MAAAoB,OAAA,iBAAAvF,IAUA8E,EAAAlE,UAAAiD,IAAA,SAAAnD,GAEA,KAAAA,YAAAmL,QAAA3J,KAAAxB,EAAAqL,QAAArL,YAAAM,IAAAN,YAAAO,IAAAP,YAAAsN,IAAAtN,YAAAoE,IACA,KAAAN,WAAA,uCAEA,IAAAnF,KAAAuO,OAEA,CACA,GAAAa,GAAApP,KAAAkB,IAAAG,EAAAV,KACA,IAAAyO,EAAA,CACA,KAAAA,YAAA3J,IAAApE,YAAAoE,KAAA2J,YAAAzN,IAAAyN,YAAAT,GAWA,KAAAzI,OAAA,mBAAA7E,EAAAV,KAAA,QAAAX,KARA,QADAuO,GAAAa,EAAAP,YACAxO,EAAA,EAA+BA,EAAAkO,EAAA/L,SAAmBnC,EAClDgB,EAAAmD,IAAA+J,EAAAlO,GACAL,MAAAuE,OAAA6K,GACApP,KAAAuO,SACAvO,KAAAuO,WACAlN,EAAAiL,WAAA8C,EAAArK,SAAA,QAZA/E,MAAAuO,SAoBA,OAFAvO,MAAAuO,OAAAlN,EAAAV,MAAAU,EACAA,EAAA0K,MAAA/L,MACAyO,EAAAzO,OAUAyF,EAAAlE,UAAAgD,OAAA,SAAAlD,GAEA,KAAAA,YAAA6D,IACA,KAAAC,WAAA,oCACA,IAAA9D,EAAAiK,SAAAtL,KACA,KAAAkG,OAAA7E,EAAA,uBAAArB,KAOA,cALAA,MAAAuO,OAAAlN,EAAAV,MACAG,OAAAuB,KAAArC,KAAAuO,QAAA/L,SACAxC,KAAAuO,WAAA1L,IAEAxB,EAAA4K,SAAAjM,MACAyO,EAAAzO,OASAyF,EAAAlE,UAAA1B,OAAA,SAAAoC,EAAA0D,GAEA,GAAA9D,EAAAmE,SAAA/D,GACAA,IAAAoN,MAAA,SACA,KAAA9M,MAAAkG,QAAAxG,GACA,KAAAkD,WAAA,eACA,IAAAlD,KAAAO,QAAA,KAAAP,EAAA,GACA,KAAAiE,OAAA,wBAGA,KADA,GAAAyF,GAAA3L,KACAiC,EAAAO,OAAA,IACA,GAAA8M,GAAArN,EAAAsN,OACA,IAAA5D,EAAA4C,QAAA5C,EAAA4C,OAAAe,IAEA,MADA3D,IAAA4C,OAAAe,aACA7J,IACA,KAAAS,OAAA,iDAEAyF,GAAAnH,IAAAmH,EAAA,GAAAlG,GAAA6J,IAIA,MAFA3J,IACAgG,EAAAiD,QAAAjJ,GACAgG,GAOAlG,EAAAlE,UAAAiO,WAAA,WAEA,IADA,GAAAjB,GAAAvO,KAAA6O,YAAAxO,EAAA,EACAA,EAAAkO,EAAA/L,QACA+L,EAAAlO,YAAAoF,GACA8I,EAAAlO,KAAAmP,aAEAjB,EAAAlO,KAAA8L,SACA,OAAAnM,MAAAmM,WAUA1G,EAAAlE,UAAAkO,OAAA,SAAAxN,EAAAyN,EAAAC,GASA,GANA,iBAAAD,IACAC,EAAAD,EACAA,MAAA7M,IACK6M,IAAAnN,MAAAkG,QAAAiH,KACLA,OAEA7N,EAAAmE,SAAA/D,MAAAO,OAAA,CACA,SAAAP,EACA,MAAAjC,MAAAP,IACAwC,KAAAoN,MAAA,SACK,KAAApN,EAAAO,OACL,MAAAxC,KAGA,SAAAiC,EAAA,GACA,MAAAjC,MAAAP,KAAAgQ,OAAAxN,EAAA2N,MAAA,GAAAF,EAGA,IAAAG,GAAA7P,KAAAkB,IAAAe,EAAA,GACA,IAAA4N,GACA,OAAA5N,EAAAO,QACA,IAAAkN,KAAAI,QAAAD,EAAAtK,cAAA,EACA,MAAAsK,OACS,IAAAA,YAAApK,KAAAoK,IAAAJ,OAAAxN,EAAA2N,MAAA,GAAAF,GAAA,IACT,MAAAG,OAIA,QAAAxP,GAAA,EAAuBA,EAAAL,KAAA6O,YAAArM,SAA6BnC,EACpD,GAAAL,KAAAwO,aAAAnO,YAAAoF,KAAAoK,EAAA7P,KAAAwO,aAAAnO,GAAAoP,OAAAxN,EAAAyN,GAAA,IACA,MAAAG,EAGA,eAAA7P,KAAAsL,QAAAqE,EACA,KACA3P,KAAAsL,OAAAmE,OAAAxN,EAAAyN,IAqBAjK,EAAAlE,UAAAwO,WAAA,SAAA9N,GACA,GAAA4N,GAAA7P,KAAAyP,OAAAxN,GAAAN,GACA,KAAAkO,EACA,KAAA3J,OAAA,iBAAAjE,EACA,OAAA4N,IAUApK,EAAAlE,UAAAyO,WAAA,SAAA/N,GACA,GAAA4N,GAAA7P,KAAAyP,OAAAxN,GAAAL,GACA,KAAAiO,EACA,KAAA3J,OAAA,iBAAAjE,EAAA,QAAAjC,KACA,OAAA6P,IAUApK,EAAAlE,UAAAmM,iBAAA,SAAAzL,GACA,GAAA4N,GAAA7P,KAAAyP,OAAAxN,GAAAN,EAAAC,GACA,KAAAiO,EACA,KAAA3J,OAAA,yBAAAjE,EAAA,QAAAjC,KACA,OAAA6P,IAUApK,EAAAlE,UAAA0O,cAAA,SAAAhO,GACA,GAAA4N,GAAA7P,KAAAyP,OAAAxN,GAAA0M,GACA,KAAAkB,EACA,KAAA3J,OAAA,oBAAAjE,EAAA,QAAAjC,KACA,OAAA6P,IAGApK,EAAAqF,WAAA,SAAAuD,EAAA6B,GACAvO,EAAA0M,EACAM,EAAAuB,IR08CM,SAAUtQ,EAAQD,EAASO,GAEjC,YS71DA,SAAAiQ,GAAArL,EAAAsL,GACA,GAAA/P,GAAA,EAAAQ,IAEA,KADAuP,GAAA,EACA/P,EAAAyE,EAAAtC,QAAA3B,EAAAa,EAAArB,EAAA+P,IAAAtL,EAAAzE,IACA,OAAAQ,GA1BA,GAAAuM,GAAAzN,EAEAkC,EAAA3B,EAAA,GAEAwB,GACA,SACA,QACA,QACA,SACA,SACA,UACA,WACA,QACA,SACA,SACA,UACA,WACA,OACA,SACA,QA8BA0L,GAAAiD,MAAAF,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAwBA/C,EAAAK,SAAA0C,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACAtO,EAAA4F,WACA,OAaA2F,EAAAD,KAAAgD,GACA,EACA,EACA,EACA,EACA,GACA,GAmBA/C,EAAAkD,OAAAH,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GAoBA/C,EAAAO,OAAAwC,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,KTg4DM,SAAUvQ,EAAQD,EAASO,GAEjC,cAC4B,SAASoG,GAErCxF,OAAOC,eAAepB,EAAS,cAC7B+E,OAAO,GUxkEF,IAWM6L,IAXAC,aAAa,SAAU9L,EAAO+L,GACzC,MAAwC,KAAjC/L,EAAMgM,YAAYD,EAAQ,IAGtBzK,WAAW,SAAUtB,GAChC,WAAc7B,KAAV6B,GAAiC,OAAVA,IAGH,gBAAVA,IAAsBA,YAAiB0D,UAG1CmI,aAAa,SAAU7L,GAClC,WAAc7B,KAAV6B,GAAiC,OAAVA,GAGH,kBAAVA,IAGHiM,OAAM,SAAUC,EAAOC,GAClC,GAAIvK,EAAOwK,QAAS,CAClB,GAAMC,GAASzK,EAAOwK,QAAQF,EAE1BL,GAAWQ,IACbA,EAAOC,MAAM1K,EAAOwK,QAASD,KAKtBI,UAAU,SAAUC,EAAMC,EAAKC,GAC1C,GAAIC,GAAS,GAAMnJ,KAAKoJ,SACpBC,EAAWJ,EAAMjJ,KAAKsJ,IAAI,EAAGN,EAAO,EAKxC,OAHIK,GAAWH,IACbG,EAAWH,GAENlJ,KAAKC,OAAO,EAAIkJ,GAAUE,IAGtBE,cAAc,SAAUC,GACnC,MAAO,SAAWA,IAAuB,OAAfA,EAAKC,SV4kEJpR,KAAKZ,EAASO,EAAoB,KAIzD,SAAUN,EAAQD,GWlmExB,QAAAyH,KACApH,KAAA4R,QAAA5R,KAAA4R,YACA5R,KAAA6R,cAAA7R,KAAA6R,mBAAAhP,GAwQA,QAAA0N,GAAAuB,GACA,wBAAAA,GAGA,QAAAC,GAAAD,GACA,sBAAAA,GAGA,QAAAzJ,GAAAyJ,GACA,sBAAAA,IAAA,OAAAA,EAGA,QAAAE,GAAAF,GACA,gBAAAA,EAnRAlS,EAAAD,QAAAyH,EAGAA,iBAEAA,EAAA7F,UAAAqQ,YAAA/O,GACAuE,EAAA7F,UAAAsQ,kBAAAhP,GAIAuE,EAAA6K,oBAAA,GAIA7K,EAAA7F,UAAA2Q,gBAAA,SAAA/Q,GACA,IAAA4Q,EAAA5Q,MAAA,GAAAgR,MAAAhR,GACA,KAAAgE,WAAA,8BAEA,OADAnF,MAAA6R,cAAA1Q,EACAnB,MAGAoH,EAAA7F,UAAA6Q,KAAA,SAAA3N,GACA,GAAA4N,GAAAC,EAAAC,EAAA1B,EAAAxQ,EAAAmS,CAMA,IAJAxS,KAAA4R,UACA5R,KAAA4R,YAGA,UAAAnN,KACAzE,KAAA4R,QAAAD,OACAtJ,EAAArI,KAAA4R,QAAAD,SAAA3R,KAAA4R,QAAAD,MAAAnP,QAAA,CAEA,IADA6P,EAAAI,UAAA,aACAvM,OACA,KAAAmM,EAGA,IAAAK,GAAA,GAAAxM,OAAA,yCAAAmM,EAAA,IAEA,MADAK,GAAAC,QAAAN,EACAK,EAOA,GAFAJ,EAAAtS,KAAA4R,QAAAnN,GAEAuN,EAAAM,GACA,QAEA,IAAA/B,EAAA+B,GACA,OAAAG,UAAAjQ,QAEA,OACA8P,EAAA/R,KAAAP,KACA,MACA,QACAsS,EAAA/R,KAAAP,KAAAyS,UAAA,GACA,MACA,QACAH,EAAA/R,KAAAP,KAAAyS,UAAA,GAAAA,UAAA,GACA,MAEA,SACA5B,EAAAtO,MAAAhB,UAAAqO,MAAArP,KAAAkS,UAAA,GACAH,EAAAtB,MAAAhR,KAAA6Q,OAEG,IAAAxI,EAAAiK,GAIH,IAHAzB,EAAAtO,MAAAhB,UAAAqO,MAAArP,KAAAkS,UAAA,GACAD,EAAAF,EAAA1C,QACA2C,EAAAC,EAAAhQ,OACAnC,EAAA,EAAeA,EAAAkS,EAASlS,IACxBmS,EAAAnS,GAAA2Q,MAAAhR,KAAA6Q,EAGA,WAGAzJ,EAAA7F,UAAAqR,YAAA,SAAAnO,EAAAoO,GACA,GAAArS,EAEA,KAAA+P,EAAAsC,GACA,KAAA1N,WAAA,8BA2CA,OAzCAnF,MAAA4R,UACA5R,KAAA4R,YAIA5R,KAAA4R,QAAAkB,aACA9S,KAAAoS,KAAA,cAAA3N,EACA8L,EAAAsC,YACAA,cAEA7S,KAAA4R,QAAAnN,GAGA4D,EAAArI,KAAA4R,QAAAnN,IAEAzE,KAAA4R,QAAAnN,GAAAsO,KAAAF,GAGA7S,KAAA4R,QAAAnN,IAAAzE,KAAA4R,QAAAnN,GAAAoO,GANA7S,KAAA4R,QAAAnN,GAAAoO,EASAxK,EAAArI,KAAA4R,QAAAnN,MAAAzE,KAAA4R,QAAAnN,GAAAuO,SAIAxS,EAHAwR,EAAAhS,KAAA6R,eAGAzK,EAAA6K,oBAFAjS,KAAA6R,gBAKArR,EAAA,GAAAR,KAAA4R,QAAAnN,GAAAjC,OAAAhC,IACAR,KAAA4R,QAAAnN,GAAAuO,QAAA,EACAlC,QAAAa,MAAA,mIAGA3R,KAAA4R,QAAAnN,GAAAjC,QACA,kBAAAsO,SAAAmC,OAEAnC,QAAAmC,SAKAjT,MAGAoH,EAAA7F,UAAA2R,GAAA9L,EAAA7F,UAAAqR,YAEAxL,EAAA7F,UAAA4R,KAAA,SAAA1O,EAAAoO,GAMA,QAAA3H,KACAlL,KAAAoT,eAAA3O,EAAAyG,GAEAmI,IACAA,GAAA,EACAR,EAAA7B,MAAAhR,KAAAyS,YAVA,IAAAlC,EAAAsC,GACA,KAAA1N,WAAA,8BAEA,IAAAkO,IAAA,CAcA,OAHAnI,GAAA2H,WACA7S,KAAAkT,GAAAzO,EAAAyG,GAEAlL,MAIAoH,EAAA7F,UAAA6R,eAAA,SAAA3O,EAAAoO,GACA,GAAAS,GAAAC,EAAA/Q,EAAAnC,CAEA,KAAAkQ,EAAAsC,GACA,KAAA1N,WAAA,8BAEA,KAAAnF,KAAA4R,UAAA5R,KAAA4R,QAAAnN,GACA,MAAAzE,KAMA,IAJAsT,EAAAtT,KAAA4R,QAAAnN,GACAjC,EAAA8Q,EAAA9Q,OACA+Q,GAAA,EAEAD,IAAAT,GACAtC,EAAA+C,EAAAT,WAAAS,EAAAT,mBACA7S,MAAA4R,QAAAnN,GACAzE,KAAA4R,QAAAwB,gBACApT,KAAAoS,KAAA,iBAAA3N,EAAAoO,OAEG,IAAAxK,EAAAiL,GAAA,CACH,IAAAjT,EAAAmC,EAAoBnC,KAAA,GACpB,GAAAiT,EAAAjT,KAAAwS,GACAS,EAAAjT,GAAAwS,UAAAS,EAAAjT,GAAAwS,aAAA,CACAU,EAAAlT,CACA,OAIA,GAAAkT,EAAA,EACA,MAAAvT,KAEA,KAAAsT,EAAA9Q,QACA8Q,EAAA9Q,OAAA,QACAxC,MAAA4R,QAAAnN,IAEA6O,EAAAE,OAAAD,EAAA,GAGAvT,KAAA4R,QAAAwB,gBACApT,KAAAoS,KAAA,iBAAA3N,EAAAoO,GAGA,MAAA7S,OAGAoH,EAAA7F,UAAAkS,mBAAA,SAAAhP,GACA,GAAA9B,GAAA6P,CAEA,KAAAxS,KAAA4R,QACA,MAAA5R,KAGA,KAAAA,KAAA4R,QAAAwB,eAKA,MAJA,KAAAX,UAAAjQ,OACAxC,KAAA4R,WACA5R,KAAA4R,QAAAnN,UACAzE,MAAA4R,QAAAnN,GACAzE,IAIA,QAAAyS,UAAAjQ,OAAA,CACA,IAAAG,IAAA3C,MAAA4R,QACA,mBAAAjP,GACA3C,KAAAyT,mBAAA9Q,EAIA,OAFA3C,MAAAyT,mBAAA,kBACAzT,KAAA4R,WACA5R,KAKA,GAFAwS,EAAAxS,KAAA4R,QAAAnN,GAEA8L,EAAAiC,GACAxS,KAAAoT,eAAA3O,EAAA+N,OACG,IAAAA,EAEH,KAAAA,EAAAhQ,QACAxC,KAAAoT,eAAA3O,EAAA+N,IAAAhQ,OAAA,GAIA,cAFAxC,MAAA4R,QAAAnN,GAEAzE,MAGAoH,EAAA7F,UAAAiR,UAAA,SAAA/N,GAQA,MANAzE,MAAA4R,SAAA5R,KAAA4R,QAAAnN,GAEA8L,EAAAvQ,KAAA4R,QAAAnN,KACAzE,KAAA4R,QAAAnN,IAEAzE,KAAA4R,QAAAnN,GAAAmL,YAIAxI,EAAA7F,UAAAmS,cAAA,SAAAjP,GACA,GAAAzE,KAAA4R,QAAA,CACA,GAAA+B,GAAA3T,KAAA4R,QAAAnN,EAEA,IAAA8L,EAAAoD,GACA,QACA,IAAAA,EACA,MAAAA,GAAAnR,OAEA,UAGA4E,EAAAsM,cAAA,SAAAE,EAAAnP,GACA,MAAAmP,GAAAF,cAAAjP,KX+oEM,SAAU7E,EAAQD,EAASO,IY36EjC,SAAA2H,EAAAvB;;;;;;;CAQA,SAAAA,EAAA5G,GACAE,EAAAD,QAAAD,KAGCM,EAAA,WAAqB,YAEtB,SAAA6T,GAAAC,GACA,GAAArP,SAAAqP,EACA,eAAAA,IAAA,WAAArP,GAAA,aAAAA,GAGA,QAAA8L,GAAAuD,GACA,wBAAAA,GAoCA,QAAAC,GAAAC,GACAC,EAAAD,EAGA,QAAAE,GAAAC,GACAC,EAAAD,EAqBA,QAAAE,KACA,gBAAAC,EACA,WACAA,EAAAC,IAIAC,IAuBA,QAAAA,KAGA,GAAAC,GAAAC,UACA,mBACA,MAAAD,GAAAF,EAAA,IAKA,QAAAA,KACA,OAAAlU,GAAA,EAAiBA,EAAAkS,EAASlS,GAAA,IAI1BsU,EAHAC,EAAAvU,IACAuU,EAAAvU,EAAA,IAIAuU,EAAAvU,OAAAwC,GACA+R,EAAAvU,EAAA,OAAAwC,GAGA0P,EAAA,EA2BA,QAAAsC,GAAAC,EAAAC,GACA,GAAAzJ,GAAAtL,KAEAgV,EAAA,GAAAhV,MAAAuF,YAAA0P,OAEApS,KAAAmS,EAAAE,IACAC,EAAAH,EAGA,IAAAI,GAAA9J,EAAA8J,MAGA,IAAAA,EAAA,CACA,GAAAT,GAAAlC,UAAA2C,EAAA,EACAhB,GAAA,WACA,MAAAiB,GAAAD,EAAAJ,EAAAL,EAAArJ,EAAAgK,eAGAC,GAAAjK,EAAA0J,EAAAF,EAAAC,EAGA,OAAAC,GAkCA,QAAAQ,GAAAnU,GAEA,GAAAoU,GAAAzV,IAEA,IAAAqB,GAAA,gBAAAA,MAAAkE,cAAAkQ,EACA,MAAApU,EAGA,IAAAqU,GAAA,GAAAD,GAAAR,EAEA,OADA9I,GAAAuJ,EAAArU,GACAqU,EAKA,QAAAT,MAQA,QAAAU,KACA,UAAAxQ,WAAA,4CAGA,QAAAyQ,KACA,UAAAzQ,WAAA,wDAGA,QAAA0Q,GAAAH,GACA,IACA,MAAAA,GAAAb,KACG,MAAAlD,GAEH,MADAmE,IAAAnE,QACAmE,IAIA,QAAAC,GAAAC,EAAAtR,EAAAuR,EAAAC,GACA,IACAF,EAAAzV,KAAAmE,EAAAuR,EAAAC,GACG,MAAAtN,GACH,MAAAA,IAIA,QAAAuN,GAAAT,EAAAU,EAAAJ,GACA5B,EAAA,SAAAsB,GACA,GAAAW,IAAA,EACA1E,EAAAoE,EAAAC,EAAAI,EAAA,SAAA1R,GACA2R,IAGAA,GAAA,EACAD,IAAA1R,EACAyH,EAAAuJ,EAAAhR,GAEA4R,EAAAZ,EAAAhR,KAEK,SAAA6R,GACLF,IAGAA,GAAA,EAEAG,EAAAd,EAAAa,KACK,YAAAb,EAAAe,QAAA,sBAELJ,GAAA1E,IACA0E,GAAA,EACAG,EAAAd,EAAA/D,KAEG+D,GAGH,QAAAgB,GAAAhB,EAAAU,GACAA,EAAAhB,SAAAuB,EACAL,EAAAZ,EAAAU,EAAAd,SACGc,EAAAhB,SAAAwB,EACHJ,EAAAd,EAAAU,EAAAd,SAEAC,EAAAa,MAAAvT,GAAA,SAAA6B,GACA,MAAAyH,GAAAuJ,EAAAhR,IACK,SAAA6R,GACL,MAAAC,GAAAd,EAAAa,KAKA,QAAAM,GAAAnB,EAAAoB,EAAAd,GACAc,EAAAvR,cAAAmQ,EAAAnQ,aAAAyQ,IAAAnB,GAAAiC,EAAAvR,YAAA4G,UAAAqJ,EACAkB,EAAAhB,EAAAoB,GAEAd,IAAAF,IACAU,EAAAd,EAAAI,GAAAnE,OACAmE,GAAAnE,MAAA,UACK9O,KAAAmT,EACLM,EAAAZ,EAAAoB,GACKvG,EAAAyF,GACLG,EAAAT,EAAAoB,EAAAd,GAEAM,EAAAZ,EAAAoB,GAKA,QAAA3K,GAAAuJ,EAAAhR,GACAgR,IAAAhR,EACA8R,EAAAd,EAAAC,KACG9B,EAAAnP,GACHmS,EAAAnB,EAAAhR,EAAAmR,EAAAnR,IAEA4R,EAAAZ,EAAAhR,GAIA,QAAAqS,GAAArB,GACAA,EAAAsB,UACAtB,EAAAsB,SAAAtB,EAAAJ,SAGA2B,EAAAvB,GAGA,QAAAY,GAAAZ,EAAAhR,GACAgR,EAAAN,SAAA8B,IAIAxB,EAAAJ,QAAA5Q,EACAgR,EAAAN,OAAAuB,EAEA,IAAAjB,EAAAyB,aAAA3U,QACA4R,EAAA6C,EAAAvB,IAIA,QAAAc,GAAAd,EAAAa,GACAb,EAAAN,SAAA8B,IAGAxB,EAAAN,OAAAwB,EACAlB,EAAAJ,QAAAiB,EAEAnC,EAAA2C,EAAArB,IAGA,QAAAH,GAAAjK,EAAA0J,EAAAF,EAAAC,GACA,GAAAoC,GAAA7L,EAAA6L,aACA3U,EAAA2U,EAAA3U,MAGA8I,GAAA0L,SAAA,KAEAG,EAAA3U,GAAAwS,EACAmC,EAAA3U,EAAAmU,GAAA7B,EACAqC,EAAA3U,EAAAoU,GAAA7B,EAEA,IAAAvS,GAAA8I,EAAA8J,QACAhB,EAAA6C,EAAA3L,GAIA,QAAA2L,GAAAvB,GACA,GAAA0B,GAAA1B,EAAAyB,aACAE,EAAA3B,EAAAN,MAEA,QAAAgC,EAAA5U,OAAA,CAQA,OAJAwS,OAAA,GACAL,MAAA,GACA2C,EAAA5B,EAAAJ,QAEAjV,EAAA,EAAiBA,EAAA+W,EAAA5U,OAAwBnC,GAAA,EACzC2U,EAAAoC,EAAA/W,GACAsU,EAAAyC,EAAA/W,EAAAgX,GAEArC,EACAK,EAAAgC,EAAArC,EAAAL,EAAA2C,GAEA3C,EAAA2C,EAIA5B,GAAAyB,aAAA3U,OAAA,GAGA,QAAA+U,GAAA5C,EAAA2C,GACA,IACA,MAAA3C,GAAA2C,GACG,MAAA1O,GAEH,MADAkN,IAAAnE,MAAA/I,EACAkN,IAIA,QAAAT,GAAAgC,EAAA3B,EAAAf,EAAA2C,GACA,GAAAE,GAAAjH,EAAAoE,GACAjQ,MAAA,GACAiN,MAAA,GACA8F,MAAA,GACAC,MAAA,EAEA,IAAAF,GAWA,GAVA9S,EAAA6S,EAAA5C,EAAA2C,GAEA5S,IAAAoR,IACA4B,GAAA,EACA/F,EAAAjN,EAAAiN,MACAjN,EAAAiN,MAAA,MAEA8F,GAAA,EAGA/B,IAAAhR,EAEA,WADA8R,GAAAd,EAAAE,SAIAlR,GAAA4S,EACAG,GAAA,CAGA/B,GAAAN,SAAA8B,IAEGM,GAAAC,EACHtL,EAAAuJ,EAAAhR,GACGgT,EACHlB,EAAAd,EAAA/D,GACG0F,IAAAV,EACHL,EAAAZ,EAAAhR,GACG2S,IAAAT,GACHJ,EAAAd,EAAAhR,IAIA,QAAAiT,GAAAjC,EAAAkC,GACA,IACAA,EAAA,SAAAlT,GACAyH,EAAAuJ,EAAAhR,IACK,SAAA6R,GACLC,EAAAd,EAAAa,KAEG,MAAA3N,GACH4N,EAAAd,EAAA9M,IAKA,QAAAiP,KACA,MAAA5T,MAGA,QAAAkR,GAAAO,GACAA,EAAAR,GAAAjR,KACAyR,EAAAN,WAAAvS,GACA6S,EAAAJ,YAAAzS,GACA6S,EAAAyB,gBAGA,QAAAW,KACA,UAAA5R,OAAA,2CAgJA,QAAA6R,GAAAC,GACA,UAAAC,IAAAjY,KAAAgY,GAAAtC,QAoEA,QAAAwC,GAAAF,GAEA,GAAAvC,GAAAzV,IAEA,OAKA,IAAAyV,GALAhN,EAAAuP,GAKA,SAAA7L,EAAAqK,GAEA,OADAhU,GAAAwV,EAAAxV,OACAnC,EAAA,EAAqBA,EAAAmC,EAAYnC,IACjCoV,EAAAtJ,QAAA6L,EAAA3X,IAAAwU,KAAA1I,EAAAqK,IAPA,SAAA2B,EAAA3B,GACA,MAAAA,GAAA,GAAArR,WAAA,sCA8CA,QAAAiT,GAAA7B,GAEA,GAAAd,GAAAzV,KACA0V,EAAA,GAAAD,GAAAR,EAEA,OADAuB,GAAAd,EAAAa,GACAb,EAGA,QAAA2C,KACA,SAAAlT,WAAA,sFAGA,QAAAmT,KACA,SAAAnT,WAAA,yHAyXA,QAAAoT,KACA,GAAAC,OAAA,EAEA,aAAAlS,EACAkS,EAAAlS,MACG,uBAAAvG,MACHyY,EAAAzY,SAEA,KACAyY,EAAArN,SAAA,iBACK,MAAAvC,GACL,SAAA1C,OAAA,4EAIA,GAAAuS,GAAAD,EAAAE,OAEA,IAAAD,EAAA,CACA,GAAAE,GAAA,IACA,KACAA,EAAA7X,OAAAS,UAAA0F,SAAA1G,KAAAkY,EAAAtM,WACK,MAAAvD,IAIL,wBAAA+P,IAAAF,EAAAG,KACA,OAIAJ,EAAAE,QAAAG,GApnCA,GAAAC,OAAA,EAEAA,GADAvW,MAAAkG,QACAlG,MAAAkG,QAEA,SAAAqL,GACA,yBAAAhT,OAAAS,UAAA0F,SAAA1G,KAAAuT,GAIA,IAAArL,GAAAqQ,EAEAvG,EAAA,EACA+B,MAAA,GACAL,MAAA,GAEAG,EAAA,SAAAO,EAAA7C,GACA8C,EAAArC,GAAAoC,EACAC,EAAArC,EAAA,GAAAT,EAEA,KADAS,GAAA,KAKA0B,EACAA,EAAAM,GAEAwE,MAaAC,EAAA,mBAAA3N,mBAAAxI,GACAoW,EAAAD,MACAE,EAAAD,EAAAE,kBAAAF,EAAAG,uBACAxR,EAAA,mBAAA7H,WAAA,KAAA8H,GAAgF,wBAAAZ,SAAA1G,KAAAsH,GAGhFwR,EAAA,mBAAAC,oBAAA,mBAAAC,gBAAA,mBAAAC,gBAmDA5E,EAAA,GAAArS,OAAA,KAyBAwW,MAAA,EAGAA,GADAnR,EA3EA,WAGA,kBACA,MAAAC,GAAA4R,SAAAlF,OAyEC2E,EA1DD,WACA,GAAAQ,GAAA,EACAC,EAAA,GAAAT,GAAA3E,GACAxM,EAAA6R,SAAAC,eAAA,GAGA,OAFAF,GAAAG,QAAA/R,GAA0BgS,eAAA,IAE1B,WACAhS,EAAA2J,KAAAgI,MAAA,MAqDCL,EAhDD,WACA,GAAAW,GAAA,GAAAR,eAEA,OADAQ,GAAAC,MAAAC,UAAA3F,EACA,WACA,MAAAyF,GAAAG,MAAAC,YAAA,WA8CCvX,KAAAmW,EAlBD,WACA,IACA,GAAAqB,GAAAlP,SAAA,iBAAAmP,QAAA,QAEA,OADAhG,GAAA+F,EAAAE,WAAAF,EAAAG,aACAnG,IACG,MAAAzL,GACH,MAAA4L,SAeAA,GAuEA,IAAAU,GAAAhN,KAAAoJ,SAAArK,SAAA,IAAAxD,UAAA,GAIAyT,MAAA,GACAP,EAAA,EACAC,EAAA,EAEAd,IAAuBnE,MAAA,MAuOvB1N,GAAA,EAgBAgU,GAAA,WACA,QAAAA,GAAAxC,EAAAgF,GACAza,KAAA0a,qBAAAjF,EACAzV,KAAA0V,QAAA,GAAAD,GAAAR,GAEAjV,KAAA0V,QAAAR,IACAC,EAAAnV,KAAA0V,SAGAjN,EAAAgS,IACAza,KAAAwC,OAAAiY,EAAAjY,OACAxC,KAAA2a,WAAAF,EAAAjY,OAEAxC,KAAAsV,QAAA,GAAA/S,OAAAvC,KAAAwC,QAEA,IAAAxC,KAAAwC,OACA8T,EAAAtW,KAAA0V,QAAA1V,KAAAsV,UAEAtV,KAAAwC,OAAAxC,KAAAwC,QAAA,EACAxC,KAAA4a,WAAAH,GACA,IAAAza,KAAA2a,YACArE,EAAAtW,KAAA0V,QAAA1V,KAAAsV,WAIAkB,EAAAxW,KAAA0V,QAAAoC,KAkEA,MA9DAG,GAAA1W,UAAAqZ,WAAA,SAAAH,GACA,OAAApa,GAAA,EAAmBL,KAAAoV,SAAA8B,GAAA7W,EAAAoa,EAAAjY,OAA6CnC,IAChEL,KAAA6a,WAAAJ,EAAApa,OAIA4X,EAAA1W,UAAAsZ,WAAA,SAAAC,EAAAza,GACA,GAAAI,GAAAT,KAAA0a,qBACAK,EAAAta,EAAA0L,OAGA,IAAA4O,IAAAvF,EAAA,CACA,GAAAwF,GAAAnF,EAAAiF,EAEA,IAAAE,IAAAnG,GAAAiG,EAAA1F,SAAA8B,EACAlX,KAAAib,WAAAH,EAAA1F,OAAA/U,EAAAya,EAAAxF,aACO,sBAAA0F,GACPhb,KAAA2a,aACA3a,KAAAsV,QAAAjV,GAAAya,MACO,IAAAra,IAAAoY,GAAA,CACP,GAAAnD,GAAA,GAAAjV,GAAAwU,EACA4B,GAAAnB,EAAAoF,EAAAE,GACAhb,KAAAkb,cAAAxF,EAAArV,OAEAL,MAAAkb,cAAA,GAAAza,GAAA,SAAAsa,GACA,MAAAA,GAAAD,KACSza,OAGTL,MAAAkb,cAAAH,EAAAD,GAAAza,IAIA4X,EAAA1W,UAAA0Z,WAAA,SAAAE,EAAA9a,EAAAqE,GACA,GAAAgR,GAAA1V,KAAA0V,OAGAA,GAAAN,SAAA8B,IACAlX,KAAA2a,aAEAQ,IAAAvE,EACAJ,EAAAd,EAAAhR,GAEA1E,KAAAsV,QAAAjV,GAAAqE,GAIA,IAAA1E,KAAA2a,YACArE,EAAAZ,EAAA1V,KAAAsV,UAIA2C,EAAA1W,UAAA2Z,cAAA,SAAAxF,EAAArV,GACA,GAAA+a,GAAApb,IAEAuV,GAAAG,MAAA7S,GAAA,SAAA6B,GACA,MAAA0W,GAAAH,WAAAtE,EAAAtW,EAAAqE,IACK,SAAA6R,GACL,MAAA6E,GAAAH,WAAArE,EAAAvW,EAAAkW,MAIA0B,KAmSAY,GAAA,WACA,QAAAH,GAAAd,GACA5X,KAAAkV,GAAA2C,IACA7X,KAAAsV,QAAAtV,KAAAoV,WAAAvS,GACA7C,KAAAmX,gBAEAlC,IAAA2C,IACA,kBAAAA,IAAAS,IACArY,eAAA0Y,GAAAf,EAAA3X,KAAA4X,GAAAU,KAyPA,MA3DAI,GAAAnX,UAAA8Z,MAAA,SAAAtG,GACA,MAAA/U,MAAA6U,KAAA,KAAAE,IA2CA2D,EAAAnX,UAAA+Z,QAAA,SAAA3G,GACA,GAAAe,GAAA1V,KACAuF,EAAAmQ,EAAAnQ,WAEA,OAAAmQ,GAAAb,KAAA,SAAAnQ,GACA,MAAAa,GAAA4G,QAAAwI,KAAAE,KAAA,WACA,MAAAnQ,MAEK,SAAA6R,GACL,MAAAhR,GAAA4G,QAAAwI,KAAAE,KAAA,WACA,KAAA0B,QAKAmC,IAkDA,OA/CAG,IAAAtX,UAAAsT,OACAgE,GAAAd,MACAc,GAAAX,OACAW,GAAA1M,QAAAqJ,EACAqD,GAAArC,OAAA4B,EACAS,GAAA0C,cAAAxH,EACA8E,GAAA2C,SAAAtH,EACA2E,GAAA4C,MAAArH,EAqCAyE,GAAAN,WACAM,GAAAH,QAAAG,GAEAA,OZq7E6BtY,KAAKZ,EAASO,EAAoB,IAAKA,EAAoB,KAIlF,SAAUN,EAAQD,EAASO,GAEjC,Ya3jHA,SAAAwb,GAAAC,EAAApJ,EAAA3P,GAMA5C,KAAA2b,KAMA3b,KAAAuS,MAMAvS,KAAA4b,SAAA/Y,GAMA7C,KAAA4C,MAIA,QAAAqS,MAUA,QAAA4G,GAAAC,GAMA9b,KAAA+b,KAAAD,EAAAC,KAMA/b,KAAAgc,KAAAF,EAAAE,KAMAhc,KAAAuS,IAAAuJ,EAAAvJ,IAMAvS,KAAA4b,KAAAE,EAAAG,OAQA,QAAAC,KAMAlc,KAAAuS,IAAA,EAMAvS,KAAA+b,KAAA,GAAAL,GAAAzG,EAAA,KAMAjV,KAAAgc,KAAAhc,KAAA+b,KAMA/b,KAAAic,OAAA,KAqDA,QAAAE,GAAAvZ,EAAAiL,EAAAuO,GACAvO,EAAAuO,GAAA,IAAAxZ,EAGA,QAAAyZ,GAAAzZ,EAAAiL,EAAAuO,GACA,KAAAxZ,EAAA,KACAiL,EAAAuO,KAAA,IAAAxZ,EAAA,IACAA,KAAA,CAEAiL,GAAAuO,GAAAxZ,EAYA,QAAA0Z,GAAA/J,EAAA3P,GACA5C,KAAAuS,MACAvS,KAAA4b,SAAA/Y,GACA7C,KAAA4C,MA8CA,QAAA2Z,GAAA3Z,EAAAiL,EAAAuO,GACA,KAAAxZ,EAAAsH,IACA2D,EAAAuO,KAAA,IAAAxZ,EAAAqH,GAAA,IACArH,EAAAqH,IAAArH,EAAAqH,KAAA,EAAArH,EAAAsH,IAAA,QACAtH,EAAAsH,MAAA,CAEA,MAAAtH,EAAAqH,GAAA,KACA4D,EAAAuO,KAAA,IAAAxZ,EAAAqH,GAAA,IACArH,EAAAqH,GAAArH,EAAAqH,KAAA,CAEA4D,GAAAuO,KAAAxZ,EAAAqH,GA2CA,QAAAuS,GAAA5Z,EAAAiL,EAAAuO,GACAvO,EAAAuO,GAAA,IAAAxZ,EACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,MACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,OACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,GArSAhD,EAAAD,QAAAuc,CAEA,IAEAO,GAFA5a,EAAA3B,EAAA,GAIAsH,EAAA3F,EAAA2F,SACAL,EAAAtF,EAAAsF,OACAG,EAAAzF,EAAAyF,IAuHA4U,GAAA7W,OAAAxD,EAAA6G,OACA,WACA,OAAAwT,EAAA7W,OAAA,WACA,UAAAoX,QAIA,WACA,UAAAP,IAQAA,EAAAQ,MAAA,SAAAzR,GACA,UAAApJ,GAAAU,MAAA0I,IAKApJ,EAAAU,gBACA2Z,EAAAQ,MAAA7a,EAAA0F,KAAA2U,EAAAQ,MAAA7a,EAAAU,MAAAhB,UAAAob,WAUAT,EAAA3a,UAAAqb,MAAA,SAAAjB,EAAApJ,EAAA3P,GAGA,MAFA5C,MAAAgc,KAAAhc,KAAAgc,KAAAJ,KAAA,GAAAF,GAAAC,EAAApJ,EAAA3P,GACA5C,KAAAuS,OACAvS,MA8BAsc,EAAA/a,UAAAT,OAAAuE,OAAAqW,EAAAna,WACA+a,EAAA/a,UAAAoa,GAAAU,EAOAH,EAAA3a,UAAAsb,OAAA,SAAAnY,GAWA,MARA1E,MAAAuS,MAAAvS,KAAAgc,KAAAhc,KAAAgc,KAAAJ,KAAA,GAAAU,IACA5X,KAAA,GACA,MACAA,EAAA,QACAA,EAAA,UACAA,EAAA,YACA,EACAA,IAAA6N,IACAvS,MASAkc,EAAA3a,UAAAub,MAAA,SAAApY,GACA,MAAAA,GAAA,EACA1E,KAAA4c,MAAAL,EAAA,GAAA/U,EAAAoG,WAAAlJ,IACA1E,KAAA6c,OAAAnY,IAQAwX,EAAA3a,UAAAwb,OAAA,SAAArY,GACA,MAAA1E,MAAA6c,QAAAnY,GAAA,EAAAA,GAAA,UAsBAwX,EAAA3a,UAAAyb,OAAA,SAAAtY,GACA,GAAAoF,GAAAtC,EAAAgC,KAAA9E,EACA,OAAA1E,MAAA4c,MAAAL,EAAAzS,EAAAtH,SAAAsH,IAUAoS,EAAA3a,UAAA0b,MAAAf,EAAA3a,UAAAyb,OAQAd,EAAA3a,UAAA2b,OAAA,SAAAxY,GACA,GAAAoF,GAAAtC,EAAAgC,KAAA9E,GAAAyY,UACA,OAAAnd,MAAA4c,MAAAL,EAAAzS,EAAAtH,SAAAsH,IAQAoS,EAAA3a,UAAA6b,KAAA,SAAA1Y,GACA,MAAA1E,MAAA4c,MAAAT,EAAA,EAAAzX,EAAA,MAeAwX,EAAA3a,UAAA8b,QAAA,SAAA3Y,GACA,MAAA1E,MAAA4c,MAAAJ,EAAA,EAAA9X,IAAA,IASAwX,EAAA3a,UAAA+b,SAAApB,EAAA3a,UAAA8b,QAQAnB,EAAA3a,UAAAgc,QAAA,SAAA7Y,GACA,GAAAoF,GAAAtC,EAAAgC,KAAA9E,EACA,OAAA1E,MAAA4c,MAAAJ,EAAA,EAAA1S,EAAAG,IAAA2S,MAAAJ,EAAA,EAAA1S,EAAAI,KAUAgS,EAAA3a,UAAAic,SAAAtB,EAAA3a,UAAAgc,QAQArB,EAAA3a,UAAA8F,MAAA,SAAA3C,GACA,MAAA1E,MAAA4c,MAAA/a,EAAAwF,MAAAoW,aAAA,EAAA/Y,IASAwX,EAAA3a,UAAAmc,OAAA,SAAAhZ,GACA,MAAA1E,MAAA4c,MAAA/a,EAAAwF,MAAAsW,cAAA,EAAAjZ,GAGA,IAAAkZ,GAAA/b,EAAAU,MAAAhB,UAAAsc,IACA,SAAAjb,EAAAiL,EAAAuO,GACAvO,EAAAgQ,IAAAjb,EAAAwZ,IAGA,SAAAxZ,EAAAiL,EAAAuO,GACA,OAAA/b,GAAA,EAAuBA,EAAAuC,EAAAJ,SAAgBnC,EACvCwN,EAAAuO,EAAA/b,GAAAuC,EAAAvC,GAQA6b,GAAA3a,UAAAsJ,MAAA,SAAAnG,GACA,GAAA6N,GAAA7N,EAAAlC,SAAA,CACA,KAAA+P,EACA,MAAAvS,MAAA4c,MAAAT,EAAA,IACA,IAAAta,EAAAmE,SAAAtB,GAAA,CACA,GAAAmJ,GAAAqO,EAAAQ,MAAAnK,EAAApL,EAAA3E,OAAAkC,GACAyC,GAAA2G,OAAApJ,EAAAmJ,EAAA,GACAnJ,EAAAmJ,EAEA,MAAA7N,MAAA6c,OAAAtK,GAAAqK,MAAAgB,EAAArL,EAAA7N,IAQAwX,EAAA3a,UAAAuc,OAAA,SAAApZ,GACA,GAAA6N,GAAAjL,EAAA9E,OAAAkC,EACA,OAAA6N,GACAvS,KAAA6c,OAAAtK,GAAAqK,MAAAtV,EAAAyG,MAAAwE,EAAA7N,GACA1E,KAAA4c,MAAAT,EAAA,MAQAD,EAAA3a,UAAAwc,KAAA,WAIA,MAHA/d,MAAAic,OAAA,GAAAJ,GAAA7b,MACAA,KAAA+b,KAAA/b,KAAAgc,KAAA,GAAAN,GAAAzG,EAAA,KACAjV,KAAAuS,IAAA,EACAvS,MAOAkc,EAAA3a,UAAAyc,MAAA,WAUA,MATAhe,MAAAic,QACAjc,KAAA+b,KAAA/b,KAAAic,OAAAF,KACA/b,KAAAgc,KAAAhc,KAAAic,OAAAD,KACAhc,KAAAuS,IAAAvS,KAAAic,OAAA1J,IACAvS,KAAAic,OAAAjc,KAAAic,OAAAL,OAEA5b,KAAA+b,KAAA/b,KAAAgc,KAAA,GAAAN,GAAAzG,EAAA,KACAjV,KAAAuS,IAAA,GAEAvS,MAOAkc,EAAA3a,UAAA0c,OAAA,WACA,GAAAlC,GAAA/b,KAAA+b,KACAC,EAAAhc,KAAAgc,KACAzJ,EAAAvS,KAAAuS,GAOA,OANAvS,MAAAge,QAAAnB,OAAAtK,GACAA,IACAvS,KAAAgc,KAAAJ,KAAAG,EAAAH,KACA5b,KAAAgc,OACAhc,KAAAuS,QAEAvS,MAOAkc,EAAA3a,UAAA2c,OAAA,WAIA,IAHA,GAAAnC,GAAA/b,KAAA+b,KAAAH,KACA/N,EAAA7N,KAAAuF,YAAAmX,MAAA1c,KAAAuS,KACA6J,EAAA,EACAL,GACAA,EAAAJ,GAAAI,EAAAnZ,IAAAiL,EAAAuO,GACAA,GAAAL,EAAAxJ,IACAwJ,IAAAH,IAGA,OAAA/N,IAGAqO,EAAApR,WAAA,SAAAqT,GACA1B,EAAA0B,IbslHM,SAAUve,EAAQD,EAASO,GAEjC,YcthIA,SAAAke,GAAAC,EAAAC,GACA,MAAAC,YAAA,uBAAAF,EAAAjC,IAAA,OAAAkC,GAAA,SAAAD,EAAA9L,KASA,QAAAiM,GAAAC,GAMAze,KAAA6N,IAAA4Q,EAMAze,KAAAoc,IAAA,EAMApc,KAAAuS,IAAAkM,EAAAjc,OA+EA,QAAAkc,KAEA,GAAA5U,GAAA,GAAAtC,GAAA,KACAnH,EAAA,CACA,MAAAL,KAAAuS,IAAAvS,KAAAoc,IAAA,GAaK,CACL,KAAc/b,EAAA,IAAOA,EAAA,CAErB,GAAAL,KAAAoc,KAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAGA,IADA8J,EAAAG,IAAAH,EAAAG,IAAA,IAAAjK,KAAA6N,IAAA7N,KAAAoc,OAAA,EAAA/b,KAAA,EACAL,KAAA6N,IAAA7N,KAAAoc,OAAA,IACA,MAAAtS,GAIA,MADAA,GAAAG,IAAAH,EAAAG,IAAA,IAAAjK,KAAA6N,IAAA7N,KAAAoc,SAAA,EAAA/b,KAAA,EACAyJ,EAxBA,KAAczJ,EAAA,IAAOA,EAGrB,GADAyJ,EAAAG,IAAAH,EAAAG,IAAA,IAAAjK,KAAA6N,IAAA7N,KAAAoc,OAAA,EAAA/b,KAAA,EACAL,KAAA6N,IAAA7N,KAAAoc,OAAA,IACA,MAAAtS,EAKA,IAFAA,EAAAG,IAAAH,EAAAG,IAAA,IAAAjK,KAAA6N,IAAA7N,KAAAoc,OAAA,QACAtS,EAAAI,IAAAJ,EAAAI,IAAA,IAAAlK,KAAA6N,IAAA7N,KAAAoc,OAAA,OACApc,KAAA6N,IAAA7N,KAAAoc,OAAA,IACA,MAAAtS,EAgBA,IAfAzJ,EAAA,EAeAL,KAAAuS,IAAAvS,KAAAoc,IAAA,GACA,KAAc/b,EAAA,IAAOA,EAGrB,GADAyJ,EAAAI,IAAAJ,EAAAI,IAAA,IAAAlK,KAAA6N,IAAA7N,KAAAoc,OAAA,EAAA/b,EAAA,OACAL,KAAA6N,IAAA7N,KAAAoc,OAAA,IACA,MAAAtS,OAGA,MAAczJ,EAAA,IAAOA,EAAA,CAErB,GAAAL,KAAAoc,KAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAGA,IADA8J,EAAAI,IAAAJ,EAAAI,IAAA,IAAAlK,KAAA6N,IAAA7N,KAAAoc,OAAA,EAAA/b,EAAA,OACAL,KAAA6N,IAAA7N,KAAAoc,OAAA,IACA,MAAAtS,GAIA,KAAA5D,OAAA,2BAkCA,QAAAyY,GAAA9Q,EAAA+Q,GACA,OAAA/Q,EAAA+Q,EAAA,GACA/Q,EAAA+Q,EAAA,MACA/Q,EAAA+Q,EAAA,OACA/Q,EAAA+Q,EAAA,YA+BA,QAAAC,KAGA,GAAA7e,KAAAoc,IAAA,EAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAAA,EAEA,WAAAwH,GAAAmX,EAAA3e,KAAA6N,IAAA7N,KAAAoc,KAAA,GAAAuC,EAAA3e,KAAA6N,IAAA7N,KAAAoc,KAAA,IAlPAxc,EAAAD,QAAA6e,CAEA,IAEAM,GAFAjd,EAAA3B,EAAA,GAIAsH,EAAA3F,EAAA2F,SACAF,EAAAzF,EAAAyF,KAkCAyX,EAAA,mBAAA9V,YACA,SAAAwV,GACA,GAAAA,YAAAxV,aAAA1G,MAAAkG,QAAAgW,GACA,UAAAD,GAAAC,EACA,MAAAvY,OAAA,mBAGA,SAAAuY,GACA,GAAAlc,MAAAkG,QAAAgW,GACA,UAAAD,GAAAC,EACA,MAAAvY,OAAA,kBAUAsY,GAAAnZ,OAAAxD,EAAA6G,OACA,SAAA+V,GACA,OAAAD,EAAAnZ,OAAA,SAAAoZ,GACA,MAAA5c,GAAA6G,OAAAsW,SAAAP,GACA,GAAAK,GAAAL,GAEAM,EAAAN,KACSA,IAGTM,EAEAP,EAAAjd,UAAA0d,OAAApd,EAAAU,MAAAhB,UAAAob,UAAA9a,EAAAU,MAAAhB,UAAAqO,MAOA4O,EAAAjd,UAAAsb,OAAA,WACA,GAAAnY,GAAA,UACA,mBACiE,GAAjEA,GAAA,IAAA1E,KAAA6N,IAAA7N,KAAAoc,QAAA,EAAiEpc,KAAA6N,IAAA7N,KAAAoc,OAAA,UAAA1X,EACA,IAAjEA,MAAA,IAAA1E,KAAA6N,IAAA7N,KAAAoc,OAAA,OAAiEpc,KAAA6N,IAAA7N,KAAAoc,OAAA,UAAA1X,EACA,IAAjEA,MAAA,IAAA1E,KAAA6N,IAAA7N,KAAAoc,OAAA,QAAiEpc,KAAA6N,IAAA7N,KAAAoc,OAAA,UAAA1X,EACA,IAAjEA,MAAA,IAAA1E,KAAA6N,IAAA7N,KAAAoc,OAAA,QAAiEpc,KAAA6N,IAAA7N,KAAAoc,OAAA,UAAA1X,EACA,IAAjEA,MAAA,GAAA1E,KAAA6N,IAAA7N,KAAAoc,OAAA,QAAiEpc,KAAA6N,IAAA7N,KAAAoc,OAAA,UAAA1X,EAGjE,KAAA1E,KAAAoc,KAAA,GAAApc,KAAAuS,IAEA,KADAvS,MAAAoc,IAAApc,KAAAuS,IACA6L,EAAApe,KAAA,GAEA,OAAA0E,OAQA8Z,EAAAjd,UAAAub,MAAA,WACA,SAAA9c,KAAA6c,UAOA2B,EAAAjd,UAAAwb,OAAA,WACA,GAAArY,GAAA1E,KAAA6c,QACA,OAAAnY,KAAA,MAAAA,GAAA,GAqFA8Z,EAAAjd,UAAA6b,KAAA,WACA,WAAApd,KAAA6c,UAcA2B,EAAAjd,UAAA8b,QAAA,WAGA,GAAArd,KAAAoc,IAAA,EAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAAA,EAEA,OAAA2e,GAAA3e,KAAA6N,IAAA7N,KAAAoc,KAAA,IAOAoC,EAAAjd,UAAA+b,SAAA,WAGA,GAAAtd,KAAAoc,IAAA,EAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAAA,EAEA,UAAA2e,EAAA3e,KAAA6N,IAAA7N,KAAAoc,KAAA,IAmCAoC,EAAAjd,UAAA8F,MAAA,WAGA,GAAArH,KAAAoc,IAAA,EAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAAA,EAEA,IAAA0E,GAAA7C,EAAAwF,MAAA6X,YAAAlf,KAAA6N,IAAA7N,KAAAoc,IAEA,OADApc,MAAAoc,KAAA,EACA1X,GAQA8Z,EAAAjd,UAAAmc,OAAA,WAGA,GAAA1d,KAAAoc,IAAA,EAAApc,KAAAuS,IACA,KAAA6L,GAAApe,KAAA,EAEA,IAAA0E,GAAA7C,EAAAwF,MAAA8X,aAAAnf,KAAA6N,IAAA7N,KAAAoc,IAEA,OADApc,MAAAoc,KAAA,EACA1X,GAOA8Z,EAAAjd,UAAAsJ,MAAA,WACA,GAAArI,GAAAxC,KAAA6c,SACAuC,EAAApf,KAAAoc,IACAwC,EAAA5e,KAAAoc,IAAA5Z,CAGA,IAAAoc,EAAA5e,KAAAuS,IACA,KAAA6L,GAAApe,KAAAwC,EAGA,OADAxC,MAAAoc,KAAA5Z,EACAD,MAAAkG,QAAAzI,KAAA6N,KACA7N,KAAA6N,IAAA+B,MAAAwP,EAAAR,GACAQ,IAAAR,EACA,GAAA5e,MAAA6N,IAAAtI,YAAA,GACAvF,KAAAif,OAAA1e,KAAAP,KAAA6N,IAAAuR,EAAAR,IAOAJ,EAAAjd,UAAAuc,OAAA,WACA,GAAAjT,GAAA7K,KAAA6K,OACA,OAAAvD,GAAA+X,KAAAxU,EAAA,EAAAA,EAAArI,SAQAgc,EAAAjd,UAAA+d,KAAA,SAAA9c,GACA,mBAAAA,GAAA,CAEA,GAAAxC,KAAAoc,IAAA5Z,EAAAxC,KAAAuS,IACA,KAAA6L,GAAApe,KAAAwC,EACAxC,MAAAoc,KAAA5Z,MAEA,IAEA,GAAAxC,KAAAoc,KAAApc,KAAAuS,IACA,KAAA6L,GAAApe,YACS,IAAAA,KAAA6N,IAAA7N,KAAAoc,OAET,OAAApc,OAQAwe,EAAAjd,UAAAge,SAAA,SAAAC,GACA,OAAAA,GACA,OACAxf,KAAAsf,MACA,MACA,QACAtf,KAAAsf,KAAA,EACA,MACA,QACAtf,KAAAsf,KAAAtf,KAAA6c,SACA,MACA,QACA,QACA,OAAA2C,EAAA,EAAAxf,KAAA6c,UACA,KACA7c,MAAAuf,SAAAC,GAEA,KACA,QACAxf,KAAAsf,KAAA,EACA,MAGA,SACA,KAAApZ,OAAA,qBAAAsZ,EAAA,cAAAxf,KAAAoc,KAEA,MAAApc,OAGAwe,EAAA1T,WAAA,SAAA2U,GACAX,EAAAW,CAEA,IAAA9D,GAAA9Z,EAAAqH,KAAA,mBACArH,GAAA0E,MAAAiY,EAAAjd,WAEA0b,MAAA,WACA,MAAAyB,GAAAne,KAAAP,MAAA2b,IAAA,IAGAqB,OAAA,WACA,MAAA0B,GAAAne,KAAAP,MAAA2b,IAAA,IAGAuB,OAAA,WACA,MAAAwB,GAAAne,KAAAP,MAAA0f,WAAA/D,IAAA,IAGA4B,QAAA,WACA,MAAAsB,GAAAte,KAAAP,MAAA2b,IAAA,IAGA6B,SAAA,WACA,MAAAqB,GAAAte,KAAAP,MAAA2b,IAAA,Qd2iIM,SAAU/b,EAAQD,EAASO,GAEjC,Ye36IA,SAAAyf,GAAAhf,EAAA6J,EAAAzF,EAAAC,GAQA,GAPAzC,MAAAkG,QAAA+B,KACAzF,EAAAyF,EACAA,MAAA3H,IAEAqC,EAAA3E,KAAAP,KAAAW,EAAAoE,OAGAlC,KAAA2H,IAAAjI,MAAAkG,QAAA+B,GACA,KAAArF,WAAA,8BAMAnF,MAAA4f,MAAApV,MAOAxK,KAAA6f,eAMA7f,KAAAgF,UA0CA,QAAA8a,GAAAF,GACA,GAAAA,EAAAtU,OACA,OAAAjL,GAAA,EAAuBA,EAAAuf,EAAAC,YAAArd,SAA8BnC,EACrDuf,EAAAC,YAAAxf,GAAAiL,QACAsU,EAAAtU,OAAA9G,IAAAob,EAAAC,YAAAxf,IA7FAT,EAAAD,QAAAggB,CAGA,IAAAza,GAAAhF,EAAA,KACAyf,EAAApe,UAAAT,OAAAuE,OAAAH,EAAA3D,YAAAgE,YAAAoa,GAAAna,UAAA,OAEA,IAAAgH,GAAAtM,EAAA,GACA2B,EAAA3B,EAAA,EAyDAyf,GAAAja,SAAA,SAAA/E,EAAAgF,GACA,UAAAga,GAAAhf,EAAAgF,EAAAia,MAAAja,EAAAZ,QAAAY,EAAAX,UAQA2a,EAAApe,UAAAqE,OAAA,SAAAC,GACA,GAAAC,KAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,UAAA1C,KAAA+E,QACA,QAAA/E,KAAA4f,MACA,UAAA9Z,EAAA9F,KAAAgF,YAAAnC,MAuBA8c,EAAApe,UAAAiD,IAAA,SAAAub,GAGA,KAAAA,YAAAvT,IACA,KAAArH,WAAA,wBAQA,OANA4a,GAAAzU,QAAAyU,EAAAzU,SAAAtL,KAAAsL,QACAyU,EAAAzU,OAAA/G,OAAAwb,GACA/f,KAAA4f,MAAA7M,KAAAgN,EAAApf,MACAX,KAAA6f,YAAA9M,KAAAgN,GACAA,EAAA/S,OAAAhN,KACA8f,EAAA9f,MACAA,MAQA2f,EAAApe,UAAAgD,OAAA,SAAAwb,GAGA,KAAAA,YAAAvT,IACA,KAAArH,WAAA,wBAEA,IAAA1C,GAAAzC,KAAA6f,YAAA/P,QAAAiQ,EAGA,IAAAtd,EAAA,EACA,KAAAyD,OAAA6Z,EAAA,uBAAA/f,KAUA,OARAA,MAAA6f,YAAArM,OAAA/Q,EAAA,GACAA,EAAAzC,KAAA4f,MAAA9P,QAAAiQ,EAAApf,MAGA8B,GAAA,GACAzC,KAAA4f,MAAApM,OAAA/Q,EAAA,GAEAsd,EAAA/S,OAAA,KACAhN,MAMA2f,EAAApe,UAAAwK,MAAA,SAAAT,GACApG,EAAA3D,UAAAwK,MAAAxL,KAAAP,KAAAsL,EAGA,QAFAvL,GAAAC,KAEAK,EAAA,EAAmBA,EAAAL,KAAA4f,MAAApd,SAAuBnC,EAAA,CAC1C,GAAA0f,GAAAzU,EAAApK,IAAAlB,KAAA4f,MAAAvf,GACA0f,OAAA/S,SACA+S,EAAA/S,OAAAjN,EACAA,EAAA8f,YAAA9M,KAAAgN,IAIAD,EAAA9f,OAMA2f,EAAApe,UAAA0K,SAAA,SAAAX,GACA,OAAAyU,GAAA1f,EAAA,EAA0BA,EAAAL,KAAA6f,YAAArd,SAA6BnC,GACvD0f,EAAA/f,KAAA6f,YAAAxf,IAAAiL,QACAyU,EAAAzU,OAAA/G,OAAAwb,EACA7a,GAAA3D,UAAA0K,SAAA1L,KAAAP,KAAAsL,IAmBAqU,EAAAjf,EAAA,WAGA,IAFA,GAAA8J,GAAA,GAAAjI,OAAAkQ,UAAAjQ,QACAC,EAAA,EACAA,EAAAgQ,UAAAjQ,QACAgI,EAAA/H,GAAAgQ,UAAAhQ,IACA,iBAAAlB,EAAAye,GACAne,EAAAqC,aAAA3C,EAAAgE,aACAf,IAAA,GAAAmb,GAAAK,EAAAxV,IACA1J,OAAAC,eAAAQ,EAAAye,GACA9e,IAAAW,EAAA0I,YAAAC,GACAqT,IAAAhc,EAAA6I,YAAAF,Qfw8IM,SAAU5K,EAAQD,EAASO,GAEjC,YgBroJA,SAAA+f,GAAAnZ,GAEA,GAAAA,EACA,OAAAzE,GAAAvB,OAAAuB,KAAAyE,GAAAzG,EAAA,EAAuDA,EAAAgC,EAAAG,SAAiBnC,EACxEL,KAAAqC,EAAAhC,IAAAyG,EAAAzE,EAAAhC,IAfAT,EAAAD,QAAAsgB,CAEA,IAAApe,GAAA3B,EAAA,EAuCA+f,GAAA5a,OAAA,SAAAyB,GACA,MAAA9G,MAAAqE,MAAAgB,OAAAyB,IAWAmZ,EAAAC,OAAA,SAAArZ,EAAAiV,GACA,MAAA9b,MAAAqE,MAAA6b,OAAArZ,EAAAiV,IAWAmE,EAAAE,gBAAA,SAAAtZ,EAAAiV,GACA,MAAA9b,MAAAqE,MAAA8b,gBAAAtZ,EAAAiV,IAYAmE,EAAAnS,OAAA,SAAAuQ,GACA,MAAAre,MAAAqE,MAAAyJ,OAAAuQ,IAYA4B,EAAAG,gBAAA,SAAA/B,GACA,MAAAre,MAAAqE,MAAA+b,gBAAA/B,IAUA4B,EAAAI,OAAA,SAAAxZ,GACA,MAAA7G,MAAAqE,MAAAgc,OAAAxZ,IAUAoZ,EAAAK,WAAA,SAAAjf,GACA,MAAArB,MAAAqE,MAAAic,WAAAjf,IAWA4e,EAAAvd,SAAA,SAAAmE,EAAA9B,GACA,MAAA/E,MAAAqE,MAAA3B,SAAAmE,EAAA9B,IAOAkb,EAAA1e,UAAAqE,OAAA,WACA,MAAA5F,MAAAqE,MAAA3B,SAAA1C,KAAA6B,EAAAgE,iBhBypJM,SAAUjG,EAAQD,EAASO,GAEjC,cAC4B,SAASoG,GAerC,QAASia,GAAgBC,EAAU/K,GAAe,KAAM+K,YAAoB/K,IAAgB,KAAM,IAAItQ,WAAU,qCAEhH,QAASsb,GAA2B1gB,EAAMQ,GAAQ,IAAKR,EAAQ,KAAM,IAAI2gB,gBAAe,4DAAgE,QAAOngB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BR,EAAPQ,EAElO,QAASogB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1b,WAAU,iEAAoE0b,GAAeD,GAASrf,UAAYT,OAAOuE,OAAOwb,GAAcA,EAAWtf,WAAagE,aAAeb,MAAOkc,EAAU3f,YAAY,EAAO6f,UAAU,EAAM9f,cAAc,KAAe6f,IAAY/f,OAAOigB,eAAiBjgB,OAAOigB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAjBje/f,OAAOC,eAAepB,EAAS,cAC7B+E,OAAO,IAET/E,EAAQshB,eAAape,EAErB,IAAIqe,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU5Y,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX2Y,SAAyB3Y,EAAIjD,cAAgB4b,QAAU3Y,IAAQ2Y,OAAO5f,UAAY,eAAkBiH,IAElQ6Y,EAAe,WAAc,QAAS3V,GAAiB4V,EAAQC,GAAS,IAAK,GAAIlhB,GAAI,EAAGA,EAAIkhB,EAAM/e,OAAQnC,IAAK,CAAE,GAAImhB,GAAaD,EAAMlhB,EAAImhB,GAAWvgB,WAAaugB,EAAWvgB,aAAc,EAAOugB,EAAWxgB,cAAe,EAAU,SAAWwgB,KAAYA,EAAWV,UAAW,GAAMhgB,OAAOC,eAAeugB,EAAQE,EAAW7e,IAAK6e,IAAiB,MAAO,UAAU/L,EAAagM,EAAYC,GAAiJ,MAA9HD,IAAY/V,EAAiB+J,EAAYlU,UAAWkgB,GAAiBC,GAAahW,EAAiB+J,EAAaiM,GAAqBjM,MiBxyJhiBkM,EAAAzhB,EAAA,IAOA0hB,EAAA1hB,EAAA,GAXMkH,EAAelH,EAAQ,GACvBwY,EAAUxY,EAAQ,IAClB2hB,EAAe3hB,EAAQ,GjB4zJZP,GiBxyJJshB,WjBwyJyB,SAAUa,GiBtyJ9C,QAAAb,GAAYc,EAAKhd,GAASwb,EAAAvgB,KAAAihB,EAAA,IAAAe,GAAAvB,EAAAzgB,MAAAihB,EAAAD,WAAAlgB,OAAAmhB,eAAAhB,IAAA1gB,KAAAP,MAAA,OAExBgiB,GAAKE,YAALP,EAAAQ,eACAH,EAAKI,aAALT,EAAAU,gBACAL,EAAKM,KAAOP,EACZC,EAAKO,QAAU,KACfP,EAAKQ,WAAY,EACjBR,EAAKS,SAAU,EACfT,EAAKU,SAAW,KAChBV,EAAKW,SAAW,KAChBX,EAAKY,QAAU,eACfZ,EAAKa,YAAa,EAClBb,EAAKc,eAAgB,EACrBd,EAAKe,WAAa,KAClBf,EAAKgB,eAAiB,KACtBhB,EAAKiB,kBAAmB,EACxBjB,EAAKkB,WAAa,EAClBlB,EAAKmB,UAAY,KACjBnB,EAAKoB,SACLpB,EAAKqB,uBACLrB,EAAKsB,aACLtB,EAAKuB,aAAc,EACnBvB,EAAKwB,iBAAkB,EACvBxB,EAAKyB,iBACLzB,EAAK0B,kBAAoB,EACzB1B,EAAK2B,gBAAkB,KACvB3B,EAAK4B,cAAgB,KACrB5B,EAAK6B,aAAe,KACpB7B,EAAK8B,SAAW,EAChB9B,EAAK+B,cACL/B,EAAKgC,SAAW,KAChBhC,EAAKiC,cAAgB,KACrBjC,EAAKkC,aAAe,KACpBlC,EAAKmC,SACHC,OAAO,EACPC,OAAQ,KACRC,MAAO,IACPC,SAAU,IACVC,QAAS,IACTC,aAAa,EACbC,MAAM,EACNC,aAAc,IACdC,gBAAiB,IACjBC,qBAAsB,IACtBC,iBAAkB,KAClBC,aAAc,KACdC,kBACE,YACA,gBACA,gBACA,cACA,qBACA,kBACA,cACA,cACA,qBACA,iBAEFC,gBAAiB,sBACjBC,kBACAC,iBACAC,eACAC,gBAAiB,KACjBC,gBAAiB,IACjBC,gBAAiB,KACjBC,UAAW,KACXC,aAAc,mBACdC,eACAC,cACAC,OAAQ,MAEV5D,EAAKlX,WAAW/F,GAvEQid,EjB8/L1B,MAvtCArB,GAAUM,EAAYa,GAqEtBT,EAAaJ,IACXte,IAAK,iBACL+B,MAAO,SiBpyJMmhB,GACb7lB,KAAKkkB,aAAe2B,KjBuyJpBljB,IAAK,QACL+B,MAAO,SiBryJHqd,EAAK+D,EAAQC,EAASrU,EAAMiD,GAChC,GAAI5U,GAAOC,KACPgmB,EAAQ,EAEZjmB,GAAKkmB,OAAO,0BAA2BlE,EAEvC,IAAMmE,GAAO5f,EAAO6f,eAAiB,GAAI7f,GAAO6f,eAAmB,GAAI7f,GAAO8f,cAAc,oBAE5F,KAAK,GAAI/lB,KAAKylB,GACRA,EAAOtkB,eAAenB,KACpB2lB,EAAMxjB,OAAS,IACjBwjB,GAAS,KAEXA,GAASK,mBAAmBhmB,GAAK,IAAMgmB,mBAAmBP,EAAOzlB,IAGjE2lB,GAAMxjB,OAAS,IACjBwjB,EAAQ,IAAMA,GAEhBE,EAAII,KAAK,OAAQvE,EAAMiE,GAAO,GAC1B,mBAAqBE,KACvBA,EAAIK,iBAAkB,GAGxBL,EAAIM,iBAAiB,mBAAoB,kBACzCN,EAAIM,iBAAiB,eAAgB,mBACrC,KAAK,GAAIC,KAAcV,GACjBA,EAAQvkB,eAAeilB,IACzBP,EAAIM,iBAAiBC,EAAYV,EAAQU,GA4B7C,OAxBAP,GAAIQ,mBAAqB,WACvB,GAAuB,IAAnBR,EAAIS,WACN,GAAmB,MAAfT,EAAIU,OAAgB,CACtB,GAAIlV,UAAMmV,GAAS,CAEnB,KACEnV,EAAOoV,KAAKC,MAAMb,EAAIc,cACtBH,GAAS,EACT,MAAOje,GACP+L,GAAS,EAAM,iEAAmEuR,EAAIc,cAEpFH,GACFlS,GAAS,EAAOjD,OAGlB3R,GAAKknB,KAAK,0CAA2Cf,EAAIU,QACzDjS,GAAS,EAAMuR,EAAIU,SAKzBlS,WAAW,WACTwR,EAAIgB,KAAKJ,KAAKK,UAAUzV,KACvB,IACIwU,KjB0yJPvjB,IAAK,OACL+B,MAAO,YiBvyJP,EAAAkd,EAAAjR,KAAI,OAAQ8B,cjB2yJZ9P,IAAK,SACL+B,MAAO,YiBxyJoB,IAAvB1E,KAAKmkB,QAAQC,QACf,EAAAxC,EAAAjR,KAAI,QAAS8B,cjB6yJf9P,IAAK,sBACL+B,MAAO,WiBzyJP,QAA8B,kBAAd0iB,YAAiD,YAArB,mBAAOA,WAAP,YAAAlG,EAAOkG,gBjB6yJnDzkB,IAAK,aACL+B,MAAO,SiB3yJE2iB,GACT,GAAe,aAAXA,EACF,KAAM,IAAInhB,OAAM,iDAEhBlG,MAAK0iB,SAAW,GAAAf,GAAA2F,YAChBtnB,KAAK2iB,SAAW,GAAAhB,GAAA4F,ejB+yJlB5kB,IAAK,aACL+B,MAAO,SiB5yJE8iB,GAIT,GAHA1mB,OAAO2mB,OAAOznB,KAAKmkB,QAASqD,OAC5BxnB,KAAKimB,OAAO,oBAAqBjmB,KAAKmkB,UAEjCnkB,KAAKsiB,KACR,KAAM,IAAIpc,OAAM,eA4BlB,IAzBIlG,KAAKsiB,KAAKxS,QAAQ,oBAAsB,EAC1C9P,KAAK0nB,WAAW,YAEhB1nB,KAAK0nB,WAAW,QAGQ,OAAtB1nB,KAAKkkB,eACFlkB,KAAKkkB,aAAayD,MAAmC,KAA3B3nB,KAAKkkB,aAAayD,MAC/C3nB,KAAKimB,OAAO,+BAGTjmB,KAAKkkB,aAAa0D,KACrB5nB,KAAKimB,OAAO,8BAGTjmB,KAAKkkB,aAAa2D,OACrB7nB,KAAKimB,OAAO,+BACZjmB,KAAKkkB,aAAa2D,KAAO,IAGtB7nB,KAAKkkB,aAAa4D,MACrB9nB,KAAKimB,OAAO,iCAIZ,EAAArE,EAAApR,YAAWxQ,KAAKsiB,KAAM,QAExB,GADAtiB,KAAKimB,OAAO,iDACgB,OAAxBjmB,KAAKmkB,QAAQE,OACfrkB,KAAKimB,OAAO,yCACZjmB,KAAKuiB,QAAUviB,KAAKmkB,QAAQE,WACvB,CACL,OAA6B,KAAlB/d,EAAOyhB,OAChB,KAAM,IAAI7hB,OAAM,uDAElBlG,MAAKimB,OAAO,+BACZjmB,KAAKuiB,QAAUjc,EAAOyhB,WAGxB/nB,MAAKimB,OAAO,gDjBgzJdtjB,IAAK,aACL+B,MAAO,SiB7yJEsjB,GACLhoB,KAAK4iB,UAAYoF,IACnBhoB,KAAKimB,OAAO,SAAUjmB,KAAK4iB,QAAS,KAAMoF,GAC1ChoB,KAAK4iB,QAAUoF,MjBizJjBrlB,IAAK,kBACL+B,MAAO,WiB7yJP,MAAwB,iBAAjB1E,KAAK4iB,WjBizJZjgB,IAAK,gBACL+B,MAAO,WiB9yJP,MAAwB,eAAjB1E,KAAK4iB,WjBkzJZjgB,IAAK,eACL+B,MAAO,WiB/yJP,MAAwB,cAAjB1E,KAAK4iB,WjBmzJZjgB,IAAK,iBACL+B,MAAO,WiBhzJP,QAAS1E,KAAKkjB,cjBozJdvgB,IAAK,cACL+B,MAAO,WiBjzJP1E,KAAKimB,OAAO,4BACZjmB,KAAK8jB,SAAW,KjBqzJhBnhB,IAAK,oBACL+B,MAAO,WiBlzJP,GAAI6M,IAAW,EAAAqQ,EAAA3Q,SAAQjR,KAAK8jB,SAAU9jB,KAAKmkB,QAAQG,MAAOtkB,KAAKmkB,QAAQI,SAGvE,OADAvkB,MAAK8jB,UAAY,EACVvS,KjBszJP5O,IAAK,uBACL+B,MAAO,SiBpzJYujB,GACnBjoB,KAAKmjB,UAAY,IAGjB,KAAK,GAAI+E,KAAOloB,MAAK+jB,WACnB,GAAI/jB,KAAK+jB,WAAWviB,eAAe0mB,GAAM,CACvC,GAAMC,GAAYnoB,KAAK+jB,WAAWmE,GAC5BE,EAAUD,EAAUC,OAC1B,KAAKA,EACH,QAEFA,GAAQpoB,KAAKqoB,mBAAmB,iBAGpCroB,KAAK+jB,aAGL,KAAK,GAAI/J,KAAWha,MAAKojB,MACvB,GAAIpjB,KAAKojB,MAAM5hB,eAAewY,GAAU,CACtC,GAAMsO,GAAMtoB,KAAKojB,MAAMpJ,EAEnBiO,IACEK,EAAIC,cACND,EAAIE,sBAENF,EAAIG,mBAEJH,EAAII,mBAKL1oB,KAAKmkB,QAAQM,aAAgBzkB,KAAK6iB,aAErC7iB,KAAKojB,ajBwzJPzgB,IAAK,QACL+B,MAAO,SiBrzJHikB,GACCA,EAASnmB,QAGdxC,KAAK+iB,WAAWmE,KAAKlnB,KAAK0iB,SAASkG,eAAeD,OjBwzJlDhmB,IAAK,kBACL+B,MAAO,WiBrzJP,GAAI3E,GAAOC,IAIX,IAHAA,KAAKwiB,WAAY,EAGI,OAAjBxiB,KAAKuiB,QAAkB,CACzB,GAAMsG,IACJC,WAAY9oB,KAAKmkB,QAAQa,iBAGO,QAA9BhlB,KAAKmkB,QAAQY,eACf8D,EAAcE,OAAS/oB,KAAKmkB,QAAQY,cAEtC/kB,KAAKwiB,WAAY,EACjBxiB,KAAK+iB,WAAa,GAAI/iB,MAAKuiB,QAAQviB,KAAKsiB,KAAM,KAAMuG,OAC/C,CACL,IAAK7oB,KAAKgpB,sBAER,WADAhpB,MAAKimB,OAAO,iEAGdjmB,MAAK+iB,WAAa,GAAIqE,WAAUpnB,KAAKsiB,OAChB,IAAjBtiB,KAAKyiB,UACPziB,KAAK+iB,WAAWkG,WAAa,eAIjCjpB,KAAK+iB,WAAWmG,OAAS,WACvBnpB,EAAKkjB,kBAAmB,EACxBljB,EAAK+iB,eAAgB,EACjB/iB,EAAKyiB,WACPziB,EAAKijB,eAAiB,UAAYjjB,EAAKgjB,WAAWoG,UAClDppB,EAAKgjB,WAAWqG,YAAc,WAC5BrpB,EAAKspB,iBAGPtpB,EAAKijB,eAAiB,YAGxBjjB,EAAKupB,aAEL,IAAIC,IACFC,OAAQzpB,EAAKmiB,YAAYuH,QAGvB1pB,GAAKmkB,eACPqF,EAAIzD,OAAS/lB,EAAKmkB,cAGpBnkB,EAAKkkB,cAAgB,GAAIyF,MACzB3pB,EAAK4pB,MAAMJ,GAAK1U,KAAK,SAAU+U,GAC7B7pB,EAAK8pB,iBAAiB9pB,EAAK4iB,SAASmH,oBAAoB/pB,EAAKmiB,YAAYuH,QAASG,KACjF,WACD7pB,EAAKgqB,YAAY,iBAAiB,MAItC/pB,KAAK+iB,WAAWiH,QAAU,SAAUrY,GAClC5R,EAAKkmB,OAAO,wBAAyBtU,IAGvC3R,KAAK+iB,WAAWkH,QAAU,SAAUC,GAClCnqB,EAAKkjB,kBAAmB,CACxB,IAAI1M,GAAS,oBACT4T,GAAgB,CAEpB,IAAID,GAAc,UAAYA,IAAcA,EAAW3T,OACrD,IACE,GAAM6T,GAAStD,KAAKC,MAAMmD,EAAW3T,OAErCxW,GAAKkmB,OAAO,6BAA8BmE,GAC1C7T,EAAS6T,EAAO7T,OAChB4T,EAAgBC,EAAOnC,UACvB,MAAOrf,GACP2N,EAAS2T,EAAW3T,OACpBxW,EAAKkmB,OAAO,2BAA4B1P,GACxC4T,EAA2B,eAAX5T,EAkBpB,GAVsC,OAAlCxW,EAAKokB,QAAQW,kBACf/kB,EAAKokB,QAAQW,kBACXuF,MAAOH,EACP3T,OAAQA,EACR0R,UAAWkC,IAIfpqB,EAAKgqB,YAAYxT,EAAQ4T,IAED,IAApBpqB,EAAK8iB,WAAqB,CAC5B9iB,EAAK+iB,eAAgB,CACrB,IAAMvR,GAAWxR,EAAKuqB,mBAEtBvqB,GAAKkmB,OAAO,mBAAqB1U,EAAW,iBAC5CmD,WAAW,YACe,IAApB3U,EAAK8iB,YACP9iB,EAAKwqB,SAAShqB,KAAKR,IAEpBwR,KAIPvR,KAAK+iB,WAAW7I,UAAY,SAAUmQ,GACpC,GAAMG,GAAUzqB,EAAK4iB,SAAS8H,cAAcJ,EAAM3Y,KAClD,KAAK,GAAIrR,KAAKmqB,GACRA,EAAQhpB,eAAenB,KACzBN,EAAKkmB,OAAO,iBAAkBuE,EAAQnqB,IACtCN,EAAK2qB,eAAeF,EAAQnqB,IAGhCN,GAAKspB,mBjB0zJP1mB,IAAK,MACL+B,MAAO,SiBvzJLgN,GACF,GAAM3R,GAAOC,KACPupB,GACJC,OAAQzpB,EAAKmiB,YAAYyI,IACzB7E,QACEpU,KAAMA,IAGJgE,EAAU1V,KAAK2pB,MAAMJ,EAE3B,OAAO,IAAI7Q,GAAQ,SAAUvM,EAASqK,GACpCd,EAAQb,KAAK,SAAU+U,GACrBzd,EAAQpM,EAAK4iB,SAASmH,oBAAoB/pB,EAAKmiB,YAAYyI,IAAKf,KAC/D,SAAUjY,GACX6E,EAAO7E,UjB4zJXhP,IAAK,OACL+B,MAAO,SiBxzJJgN,GACH,GAAM6X,IACJC,OAAQzpB,KAAKmiB,YAAY0I,QACzB9E,QACEpU,KAAMA,GAIV,OAAO1R,MAAK6qB,WAAWtB,MjB2zJvB5mB,IAAK,aACL+B,MAAO,SiBzzJE6kB,GACTvpB,KAAK8qB,YAAYvB,GAAK,MjB4zJtB5mB,IAAK,QACL+B,MAAO,SiB1zJH6kB,GACJ,GAAIxpB,GAAOC,IAEX,OAAO,IAAI0Y,GAAQ,SAAUvM,EAASqK,GACpC,GAAMvS,GAAKlE,EAAK+qB,YAAYvB,EAC5BxpB,GAAKgrB,cAAc9mB,EAAIkI,EAASqK,QjB8zJlC7T,IAAK,WACL+B,MAAO,WiB1zJP,GAAI1E,KAAKgrB,cAEP,WADAhrB,MAAKimB,OAAO,wCAGO,gBAAjBjmB,KAAK4iB,UAIT5iB,KAAKimB,OAAO,oBACZjmB,KAAKirB,WAAW,cAChBjrB,KAAKmjB,UAAY,KACjBnjB,KAAK6iB,YAAa,EAClB7iB,KAAKkrB,sBjB8zJLvoB,IAAK,cACL+B,MAAO,SiB5zJG6R,EAAQ4U,GAElB,IAAInrB,KAAKorB,kBAAT,CAIAprB,KAAKimB,OAAO,gBAAiB1P,EAAQ4U,EAErC,IAAMlD,GAAYkD,IAAmB,GAEnB,IAAdlD,IACFjoB,KAAK6iB,YAAa,GAGpB7iB,KAAKqrB,qBAAqBpD,GAErBjoB,KAAKorB,oBACRprB,KAAKirB,WAAW,gBACZjrB,KAAK2jB,iBACP2H,aAAatrB,KAAK2jB,kBAEO,IAAvB3jB,KAAK8iB,eACP9iB,KAAKoS,KAAK,cACRmE,OAAQA,EACR0R,UAAWA,KAKZjoB,KAAKijB,kBACRjjB,KAAK+iB,WAAWwI,YjBg0JlB5oB,IAAK,iBACL+B,MAAO,WiB5zJP1E,KAAK0jB,kBAAoB,EACpB1jB,KAAKorB,mBACRprB,KAAK+pB,YAAY,kBAAkB,GAEA,OAAjC/pB,KAAKmkB,QAAQoB,iBACfvlB,KAAKmkB,QAAQoB,qBjBi0Jf5iB,IAAK,WACL+B,MAAO,WiB3zJP,GAAI3E,GAAOC,IAIX,IAFAA,KAAKimB,OAAO,uBAEyB,IAAjClmB,EAAKokB,QAAQkB,gBAGf,MAFArlB,MAAKimB,OAAO,qEACZlmB,GAAKyrB,gBAIsB,QAAzBzrB,EAAK4jB,iBACP2H,aAAavrB,EAAK4jB,gBAGpB,IAAM8H,GAAK,SAAU9Z,EAAOD,GAC1B,IAAc,IAAVC,EAQF,MALA5R,GAAKkmB,OAAO,6DAA8DvU,GAC1E3R,EAAK2jB,oBACD3jB,EAAK4jB,iBACP2H,aAAavrB,EAAK4jB,iBAEiB,OAAjC5jB,EAAKokB,QAAQkB,iBAA4BtlB,EAAK2jB,mBAAqB3jB,EAAKokB,QAAQkB,oBAClFtlB,GAAKyrB,sBAGPzrB,EAAK4jB,gBAAkBjP,WAAW,WAChC3U,EAAK2rB,SAASnrB,KAAKR,IAClBA,EAAKokB,QAAQmB,gBAAkBpd,KAAKyjB,MAAsB,IAAhBzjB,KAAKoJ,WAIpD,IADAvR,EAAK2jB,kBAAoB,EACC,OAAtB3jB,EAAKmkB,aAST,GANAnkB,EAAKmkB,aAAayD,KAAOjW,EAAKiW,KAC9B5nB,EAAKmkB,aAAa0D,IAAMlW,EAAKkW,IACzB,QAAUlW,KACZ3R,EAAKmkB,aAAa2D,KAAOnW,EAAKmW,MAEhC9nB,EAAKmkB,aAAa4D,KAAOpW,EAAKoW,KAC1B/nB,EAAKqrB,kBACPrrB,EAAKkmB,OAAO,+CACZlmB,EAAKwqB,eACA,CACLxqB,EAAKkmB,OAAO,6BAEZ,IAAMsD,IACJC,OAAQzpB,EAAKmiB,YAAY0J,QACzB9F,OAAQ/lB,EAAKmkB,aAGfnkB,GAAK4pB,MAAMJ,GAAK1U,KAAK,SAAU+U,GAC7B7pB,EAAK8rB,iBAAiB9rB,EAAK4iB,SAASmH,oBAAoB/pB,EAAKmiB,YAAY0J,QAAShC,KACjF,WACD7pB,EAAKgqB,YAAY,iBAAiB,MAKxC,IAA+B,OAA3B/pB,KAAKmkB,QAAQqB,UAAoB,CACnC,GAAM7S,KACN3S,MAAKmkB,QAAQqB,UAAU7S,EAAS8Y,OAEhCzrB,MAAK8rB,MACH9rB,KAAKmkB,QAAQc,gBACbjlB,KAAKmkB,QAAQgB,cACbnlB,KAAKmkB,QAAQe,eACbllB,KAAKmkB,QAAQiB,YACbqG,MjB6zJJ9oB,IAAK,aACL+B,MAAO,SiBzzJE4jB,GAET,GAAMtO,GAAUsO,EAAItO,OAMpB,IAJMA,IAAWha,MAAKojB,QACpBpjB,KAAKojB,MAAMpJ,GAAWsO,IAGnBtoB,KAAKgrB,cAGR,WADA1C,GAAIyD,SAINzD,GAAIG,iBAEJ,IAAMc,IACJC,OAAQxpB,KAAKkiB,YAAY8J,UACzBlG,QACE9L,QAASA,GAQb,KAAI,EAAA4H,EAAApR,YAAWwJ,EAASha,KAAKmkB,QAAQU,sBAE/B7kB,KAAKwjB,gBACPxjB,KAAKyjB,cAAczJ,IAAW,GAE9Bha,KAAKisB,oBACLjsB,KAAKksB,WAAW5D,GAChBtoB,KAAKmsB,wBAEF,EAGW,IAFAnsB,KAAKosB,SAASpS,KAG5BuP,EAAIzD,OAAOuG,SAAU,EACrB9C,EAAIzD,OAAOwG,KAAOtsB,KAAKusB,WAAWvS,GAEpC,IAAMja,GAAOC,IAEbA,MAAK2pB,MAAMJ,GAAK1U,KAAK,SAAU+U,GAC7B7pB,EAAKysB,mBAAmBxS,EAASja,EAAK4iB,SAASmH,oBAAoB/pB,EAAKmiB,YAAY8J,UAAWpC,KAC9F,SAAUlX,GACX3S,EAAK0sB,gBAAgB/Z,SjB8zJzB/P,IAAK,eACL+B,MAAO,SiB1zJI4jB,GACPtoB,KAAKgrB,eAEPhrB,KAAK8qB,aACHtB,OAAQzpB,KAAKmiB,YAAYwK,YACzB5G,QACE9L,QAASsO,EAAItO,cjBg0JnBrX,IAAK,SACL+B,MAAO,SiB3zJFsV,GACL,MAAOha,MAAK2sB,QAAQ3S,MjB8zJpBrX,IAAK,UACL+B,MAAO,SiB5zJDsV,GACN,GAAMsO,GAAMtoB,KAAKojB,MAAMpJ,EACvB,OAAKsO,IACI,QjBi0JT3lB,IAAK,mBACL+B,MAAO,SiB7zJQklB,GACf,IAAI5pB,KAAKgrB,cAAT,CASA,GAL2B,OAAvBhrB,KAAKikB,gBACPjkB,KAAKgkB,UAAY,GAAI0F,OAAQkD,UAAY5sB,KAAKikB,cAAc2I,UAC5D5sB,KAAKikB,cAAgB,MAGnB2F,EAAOiD,QAAS,CAGlB,GAFkBjD,EAAOkD,QAMvB,MAHA9sB,MAAK8iB,eAAgB,EACrB9iB,KAAK+pB,YAAY,WAAW,OAC5B/pB,MAAK0rB,WAIT1rB,KAAKmjB,UAAYyG,EAAOmD,OACxB/sB,KAAKirB,WAAW,aAEZjrB,KAAK2jB,iBACP2H,aAAatrB,KAAK2jB,gBAGpB,IAAM5jB,GAAOC,IAQb,IANI4pB,EAAOiD,UACT7sB,KAAK2jB,gBAAkBjP,WAAW,WAChC3U,EAAK2rB,SAASnrB,KAAKR,IACL,IAAb6pB,EAAOoD,MAGRhtB,KAAKmkB,QAAQM,YAAa,CAC5BzkB,KAAKitB,gBACLjtB,KAAKisB,mBACL,KAAK,GAAIjS,KAAWha,MAAKojB,MACvB,GAAIpjB,KAAKojB,MAAM5hB,eAAewY,GAAU,CACtC,GAAMsO,GAAMtoB,KAAKojB,MAAMpJ,EACnBsO,GAAI4E,sBACNltB,KAAKksB,WAAW5D,GAItBtoB,KAAKmsB,mBACLnsB,KAAKmtB,cAAa,GAGpBntB,KAAKqpB,eACLrpB,KAAKoS,KAAK,WACR2a,OAAQnD,EAAOmD,OACf5D,UAAWnpB,KAAKgjB,eAChBoK,QAASptB,KAAKgkB,ejBi0JhBrhB,IAAK,YACL+B,MAAO,WiB7zJmB,OAAtB1E,KAAK6jB,cACPyH,aAAatrB,KAAK6jB,cAEO,OAAvB7jB,KAAK4jB,eACPyJ,cAAcrtB,KAAK4jB,kBjBk0JrBjhB,IAAK,aACL+B,MAAO,WiB9zJP,MAA0B,IAAtB1E,KAAKmkB,QAAQO,MAAiB1kB,KAAKmkB,QAAQQ,cAAgB,IAG1D3kB,KAAKgrB,cAAV,CAIA,GAAMjrB,GAAOC,IAEbA,MAAK4jB,cAAgB0J,YAAY,WAC/B,IAAKvtB,EAAKirB,cAER,WADAjrB,GAAKwtB,WAGPxtB,GAAK2kB,OACL3kB,EAAK8jB,aAAenP,WAAW,WAC7B3U,EAAKgqB,YAAY,WAAW,IAC3BhqB,EAAKokB,QAAQS,kBACf5kB,KAAKmkB,QAAQQ,kBjBk0JhBhiB,IAAK,eACL+B,MAAO,WiB/zJP1E,KAAKutB,YACLvtB,KAAKwtB,gBjBm0JL7qB,IAAK,kBACL+B,MAAO,SiBj0JOsV,EAASrI,GACvB,GAAM2W,GAAMtoB,KAAK2sB,QAAQ3S,EACzB,IAAKsO,GAGAA,EAAImF,iBAGT,MAAmB,KAAf9b,EAAM+b,MApwBQ,YAowBM/b,EAAM9K,YAC5B7G,MAAK+pB,YAAY,WAAW,OAG9BzB,GAAIqF,mBAAmBhc,MjBq0JvBhP,IAAK,qBACL+B,MAAO,SiBn0JUsV,EAAS4P,GAC1B,GAAMtB,GAAMtoB,KAAK2sB,QAAQ3S,EACzB,IAAKsO,GAGAA,EAAImF,iBAAT,CAIA,GAAIG,GAAehE,EAAOgE,YAE1B,IAAIA,GAAgBA,EAAaprB,OAAS,EAAG,CAE3CorB,EAAeA,EAAaC,SAC5B,KAAK,GAAIxtB,KAAKutB,GACRA,EAAapsB,eAAenB,IAC9BL,KAAK8tB,oBACHC,KAAMH,EAAavtB,SAKrB,QAAUupB,KAEZ5pB,KAAKqjB,oBAAoBrJ,GAAW4P,EAAO0C,KAI/C,IAAI0B,IAAY,CAEZ,cAAepE,KACjBoE,EAAYpE,EAAOoE,WAErB1F,EAAI2F,qBAAqBD,OjBs0JzBrrB,IAAK,sBACL+B,MAAO,SiBp0JWmC,GAClB,GAAM5C,GAAK4C,EAAQ5C,GACb2lB,EAAS/iB,EAAQ+iB,MAEvB,IAAM3lB,IAAMjE,MAAK+jB,WAAjB,CAGA,GAAMoE,GAAYnoB,KAAK+jB,WAAW9f,EAGlC,UAFOjE,MAAK+jB,WAAW9f,IAElB,EAAA2d,EAAAnQ,aAAY5K,GAMV,CACL,GAAMuhB,GAAUD,EAAUC,OAC1B,KAAKA,EACH,MAEFA,GAAQvhB,EAAQ8K,WAXS,CACzB,GAAMgD,GAAWwT,EAAUxT,QAC3B,KAAKA,EACH,MAEFA,GAASiV,QjB80JXjnB,IAAK,cACL+B,MAAO,SiBr0JGsV,EAAStI,GACnB,GAAM5F,GAAO9L,KAAK2iB,SAASuL,kBAAkBluB,KAAKoiB,aAAa+L,KAAMzc,GAC/D4W,EAAMtoB,KAAK2sB,QAAQ3S,EACpBsO,IAGLA,EAAIlW,KAAK,OAAQtG,MjBw0JjBnJ,IAAK,eACL+B,MAAO,SiBt0JIsV,EAAStI,GACpB,GAAM0c,GAAQpuB,KAAK2iB,SAASuL,kBAAkBluB,KAAKoiB,aAAaiM,MAAO3c,GACjE4W,EAAMtoB,KAAK2sB,QAAQ3S,EACpBsO,IAGLA,EAAIlW,KAAK,QAASgc,MjBy0JlBzrB,IAAK,eACL+B,MAAO,SiBv0JIsV,GACX,GAAMsO,GAAMtoB,KAAK2sB,QAAQ3S,EACpBsO,IAGLA,EAAIgG,iBjB00JJ3rB,IAAK,qBACL+B,MAAO,SiBx0JUsV,EAAStI,GAC1B,GAAM6c,GAAcvuB,KAAK2iB,SAASuL,kBAAkBluB,KAAKoiB,aAAaoM,YAAa9c,EAEnF1R,MAAKqjB,oBAAoBrJ,GAAWuU,EAAYrG,GAChD,IAAMI,GAAMtoB,KAAK2sB,QAAQ3S,EACpBsO,IAGLA,EAAIlW,KAAK,UAAWmc,MjB20JpB5rB,IAAK,mBACL+B,MAAO,SiBz0JQklB,GAIf,GAHI5pB,KAAK2jB,iBACP2H,aAAatrB,KAAK2jB,iBAEhBiG,EAAOiD,QAAS,CAClB,GAAM9sB,GAAOC,IAGb,IAFgB4pB,EAAOkD,QAMrB,YAHA/sB,EAAK4jB,gBAAkBjP,WAAW,WAChC3U,EAAK2rB,SAASnrB,KAAKR,IAClBA,EAAKokB,QAAQmB,gBAAkBpd,KAAKyjB,MAAsB,IAAhBzjB,KAAKoJ,WAGpDtR,MAAKmjB,UAAYyG,EAAOmD,OACxBhtB,EAAK4jB,gBAAkBjP,WAAW,WAChC3U,EAAK2rB,SAASnrB,KAAKR,IACL,IAAb6pB,EAAOoD,SjB60JZrqB,IAAK,oBACL+B,MAAO,SiB10JS+pB,GAChB,GAAM7E,GAAS5pB,KAAK2iB,SAAS+L,cAAcD,EAAM7E,QAC7CnlB,EAAO,CACP,SAAUmlB,KACZnlB,EAAOmlB,EAAA,KAET,IAAM5P,GAAU4P,EAAO5P,OAEV,KAATvV,EACFzE,KAAK8tB,mBAAmB9T,EAAS4P,EAAOlY,MACtB,IAATjN,EACTzE,KAAK2uB,YAAY3U,EAAS4P,EAAOlY,MACf,IAATjN,EACTzE,KAAK4uB,aAAa5U,EAAS4P,EAAOlY,MAChB,IAATjN,GACTzE,KAAK6uB,aAAa7U,MjB80JpBrX,IAAK,iBACL+B,MAAO,SiB30JM+pB,GACb,OAAc5rB,KAAV4rB,GAAiC,OAAVA,EAEzB,WADAzuB,MAAKimB,OAAO,wCAId,IAAMhiB,GAAKwqB,EAAMxqB,EAEbA,IAAMA,EAAK,EACbjE,KAAK8uB,oBAAoBL,GAEzBzuB,KAAK+uB,kBAAkBN,MjB+0JzB9rB,IAAK,SACL+B,MAAO,WiB30JP,GAAMsqB,GAAWhvB,KAAKsjB,UAAU1T,MAAM,EACtC5P,MAAKsjB,aACLtjB,KAAKivB,MAAMD,MjB+0JXrsB,IAAK,QACL+B,MAAO,WiB50JP1E,KAAK8qB,aACHtB,OAAQxpB,KAAKkiB,YAAYgN,UjBi1J3BvsB,IAAK,WACL+B,MAAO,SiB90JAsV,GACP,MAAOA,KAAWha,MAAKqjB,uBjBi1JvB1gB,IAAK,aACL+B,MAAO,SiB/0JEsV,GACT,GAAMmV,GAAUnvB,KAAKqjB,oBAAoBrJ,EAEzC,OAAImV,IACFnvB,KAAKimB,OAAO,sCAAuCjM,GAC5CmV,IAETnvB,KAAKimB,OAAO,gCAAiCjM,GACtC,OjBk1JPrX,IAAK,qBACL+B,MAAO,SiB/0JUmC,EAAS6mB,GAQ1B,OANE/b,OACE9K,QAASA,EACT6mB,KAAMA,GAAQ,OjBs1JlB/qB,IAAK,gBACL+B,MAAO,SiBh1JKT,EAAI0Q,EAAUyT,GAC1B,GAAMroB,GAAOC,IAEbA,MAAK+jB,WAAW9f,IACd0Q,SAAUA,EACVyT,QAASA,GAEX1T,WAAW,iBACF3U,GAAKgkB,WAAW9f,IACnB,EAAA2d,EAAArR,YAAW6X,IACbA,EAAQroB,EAAKsoB,mBAr9BC,aAu9BfroB,KAAKmkB,QAAQK,YjBm1JhB7hB,IAAK,cACL+B,MAAO,SiBj1JGmC,EAASuoB,GACnB,GAAInrB,SAUJ,OATKmrB,KACHnrB,EAAKjE,KAAKqvB,iBACVxoB,EAAQ5C,GAAKA,IAEU,IAArBjE,KAAKujB,YACPvjB,KAAKsjB,UAAUvQ,KAAKlM,GAEpB7G,KAAKivB,OAAOpoB,IAETuoB,EAGE,EAFEnrB,KjBs1JTtB,IAAK,cACL+B,MAAO,WiBj1JP,MAAO1E,MAAKsvB,kBjBq1JZ3sB,IAAK,UACL+B,MAAO,WiBl1JP1E,KAAKuqB,cjBs1JL5nB,IAAK,aACL+B,MAAO,WiBn1JP1E,KAAK+pB,YAAY,UAAU,MjBu1J3BpnB,IAAK,OACL+B,MAAO,WiBp1JP,MAAO1E,MAAKuvB,WjBw1JZ5sB,IAAK,gBACL+B,MAAO,WiBn1JP1E,KAAKujB,aAAc,KjBy1JnB5gB,IAAK,eACL+B,MAAO,SiBv1JI6P,GAEXA,EAAQA,IAAS,EACjBvU,KAAKujB,aAAc,GACL,IAAVhP,GACFvU,KAAKuU,WjB21JP5R,IAAK,QACL+B,MAAO,WiBt1JP1E,KAAKwvB,YjB21JL7sB,IAAK,oBACL+B,MAAO,WiBt1JP1E,KAAKwjB,iBAAkB,KjB41JvB7gB,IAAK,mBACL+B,MAAO,WiBz1JP,GAAIrE,GACF2Z,CAIFha,MAAKwjB,iBAAkB,CACvB,IAAMiM,GAAezvB,KAAKyjB,aAE1BzjB,MAAKyjB,gBACL,IAAMiM,KAEN,KAAK1V,IAAWyV,GACd,GAAIA,EAAajuB,eAAewY,GAAU,CACxC,GAAMsO,GAAMtoB,KAAK2sB,QAAQ3S,EAEzB,KAAKsO,EACH,QAEFoH,GAAS3c,KAAKiH,GAIlB,GAAwB,IAApB0V,EAASltB,OAAb,CAIA,GAAMkP,IACJqb,OAAQ/sB,KAAKmjB,UACbuM,SAAUA,GAGN3vB,EAAOC,KAEPyrB,EAAK,SAAU9Z,EAAOD,GAC1B,IAAc,IAAVC,EAAJ,CAiBA,GAAIge,IAAQ,CAEP5vB,GAAKwjB,cACRxjB,EAAKktB,gBACL0C,GAAQ,EAGV,KAAKtvB,IAAKqvB,GACR,GAAIA,EAASluB,eAAenB,GAAI,CAC9B2Z,EAAU0V,EAASrvB,EACnB,IAAMuvB,GAAkBle,EAAKsI,EAE7B,KAAK4V,EAAiB,CAEpB7vB,EAAKysB,oBACH7a,MAAO,8CACPoc,MACE/T,QAASA,IAGb,UAEF,GAAK4V,EAAgBhJ,QAAqC,MAA3BgJ,EAAgBhJ,OAsB7C7mB,EAAKysB,oBACH7a,MAAOie,EAAgBhJ,OACvBmH,MACE/T,QAASA,SAzBgD,CAC7D,GAAMuP,IACJC,OAAQzpB,EAAKmiB,YAAY8J,UACzBlG,QACE9L,QAASA,EACT+S,OAAQhtB,EAAKojB,UACb0E,KAAM+H,EAAgB/H,KACtBC,KAAM8H,EAAgB9H,OAGpBuE,EAAUtsB,EAAKqsB,SAASpS,IAEd,IAAZqS,IACF9C,EAAIzD,OAAOuG,SAAU,EACrB9C,EAAIzD,OAAOwG,KAAOvsB,EAAKwsB,WAAWvS,IAEpCja,EAAK4pB,MAAMJ,GAAK1U,KAAK,SAAU+U,GAC7B7pB,EAAKysB,mBAAmBxS,EAASja,EAAK4iB,SAASmH,oBAAoB/pB,EAAKmiB,YAAY8J,UAAWpC,KAC9F,SAAUlX,GACX3S,EAAK0sB,gBAAgBzS,EAAStH,MAalCid,GACF5vB,EAAKotB,cAAa,OAxEpB,CACEptB,EAAKkmB,OAAO,+BACZ,KAAK5lB,IAAKqvB,GACJA,EAASluB,eAAenB,KAC1B2Z,EAAU0V,EAASrvB,GACnBN,EAAKysB,oBACH7a,MAAO,+BACPoc,MACE/T,QAASA,OAqEO,QAAxBha,KAAKmkB,QAAQyB,OACf5lB,KAAKmkB,QAAQyB,QACXlU,KAAMA,GACL+Z,GAEHzrB,KAAK8rB,MAAM9rB,KAAKmkB,QAAQsB,aAAczlB,KAAKmkB,QAAQwB,WAAY3lB,KAAKmkB,QAAQuB,YAAahU,EAAM+Z,OjB41JjG9oB,IAAK,YACL+B,MAAO,SiBz1JCsV,EAAS6V,GACjB,GAAIpd,UAAUjQ,OAAS,EACrB,KAAM,IAAI0D,OAAM,6CAA+CuM,UAAUjQ,OAE3E,MAAK,EAAAof,EAAA5b,UAASgU,GACZ,KAAM,IAAI9T,OAAM,kDAElB,KAAKlG,KAAKmkB,QAAQM,cAAgBzkB,KAAKgrB,cACrC,KAAM,IAAI9kB,OAAM,2EAGlB,IAAM4pB,GAAa9vB,KAAK2sB,QAAQ3S,EAEhC,IAAmB,OAAf8V,EAKF,MAJAA,GAAWC,WAAWF,GAClBC,EAAWE,mBACbF,EAAWva,YAENua,CAET,IAAMxH,GAAM,GAAIzG,GAAa7hB,KAAMga,EAAS6V,EAG5C,OAFA7vB,MAAKojB,MAAMpJ,GAAWsO,EACtBA,EAAI/S,YACG+S,MjB61JFrH,GiBhgMuB7Z,KjBkgMH7G,KAAKZ,EAASO,EAAoB,KAIzD,SAAUN,EAAQD,EAASO,GAEjC,YASA,SAASqgB,GAAgBC,EAAU/K,GAAe,KAAM+K,YAAoB/K,IAAgB,KAAM,IAAItQ,WAAU,qCANhHrE,OAAOC,eAAepB,EAAS,cAC7B+E,OAAO,GAGT,IAAI2c,GAAe,WAAc,QAAS3V,GAAiB4V,EAAQC,GAAS,IAAK,GAAIlhB,GAAI,EAAGA,EAAIkhB,EAAM/e,OAAQnC,IAAK,CAAE,GAAImhB,GAAaD,EAAMlhB,EAAImhB,GAAWvgB,WAAaugB,EAAWvgB,aAAc,EAAOugB,EAAWxgB,cAAe,EAAU,SAAWwgB,KAAYA,EAAWV,UAAW,GAAMhgB,OAAOC,eAAeugB,EAAQE,EAAW7e,IAAK6e,IAAiB,MAAO,UAAU/L,EAAagM,EAAYC,GAAiJ,MAA9HD,IAAY/V,EAAiB+J,EAAYlU,UAAWkgB,GAAiBC,GAAahW,EAAiB+J,EAAaiM,GAAqBjM,KkBriMnhB0M,mBACXsH,QAAS,UACTmC,QAAS,UACTI,UAAW,YACXU,YAAa,cACbuD,QAAS,UACTC,SAAU,WACVC,eAAgB,iBAChBC,QAAS,UACTlB,KAAM,OACNvE,IAAK,MACLC,QAAS,WAGEvI,mBACXmM,YAAa,EACbL,KAAM,EACNE,MAAO,EACPgC,MAAO,GlB4iMS1wB,EkBziML2nB,YlByiM2B,WACtC,QAASA,KACP/G,EAAgBvgB,KAAMsnB,GAgBxB,MAbAjG,GAAaiG,IACX3kB,IAAK,iBACL+B,MAAO,SkB/iMMikB,GACb,GAAM2H,KACN,KAAK,GAAMjwB,KAAKsoB,GACVA,EAASnnB,eAAenB,IAC1BiwB,EAAgBvd,KAAK+T,KAAKK,UAAUwB,EAAStoB,IAGjD,OAAOiwB,GAAgBxkB,KAAK,UlBmjMvBwb,KAGS3nB,EkBljML4nB,YlBkjM2B,WACtC,QAASA,KACPhH,EAAgBvgB,KAAMunB,GAoCxB,MAjCAlG,GAAakG,IACX5kB,IAAK,gBACL+B,MAAO,SkBxjMKgN,GACZ,GAAI8Y,MACE+F,EAAiB7e,EAAKrC,MAAM,KAClC,KAAK,GAAIhP,KAAKkwB,GACZ,GAAIA,EAAe/uB,eAAenB,GAAI,CACpC,IAAKkwB,EAAelwB,GAClB,QAEF,IAAMouB,GAAQ3H,KAAKC,MAAMwJ,EAAelwB,GACxCmqB,GAAQzX,KAAK0b,GAGjB,MAAOjE,MlB2jMP7nB,IAAK,sBACL+B,MAAO,SkBzjMW8rB,EAAY9e,GAC9B,MAAOA,MlB4jMP/O,IAAK,gBACL+B,MAAO,SkB1jMKgN,GACZ,MAAOA,MlB6jMP/O,IAAK,oBACL+B,MAAO,SkB3jMS+rB,EAAa/e,GAC7B,MAAOA,OlB+jMF6V,MAKH,SAAU3nB,EAAQD,GmBnnMxB,QAAA+wB,KACA,SAAAxqB,OAAA,mCAEA,QAAAyqB,KACA,SAAAzqB,OAAA,qCAsBA,QAAA0qB,GAAAC,GACA,GAAAC,IAAApc,WAEA,MAAAA,YAAAmc,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAApc,WAEA,MADAoc,GAAApc,WACAA,WAAAmc,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAjoB,GACL,IAEA,MAAAkoB,GAAAvwB,KAAA,KAAAswB,EAAA,GACS,MAAAjoB,GAET,MAAAkoB,GAAAvwB,KAAAP,KAAA6wB,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAA3F,aAEA,MAAAA,cAAA0F,EAGA,KAAAC,IAAAN,IAAAM,IAAA3F,aAEA,MADA2F,GAAA3F,aACAA,aAAA0F,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAApoB,GACL,IAEA,MAAAqoB,GAAA1wB,KAAA,KAAAywB,GACS,MAAApoB,GAGT,MAAAqoB,GAAA1wB,KAAAP,KAAAgxB,KAYA,QAAAE,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAA5uB,OACAoS,EAAAwc,EAAAC,OAAAzc,GAEA0c,GAAA,EAEA1c,EAAApS,QACA+uB,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAA3M,GAAAoM,EAAAM,EACAC,IAAA,CAGA,KADA,GAAA5e,GAAAqC,EAAApS,OACA+P,GAAA,CAGA,IAFA6e,EAAAxc,EACAA,OACA0c,EAAA/e,GACA6e,GACAA,EAAAE,GAAAE,KAGAF,IAAA,EACA/e,EAAAqC,EAAApS,OAEA4uB,EAAA,KACAD,GAAA,EACAJ,EAAAvM,IAiBA,QAAAiN,GAAAZ,EAAAvuB,GACAtC,KAAA6wB,MACA7wB,KAAAsC,QAYA,QAAA2S,MAhKA,GAOA6b,GACAG,EARAppB,EAAAjI,EAAAD,YAgBA,WACA,IAEAmxB,EADA,kBAAApc,YACAA,WAEAgc,EAEK,MAAA9nB,GACLkoB,EAAAJ,EAEA,IAEAO,EADA,kBAAA3F,cACAA,aAEAqF,EAEK,MAAA/nB,GACLqoB,EAAAN,KAuDA,IAEAS,GAFAxc,KACAuc,GAAA,EAEAG,GAAA,CAyCAzpB,GAAA4R,SAAA,SAAAoX,GACA,GAAAhgB,GAAA,GAAAtO,OAAAkQ,UAAAjQ,OAAA,EACA,IAAAiQ,UAAAjQ,OAAA,EACA,OAAAnC,GAAA,EAAuBA,EAAAoS,UAAAjQ,OAAsBnC,IAC7CwQ,EAAAxQ,EAAA,GAAAoS,UAAApS,EAGAuU,GAAA7B,KAAA,GAAA0e,GAAAZ,EAAAhgB,IACA,IAAA+D,EAAApS,QAAA2uB,GACAP,EAAAW,IASAE,EAAAlwB,UAAAiwB,IAAA,WACAxxB,KAAA6wB,IAAA7f,MAAA,KAAAhR,KAAAsC,QAEAuF,EAAA6pB,MAAA,UACA7pB,EAAA8pB,SAAA,EACA9pB,EAAA+pB,OACA/pB,EAAAgqB,QACAhqB,EAAAiqB,QAAA,GACAjqB,EAAAC,YAIAD,EAAAqL,GAAA+B,EACApN,EAAA+K,YAAAqC,EACApN,EAAAsL,KAAA8B,EACApN,EAAAkqB,IAAA9c,EACApN,EAAAuL,eAAA6B,EACApN,EAAA4L,mBAAAwB,EACApN,EAAAuK,KAAA6C,EACApN,EAAAmqB,gBAAA/c,EACApN,EAAAoqB,oBAAAhd,EAEApN,EAAA2K,UAAA,SAAA7R,GAAqC,UAErCkH,EAAAqqB,QAAA,SAAAvxB,GACA,SAAAuF,OAAA,qCAGA2B,EAAAsqB,IAAA,WAA2B,WAC3BtqB,EAAAuqB,MAAA,SAAAC,GACA,SAAAnsB,OAAA,mCAEA2B,EAAAyqB,MAAA,WAA4B,WnBqoMtB,SAAU1yB,EAAQD,EAASO,GAEjC,YAWA,SAASqgB,GAAgBC,EAAU/K,GAAe,KAAM+K,YAAoB/K,IAAgB,KAAM,IAAItQ,WAAU,qCAEhH,QAASsb,GAA2B1gB,EAAMQ,GAAQ,IAAKR,EAAQ,KAAM,IAAI2gB,gBAAe,4DAAgE,QAAOngB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BR,EAAPQ,EAElO,QAASogB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1b,WAAU,iEAAoE0b,GAAeD,GAASrf,UAAYT,OAAOuE,OAAOwb,GAAcA,EAAWtf,WAAagE,aAAeb,MAAOkc,EAAU3f,YAAY,EAAO6f,UAAU,EAAM9f,cAAc,KAAe6f,IAAY/f,OAAOigB,eAAiBjgB,OAAOigB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAZje/f,OAAOC,eAAepB,EAAS,cAC7B+E,OAAO,GAGT,IAAI2c,GAAe,WAAc,QAAS3V,GAAiB4V,EAAQC,GAAS,IAAK,GAAIlhB,GAAI,EAAGA,EAAIkhB,EAAM/e,OAAQnC,IAAK,CAAE,GAAImhB,GAAaD,EAAMlhB,EAAImhB,GAAWvgB,WAAaugB,EAAWvgB,aAAc,EAAOugB,EAAWxgB,cAAe,EAAU,SAAWwgB,KAAYA,EAAWV,UAAW,GAAMhgB,OAAOC,eAAeugB,EAAQE,EAAW7e,IAAK6e,IAAiB,MAAO,UAAU/L,EAAagM,EAAYC,GAAiJ,MAA9HD,IAAY/V,EAAiB+J,EAAYlU,UAAWkgB,GAAiBC,GAAahW,EAAiB+J,EAAaiM,GAAqBjM,MoBl0MhiBmM,EAAA1hB,EAAA,GAHMkH,EAAelH,EAAQ,GACvBwY,EAAUxY,EAAQ,IAMlBqyB,EAAa,EAME1Q,EpB20MF,SAAUC,GoB10M3B,QAAAD,GAAY2Q,EAAYxY,EAAS6V,GAAQtP,EAAAvgB,KAAA6hB,EAAA,IAAAG,GAAAvB,EAAAzgB,MAAA6hB,EAAAb,WAAAlgB,OAAAmhB,eAAAJ,IAAAthB,KAAAP,MAAA,OAEvCgiB,GAAKhI,QAAUA,EACfgI,EAAKyQ,YAAcD,EACnBxQ,EAAKY,QAAU2P,EACfvQ,EAAK0Q,OAAS,KACd1Q,EAAK2Q,gBAAiB,EACtB3Q,EAAK4Q,YAAa,EAClB5Q,EAAK6Q,QAAS,EACd7Q,EAAK8Q,SAAW,KAChB9Q,EAAK+Q,gBAAiB,EACtB/Q,EAAK+N,WAAWF,GAChB7N,EAAKgR,qBAZkChR,EpBolNzC,MAzQArB,GAAUkB,EAAcC,GAqBxBT,EAAaQ,IACXlf,IAAK,qBACL+B,MAAO,WoB/0MP,GAAI3E,GAAOC,IAEXA,MAAK6yB,QAAS,EAEd7yB,KAAK8yB,SAAW,GAAIpa,GAAQ,SAAUvM,EAASqK,GAC7CzW,EAAKkzB,SAAW,SAAUvuB,GACxB3E,EAAK8yB,QAAS,EACd1mB,EAAQzH,IAEV3E,EAAKmzB,QAAU,SAAUxgB,GACvB3S,EAAK8yB,QAAS,EACdrc,EAAO9D,SpBw1MX/P,IAAK,aACL+B,MAAO,SoBp1MEmrB,GACT,GAAKA,EAGL,IAAI,EAAAjO,EAAArR,YAAWsf,GAEb7vB,KAAKkT,GAAG,UAAW2c,OACd,IAAI/uB,OAAOS,UAAU0F,SAAS1G,KAAKsvB,KAAY/uB,OAAOS,UAAU0F,SAAS1G,SAE9E,IAAK,GADC4yB,IAAe,UAAW,OAAQ,QAAS,cAAe,YAAa,SACpE9yB,EAAI,EAAGC,EAAI6yB,EAAY3wB,OAAQnC,EAAIC,EAAGD,IAAK,CAClD,GAAM+yB,GAAKD,EAAY9yB,EACnB+yB,KAAMvD,IACR7vB,KAAKkT,GAAGkgB,EAAIvD,EAAOuD,QpB01MzBzwB,IAAK,SACL+B,MAAO,WoBp1MP,MAAO1E,MAAK4iB,UAAY2P,KpBw1MxB5vB,IAAK,kBACL+B,MAAO,WoBr1MP,MA7DwB,KA6DjB1E,KAAK4iB,WpBy1MZjgB,IAAK,iBACL+B,MAAO,WoBt1MP,MApEuB,KAoEhB1E,KAAK4iB,WpB01MZjgB,IAAK,WACL+B,MAAO,WoBv1MP,MAvEmB,KAuEZ1E,KAAK4iB,SAtEK,IAsEyB5iB,KAAK4iB,WpB21M/CjgB,IAAK,aACL+B,MAAO,WoBx1MP,MA3EmB,KA2EZ1E,KAAK4iB,WpB41MZjgB,IAAK,WACL+B,MAAO,WoBz1MP,MA9EiB,KA8EV1E,KAAK4iB,WpB61MZjgB,IAAK,UACL+B,MAAO,WoB11MP1E,KAAK4iB,QAAU2P,KpB81Mf5vB,IAAK,kBACL+B,MAAO,YoB31Ma,IAAhB1E,KAAK6yB,SAEP7yB,KAAKgzB,qBACLhzB,KAAK2yB,gBAAiB,GAExB3yB,KAAK4iB,QA7FkB,KpB47MvBjgB,IAAK,uBACL+B,MAAO,SoB71MYspB,GACnB,GAhGmB,IAgGfhuB,KAAK4iB,QAAT,CAGA5iB,KAAK4yB,WAAa5E,EAClBhuB,KAAK4iB,QApGc,CAqGnB,IAAMyQ,GAAiBrzB,KAAKszB,4BAA4BtF,EAExDhuB,MAAKoS,KAAK,YAAaihB,GACvBrzB,KAAKizB,SAASI,OpBg2Md1wB,IAAK,qBACL+B,MAAO,SoB91MUgO,GACjB,GA3GiB,IA2Gb1S,KAAK4iB,QAAT,CAGA5iB,KAAK4iB,QA9GY,EA+GjB5iB,KAAK0yB,OAAShgB,CACd,IAAM6gB,GAAavzB,KAAKwzB,2BAExBxzB,MAAKoS,KAAK,QAASmhB,GACnBvzB,KAAKkzB,QAAQK,OpBi2Mb5wB,IAAK,sBACL+B,MAAO,WoB91MP1E,KAAKoS,KAAK,eACR4H,QAASha,KAAKga,apBm2MhBrX,IAAK,mBACL+B,MAAO,SoBh2MQ+uB,GA3HS,IA4HpBzzB,KAAK4iB,UAGT5iB,KAAK4iB,QA/HmB,GAgIF,IAAlB6Q,IACFzzB,KAAK+yB,gBAAiB,GAExB/yB,KAAKwoB,0BpBm2ML7lB,IAAK,qBACL+B,MAAO,WoBh2MP,OAAQ1E,KAAK+yB,kBpBo2MbpwB,IAAK,8BACL+B,MAAO,WoBj2MP,OACEsV,QAASha,KAAKga,QACd0Z,cAAe1zB,KAAK2yB,eACpB3E,UAAWhuB,KAAK4yB,epBs2MlBjwB,IAAK,4BACL+B,MAAO,WoBl2MP,GAAIivB,GAAwB3zB,KAAK0yB,MAGjC,OAFAiB,GAAsB3Z,QAAUha,KAAKga,QACrC2Z,EAAsBD,cAAgB1zB,KAAK2yB,eACpCgB,KpBs2MPhxB,IAAK,QACL+B,MAAO,SoBp2MHiQ,EAAUyT,GACVpoB,KAAK6yB,SACH7yB,KAAKuoB,aACP5T,EAAS3U,KAAKszB,+BAEdlL,EAAQpoB,KAAKwzB,iCpBy2MjB7wB,IAAK,YACL+B,MAAO,WoB1gNY,IAsKf1E,KAAK4iB,SAGT5iB,KAAKyyB,YAAYvG,WAAWlsB,SpBw2M5B2C,IAAK,cACL+B,MAAO,WoBr2MP1E,KAAK0oB,kBAAiB,GACtB1oB,KAAKyyB,YAAYmB,aAAa5zB,SpBy2M9B2C,IAAK,cACL+B,MAAO,SoBv2MGmC,EAASpC,GACnB,GAAI1E,GAAOC,IACX,OAAO,IAAI0Y,GAAQ,SAAUvM,EAASqK,GACpC,GAAIzW,EAAKiwB,kBAEP,WADAxZ,GAAOzW,EAAK0yB,YAAYpK,mBAAmB,6BAG7CtoB,GAAK+yB,SAASje,KAAK,WACjB,IAAK9U,EAAK0yB,YAAYzH,cAEpB,WADAxU,GAAOzW,EAAK0yB,YAAYpK,mBAAmB,gBAG7CtoB,GAAK0yB,YAAY9I,MAAM9iB,GAASgO,KAAK,SAAU+U,GAC7Czd,EAAQpM,EAAK0yB,YAAY9P,SAASmH,oBAAoBrlB,EAAMmlB,KAC3D,SAAUlX,GACX8D,EAAO9D,MAER,SAAUA,GACX8D,EAAO9D,UpB42MX/P,IAAK,UACL+B,MAAO,SoBx2MDgN,GACN,MAAO1R,MAAK6zB,aACVrK,OAAQxpB,KAAKyyB,YAAYvQ,YAAY+N,QACrCnK,QACE9L,QAASja,KAAKia,QACdtI,KAAMA,IAEP1R,KAAKyyB,YAAYvQ,YAAY+N,YpB22MhCttB,IAAK,WACL+B,MAAO,WoBx2MP,MAAO1E,MAAK6zB,aACVrK,OAAQxpB,KAAKyyB,YAAYvQ,YAAYgO,SACrCpK,QACE9L,QAASja,KAAKia,UAEfha,KAAKyyB,YAAYvQ,YAAYgO,apB42MhCvtB,IAAK,gBACL+B,MAAO,WoBz2MP,MAAO1E,MAAK6zB,aACVrK,OAAQxpB,KAAKyyB,YAAYvQ,YAAYiO,eACrCrK,QACE9L,QAASja,KAAKia,UAEfha,KAAKyyB,YAAYvQ,YAAYiO,mBpB62MhCxtB,IAAK,UACL+B,MAAO,WoB12MP,MAAO1E,MAAK6zB,aACVrK,OAAQxpB,KAAKyyB,YAAYvQ,YAAYkO,QACrCtK,QACE9L,QAASja,KAAKia,UAEfha,KAAKyyB,YAAYvQ,YAAYkO,apB+2M3BvO,GoBrlNiCza,EpBwlN1CzH,GAAQyO,QoBxlNayT,EpBylNrBjiB,EAAOD,QAAUA,EAAiB,SAI5B,SAAUC,EAAQD,EAASO,GAEjC,YqBxlNA,SAAAgH,GAAAyU,EAAAmY,GAKA,IAJA,GAAAhO,GAAA,GAAAvjB,OAAAkQ,UAAAjQ,OAAA,GACA4N,EAAA,EACA3N,EAAA,EACAsxB,GAAA,EACAtxB,EAAAgQ,UAAAjQ,QACAsjB,EAAA1V,KAAAqC,UAAAhQ,IACA,WAAAiW,SAAA,SAAAvM,EAAAqK,GACAsP,EAAA1V,GAAA,SAAAsC,GACA,GAAAqhB,EAEA,GADAA,GAAA,EACArhB,EACA8D,EAAA9D,OACA,CAGA,IAFA,GAAAoT,GAAA,GAAAvjB,OAAAkQ,UAAAjQ,OAAA,GACA4N,EAAA,EACAA,EAAA0V,EAAAtjB,QACAsjB,EAAA1V,KAAAqC,UAAArC,EACAjE,GAAA6E,MAAA,KAAA8U,IAIA,KACAnK,EAAA3K,MAAA8iB,GAAA,KAAAhO,GACS,MAAApT,GACTqhB,IACAA,GAAA,EACAvd,EAAA9D,OA9CA9S,EAAAD,QAAAuH,GrBoqNM,SAAUtH,OAAQD,QAASO,qBAEjC,YsB9pNA,SAAAiC,SAAA6xB,YACA,IACA,GAAAC,KAAA7oB,KAAA,QAAAhI,QAAA,WAAA4wB,WACA,IAAAC,UAAAzxB,QAAA1B,OAAAuB,KAAA4xB,KAAAzxB,QACA,MAAAyxB,KACK,MAAArrB,IACL,YAdAhJ,OAAAD,QAAAwC,StB4rNM,SAAUvC,EAAQD,EAASO,GAEjC,YuBzrNAP,GA6BAgP,QAAAzO,EAAA,KvBqsNM,SAAUN,EAAQD,EAASO,GAEjC,YwBzuNAN,GAAAD,YxBgwNM,SAAUC,EAAQD,EAASO,GAEjC,YyBnvNA,SAAAg0B,GAAAC,EAAApU,EAAAqU,EAAAC,GACA,MAAAtU,GAAA1S,aAAAinB,MACAH,EAAA,+CAAAC,EAAAC,GAAAtU,EAAA9b,IAAA,UAAA8b,EAAA9b,IAAA,UACAkwB,EAAA,oDAAAC,EAAAC,GAAAtU,EAAA9b,IAAA,UAQA,QAAAswB,GAAAC,GAWA,OALAn0B,GAAAg0B,EAJAF,EAAAtyB,EAAAE,SAAA,SAAAyyB,EAAA7zB,KAAA,WACA,UACA,qBAKAsO,EAAAulB,EAAA3U,YAAAjQ,QAAA6kB,KAAA5yB,EAAAiC,mBAEAzD,EAAA,EAAmBA,EAAA4O,EAAAzM,SAAmBnC,EAAA,CACtC,GAAA0f,GAAA9Q,EAAA5O,GAAA8L,UACA1J,EAAA+xB,EAAAE,aAAA5kB,QAAAiQ,GACAtb,EAAAsb,EAAA1S,uBAAAzL,GAAA,QAAAme,EAAAtb,KACA+a,EAAApS,EAAAiD,MAAA5L,EACA4vB,GAAA,IAAAxyB,EAAAqB,SAAA6c,EAAApf,MAGAof,EAAAhT,KACAonB,EACA,sCAAyCE,EAAAtU,EAAApf,MACzC,mDAA0D0zB,GAC1D,4CAAAtU,EAAA9b,IAAA,WAAAmJ,EAAAkD,OAAAyP,EAAA4U,SAAA5U,EAAA4U,aACA9xB,KAAA2c,EAAA2U,EACA,oEAAA1xB,EAAA4xB,GACAF,EACA,wCAAA3U,EAAA/a,EAAA4vB,GACAF,EACA,KACA,MAGSpU,EAAAjT,UAA2BqnB,EACpC,2BAA8BE,KAG9BtU,EAAApS,YAAA9K,KAAAuK,EAAAO,OAAAlJ,GAAmE0vB,EAEnE,uBAAApU,EAAA9b,IAAA,UACA,+BAAkCowB,GAClC,cAAA5vB,EAAA4vB,GACA,eAGoBF,EAEpB,+BAAkCE,OAClCxxB,KAAA2c,EACA0U,EAAAC,EAAApU,EAAAtd,EAAA4xB,EAAA,OACAF,EACA,0BAAApU,EAAA9b,IAAA,EAAAub,KAAA,EAAA/a,EAAA4vB,IAEaF,EACb,OAIApU,EAAAlT,UAAAsnB,EACA,qCAAAE,EAAAtU,EAAApf,UAEAkC,KAAA2c,EACA0U,EAAAC,EAAApU,EAAAtd,EAAA4xB,GACAF,EACA,uBAAApU,EAAA9b,IAAA,EAAAub,KAAA,EAAA/a,EAAA4vB,IAKA,MAAAF,GACA,YAhGAv0B,EAAAD,QAAA40B,CAEA,IAAA3yB,GAAA1B,EAAA,GACAkN,EAAAlN,EAAA,GACA2B,EAAA3B,EAAA,IzBs2NM,SAAUN,EAAQD,EAASO,GAEjC,Y0B/0NA,SAAAyB,GAAAhB,EAAAoE,GACAU,EAAAlF,KAAAP,KAAAW,EAAAoE,GAMA/E,KAAAiP,UAMAjP,KAAA40B,WAAA/xB,GAMA7C,KAAA60B,eAAAhyB,GAMA7C,KAAAsF,aAAAzC,GAMA7C,KAAAs0B,UAAAzxB,GAOA7C,KAAA80B,YAAA,KAOA90B,KAAA00B,aAAA,KAOA10B,KAAA+0B,aAAA,KAOA/0B,KAAAg1B,MAAA,KA0HA,QAAAvmB,GAAAhK,GAKA,MAJAA,GAAAqwB,YAAArwB,EAAAiwB,aAAAjwB,EAAAswB,aAAA,WACAtwB,GAAAyb,aACAzb,GAAAqJ,aACArJ,GAAA4b,OACA5b,EAvNA7E,EAAAD,QAAAgC,CAGA,IAAA8D,GAAAvF,EAAA,KACAyB,EAAAJ,UAAAT,OAAAuE,OAAAI,EAAAlE,YAAAgE,YAAA5D,GAAA6D,UAAA,MAEA,IAAA5D,GAAA1B,EAAA,GACAyf,EAAAzf,EAAA,IACAsM,EAAAtM,EAAA,GACA+0B,EAAA/0B,EAAA,IACAyO,EAAAzO,EAAA,IACA+f,EAAA/f,EAAA,IACAse,EAAAte,EAAA,IACAgc,EAAAhc,EAAA,IACA2B,EAAA3B,EAAA,GACAq0B,EAAAr0B,EAAA,IACAg1B,EAAAh1B,EAAA,IACAi1B,EAAAj1B,EAAA,IACAk1B,EAAAl1B,EAAA,IACAm1B,EAAAn1B,EAAA,GAwEAY,QAAA4K,iBAAA/J,EAAAJ,WAQA+zB,YACAp0B,IAAA,WAGA,GAAAlB,KAAA80B,YACA,MAAA90B,MAAA80B,WAEA90B,MAAA80B,cACA,QAAA9lB,GAAAlO,OAAAuB,KAAArC,KAAAiP,QAAA5O,EAAA,EAA6DA,EAAA2O,EAAAxM,SAAkBnC,EAAA,CAC/E,GAAA0f,GAAA/f,KAAAiP,OAAAD,EAAA3O,IACA4D,EAAA8b,EAAA9b,EAGA,IAAAjE,KAAA80B,YAAA7wB,GACA,KAAAiC,OAAA,gBAAAjC,EAAA,OAAAjE,KAEAA,MAAA80B,YAAA7wB,GAAA8b,EAEA,MAAA/f,MAAA80B,cAUAjV,aACA3e,IAAA,WACA,MAAAlB,MAAA00B,eAAA10B,KAAA00B,aAAA7yB,EAAAO,QAAApC,KAAAiP,WAUAsmB,aACAr0B,IAAA,WACA,MAAAlB,MAAA+0B,eAAA/0B,KAAA+0B,aAAAlzB,EAAAO,QAAApC,KAAA40B,WAUAzwB,MACAjD,IAAA,WACA,MAAAlB,MAAAg1B,QAAAh1B,KAAAmE,KAAAxC,EAAA6zB,oBAAAx1B,UAEA6d,IAAA,SAAA1Z,GAGA,GAAA5C,GAAA4C,EAAA5C,SACAA,aAAA0e,MACA9b,EAAA5C,UAAA,GAAA0e,IAAA1a,YAAApB,EACAtC,EAAA0E,MAAApC,EAAA5C,cAIA4C,EAAAE,MAAAF,EAAA5C,UAAA8C,MAAArE,KAGA6B,EAAA0E,MAAApC,EAAA8b,GAAA,GAEAjgB,KAAAg1B,MAAA7wB,CAIA,KADA,GAAA9D,GAAA,EACkBA,EAAAL,KAAA6f,YAAArd,SAA+CnC,EACjEL,KAAA00B,aAAAr0B,GAAA8L,SAGA,IAAAspB,KACA,KAAAp1B,EAAA,EAAuBA,EAAAL,KAAAu1B,YAAA/yB,SAA+CnC,EACtEo1B,EAAAz1B,KAAA+0B,aAAA10B,GAAA8L,UAAAxL,OACAO,IAAAW,EAAA0I,YAAAvK,KAAA+0B,aAAA10B,GAAAuf,OACA/B,IAAAhc,EAAA6I,YAAA1K,KAAA+0B,aAAA10B,GAAAuf,OAEAvf,IACAS,OAAA4K,iBAAAvH,EAAA5C,UAAAk0B,OAUA9zB,EAAA6zB,oBAAA,SAAAhB,GAIA,OAAAzU,GAFAoU,EAAAtyB,EAAAE,SAAA,KAAAyyB,EAAA7zB,MAEAN,EAAA,EAA0BA,EAAAm0B,EAAA3U,YAAArd,SAA8BnC,GACxD0f,EAAAyU,EAAAE,aAAAr0B,IAAA0M,IAAAonB,EACA,YAAuBtyB,EAAAqB,SAAA6c,EAAApf,OACvBof,EAAAjT,UAAAqnB,EACA,YAAAtyB,EAAAqB,SAAA6c,EAAApf,MACA,OAAAwzB,GACA,yEACA,yBA6BAxyB,EAAA+D,SAAA,SAAA/E,EAAAgF,GACA,GAAAlB,GAAA,GAAA9C,GAAAhB,EAAAgF,EAAAZ,QACAN,GAAAowB,WAAAlvB,EAAAkvB,WACApwB,EAAAa,SAAAK,EAAAL,QAGA,KAFA,GAAA0J,GAAAlO,OAAAuB,KAAAsD,EAAAsJ,QACA5O,EAAA,EACUA,EAAA2O,EAAAxM,SAAkBnC,EAC5BoE,EAAAD,SACA,KAAAmB,EAAAsJ,OAAAD,EAAA3O,IAAAs0B,QACAM,EAAAvvB,SACA8G,EAAA9G,UAAAsJ,EAAA3O,GAAAsF,EAAAsJ,OAAAD,EAAA3O,KAEA,IAAAsF,EAAAivB,OACA,IAAA5lB,EAAAlO,OAAAuB,KAAAsD,EAAAivB,QAAAv0B,EAAA,EAAqDA,EAAA2O,EAAAxM,SAAkBnC,EACvEoE,EAAAD,IAAAmb,EAAAja,SAAAsJ,EAAA3O,GAAAsF,EAAAivB,OAAA5lB,EAAA3O,KACA,IAAAsF,EAAA4I,OACA,IAAAS,EAAAlO,OAAAuB,KAAAsD,EAAA4I,QAAAlO,EAAA,EAAqDA,EAAA2O,EAAAxM,SAAkBnC,EAAA,CACvE,GAAAkO,GAAA5I,EAAA4I,OAAAS,EAAA3O,GACAoE,GAAAD,SACA3B,KAAA0L,EAAAtK,GACAuI,EAAA9G,aACA7C,KAAA0L,EAAAU,OACAtN,EAAA+D,aACA7C,KAAA0L,EAAAzJ,OACAlD,EAAA8D,aACA7C,KAAA0L,EAAAW,QACAP,EAAAjJ,SACAD,EAAAC,UAAAsJ,EAAA3O,GAAAkO,IAWA,MARA5I,GAAAkvB,YAAAlvB,EAAAkvB,WAAAryB,SACAiC,EAAAowB,WAAAlvB,EAAAkvB,YACAlvB,EAAAL,UAAAK,EAAAL,SAAA9C,SACAiC,EAAAa,SAAAK,EAAAL,UACAK,EAAA2uB,QACA7vB,EAAA6vB,OAAA,GACA3uB,EAAAX,UACAP,EAAAO,QAAAW,EAAAX,SACAP,GAQA9C,EAAAJ,UAAAqE,OAAA,SAAAC,GACA,GAAA6vB,GAAAjwB,EAAAlE,UAAAqE,OAAArF,KAAAP,KAAA6F,GACAC,IAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,UAAAgzB,KAAA3wB,aAAAlC,GACA,SAAA4C,EAAA6I,YAAAtO,KAAAu1B,YAAA1vB,GACA,SAAAJ,EAAA6I,YAAAtO,KAAA6f,YAAA8V,OAAA,SAAAntB,GAAoF,OAAAA,EAAA+E,iBAA8B1H,OAClH,aAAA7F,KAAA60B,YAAA70B,KAAA60B,WAAAryB,OAAAxC,KAAA60B,eAAAhyB,GACA,WAAA7C,KAAAsF,UAAAtF,KAAAsF,SAAA9C,OAAAxC,KAAAsF,aAAAzC,GACA,QAAA7C,KAAAs0B,WAAAzxB,GACA,SAAA6yB,KAAAnnB,YAAA1L,GACA,UAAAiD,EAAA9F,KAAAgF,YAAAnC,MAOAlB,EAAAJ,UAAAiO,WAAA,WAEA,IADA,GAAAP,GAAAjP,KAAA6f,YAAAxf,EAAA,EACAA,EAAA4O,EAAAzM,QACAyM,EAAA5O,KAAA8L,SACA,IAAAyoB,GAAA50B,KAAAu1B,WACA,KADkCl1B,EAAA,EAClCA,EAAAu0B,EAAApyB,QACAoyB,EAAAv0B,KAAA8L,SACA,OAAA1G,GAAAlE,UAAAiO,WAAAjP,KAAAP,OAMA2B,EAAAJ,UAAAL,IAAA,SAAAP,GACA,MAAAX,MAAAiP,OAAAtO,IACAX,KAAA40B,QAAA50B,KAAA40B,OAAAj0B,IACAX,KAAAuO,QAAAvO,KAAAuO,OAAA5N,IACA,MAUAgB,EAAAJ,UAAAiD,IAAA,SAAAnD,GAEA,GAAArB,KAAAkB,IAAAG,EAAAV,MACA,KAAAuF,OAAA,mBAAA7E,EAAAV,KAAA,QAAAX,KAEA,IAAAqB,YAAAmL,QAAA3J,KAAAxB,EAAAqL,OAAA,CAMA,GAAA1M,KAAA80B,YAAA90B,KAAA80B,YAAAzzB,EAAA4C,IAAAjE,KAAAs1B,WAAAj0B,EAAA4C,IACA,KAAAiC,OAAA,gBAAA7E,EAAA4C,GAAA,OAAAjE,KACA,IAAAA,KAAAmG,aAAA9E,EAAA4C,IACA,KAAAiC,OAAA,MAAA7E,EAAA4C,GAAA,mBAAAjE,KACA,IAAAA,KAAAoG,eAAA/E,EAAAV,MACA,KAAAuF,OAAA,SAAA7E,EAAAV,KAAA,oBAAAX,KAOA,OALAqB,GAAAiK,QACAjK,EAAAiK,OAAA/G,OAAAlD,GACArB,KAAAiP,OAAA5N,EAAAV,MAAAU,EACAA,EAAAwF,QAAA7G,KACAqB,EAAA0K,MAAA/L,MACAyO,EAAAzO,MAEA,MAAAqB,aAAAse,IACA3f,KAAA40B,SACA50B,KAAA40B,WACA50B,KAAA40B,OAAAvzB,EAAAV,MAAAU,EACAA,EAAA0K,MAAA/L,MACAyO,EAAAzO,OAEAyF,EAAAlE,UAAAiD,IAAAjE,KAAAP,KAAAqB,IAUAM,EAAAJ,UAAAgD,OAAA,SAAAlD,GACA,GAAAA,YAAAmL,QAAA3J,KAAAxB,EAAAqL,OAAA,CAIA,IAAA1M,KAAAiP,QAAAjP,KAAAiP,OAAA5N,EAAAV,QAAAU,EACA,KAAA6E,OAAA7E,EAAA,uBAAArB,KAKA,cAHAA,MAAAiP,OAAA5N,EAAAV,MACAU,EAAAiK,OAAA,KACAjK,EAAA4K,SAAAjM,MACAyO,EAAAzO,MAEA,GAAAqB,YAAAse,GAAA,CAGA,IAAA3f,KAAA40B,QAAA50B,KAAA40B,OAAAvzB,EAAAV,QAAAU,EACA,KAAA6E,OAAA7E,EAAA,uBAAArB,KAKA,cAHAA,MAAA40B,OAAAvzB,EAAAV,MACAU,EAAAiK,OAAA,KACAjK,EAAA4K,SAAAjM,MACAyO,EAAAzO,MAEA,MAAAyF,GAAAlE,UAAAgD,OAAAhE,KAAAP,KAAAqB,IAQAM,EAAAJ,UAAA4E,aAAA,SAAAlC,GACA,MAAAwB,GAAAU,aAAAnG,KAAAsF,SAAArB,IAQAtC,EAAAJ,UAAA6E,eAAA,SAAAzF,GACA,MAAA8E,GAAAW,eAAApG,KAAAsF,SAAA3E,IAQAgB,EAAAJ,UAAA8D,OAAA,SAAAyB,GACA,UAAA9G,MAAAmE,KAAA2C,IAOAnF,EAAAJ,UAAAq0B,MAAA,WAMA,OAFAhqB,GAAA5L,KAAA4L,SACAwB,KACA/M,EAAA,EAAmBA,EAAAL,KAAA6f,YAAArd,SAA+CnC,EAClE+M,EAAA2F,KAAA/S,KAAA00B,aAAAr0B,GAAA8L,UAAAkB,aAGArN,MAAAkgB,OAAAqU,EAAAv0B,OACAkc,SACA9O,QACAvL,SAEA7B,KAAA8N,OAAAonB,EAAAl1B,OACAwe,SACApR,QACAvL,SAEA7B,KAAAqgB,OAAA8U,EAAAn1B,OACAoN,QACAvL,SAEA7B,KAAAsgB,WAAA8U,EAAA9U,WAAAtgB,OACAoN,QACAvL,SAEA7B,KAAA0C,SAAA0yB,EAAA1yB,SAAA1C,OACAoN,QACAvL,QAIA,IAAAg0B,GAAAR,EAAAzpB,EACA,IAAAiqB,EAAA,CACA,GAAAC,GAAAh1B,OAAAuE,OAAArF,KAEA81B,GAAAxV,WAAAtgB,KAAAsgB,WACAtgB,KAAAsgB,WAAAuV,EAAAvV,WAAAyV,KAAAD,GAGAA,EAAApzB,SAAA1C,KAAA0C,SACA1C,KAAA0C,SAAAmzB,EAAAnzB,SAAAqzB,KAAAD,GAIA,MAAA91B,OASA2B,EAAAJ,UAAA2e,OAAA,SAAArZ,EAAAiV,GACA,MAAA9b,MAAA41B,QAAA1V,OAAArZ,EAAAiV,IASAna,EAAAJ,UAAA4e,gBAAA,SAAAtZ,EAAAiV,GACA,MAAA9b,MAAAkgB,OAAArZ,EAAAiV,KAAAvJ,IAAAuJ,EAAAiC,OAAAjC,GAAAmC,UAWAtc,EAAAJ,UAAAuM,OAAA,SAAAuQ,EAAA7b,GACA,MAAAxC,MAAA41B,QAAA9nB,OAAAuQ,EAAA7b,IAUAb,EAAAJ,UAAA6e,gBAAA,SAAA/B,GAGA,MAFAA,aAAAG,KACAH,EAAAG,EAAAnZ,OAAAgZ,IACAre,KAAA8N,OAAAuQ,IAAAxB,WAQAlb,EAAAJ,UAAA8e,OAAA,SAAAxZ,GACA,MAAA7G,MAAA41B,QAAAvV,OAAAxZ,IAQAlF,EAAAJ,UAAA+e,WAAA,SAAAjf,GACA,MAAArB,MAAA41B,QAAAtV,WAAAjf,IA4BAM,EAAAJ,UAAAmB,SAAA,SAAAmE,EAAA9B,GACA,MAAA/E,MAAA41B,QAAAlzB,SAAAmE,EAAA9B,IAkBApD,EAAAjB,EAAA,SAAA0D,GACA,gBAAAkd,GACAzf,EAAAqC,aAAAod,EAAAld,M1Bq3NM,SAAUxE,EAAQD,EAASO,GAEjC,Y2B36OA,SAAA+0B,GAAAt0B,EAAAsD,EAAA0wB,EAAAlwB,EAAAM,EAAAC,GAIA,GAHAwH,EAAAjM,KAAAP,KAAAW,EAAAsD,EAAAQ,MAAA5B,UAAAkC,EAAAC,IAGAnD,EAAAmE,SAAA2uB,GACA,KAAAxvB,WAAA,2BAMAnF,MAAA20B,UAMA30B,KAAAg2B,gBAAA,KAGAh2B,KAAA+M,KAAA,EAzCAnN,EAAAD,QAAAs1B,CAGA,IAAAzoB,GAAAtM,EAAA,KACA+0B,EAAA1zB,UAAAT,OAAAuE,OAAAmH,EAAAjL,YAAAgE,YAAA0vB,GAAAzvB,UAAA,UAEA,IAAA4H,GAAAlN,EAAA,GACA2B,EAAA3B,EAAA,EA0DA+0B,GAAAvvB,SAAA,SAAA/E,EAAAgF,GACA,UAAAsvB,GAAAt0B,EAAAgF,EAAA1B,GAAA0B,EAAAgvB,QAAAhvB,EAAAlB,KAAAkB,EAAAZ,QAAAY,EAAAX,UAQAiwB,EAAA1zB,UAAAqE,OAAA,SAAAC,GACA,GAAAC,KAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,UAAA1C,KAAA20B,QACA,OAAA30B,KAAAyE,KACA,KAAAzE,KAAAiE,GACA,SAAAjE,KAAA0M,OACA,UAAA1M,KAAA+E,QACA,UAAAe,EAAA9F,KAAAgF,YAAAnC,MAOAoyB,EAAA1zB,UAAA4K,QAAA,WACA,GAAAnM,KAAAuL,SACA,MAAAvL,KAGA,QAAA6C,KAAAuK,EAAAkD,OAAAtQ,KAAA20B,SACA,KAAAzuB,OAAA,qBAAAlG,KAAA20B,QAEA,OAAAnoB,GAAAjL,UAAA4K,QAAA5L,KAAAP,OAaAi1B,EAAAv0B,EAAA,SAAAsN,EAAAioB,EAAAC,GAUA,MAPA,kBAAAA,GACAA,EAAAr0B,EAAAqC,aAAAgyB,GAAAv1B,KAGAu1B,GAAA,gBAAAA,KACAA,EAAAr0B,EAAA+C,aAAAsxB,GAAAv1B,MAEA,SAAAY,EAAA4M,GACAtM,EAAAqC,aAAA3C,EAAAgE,aACAf,IAAA,GAAAywB,GAAA9mB,EAAAH,EAAAioB,EAAAC,O3By8OM,SAAUt2B,EAAQD,EAASO,GAEjC,Y4BljPA,SAAAyO,GAAAhO,EAAAoE,GACAU,EAAAlF,KAAAP,KAAAW,EAAAoE,GAMA/E,KAAAkP,WAOAlP,KAAAm2B,cAAA,KAyDA,QAAA1nB,GAAA2nB,GAEA,MADAA,GAAAD,cAAA,KACAC,EA5FAx2B,EAAAD,QAAAgP,CAGA,IAAAlJ,GAAAvF,EAAA,KACAyO,EAAApN,UAAAT,OAAAuE,OAAAI,EAAAlE,YAAAgE,YAAAoJ,GAAAnJ,UAAA,SAEA,IAAA6wB,GAAAn2B,EAAA,IACA2B,EAAA3B,EAAA,GACAo2B,EAAAp2B,EAAA,GA0CAyO,GAAAjJ,SAAA,SAAA/E,EAAAgF,GACA,GAAAywB,GAAA,GAAAznB,GAAAhO,EAAAgF,EAAAZ,QAEA,IAAAY,EAAAuJ,QACA,OAAAF,GAAAlO,OAAAuB,KAAAsD,EAAAuJ,SAAA7O,EAAA,EAA0DA,EAAA2O,EAAAxM,SAAkBnC,EAC5E+1B,EAAA5xB,IAAA6xB,EAAA3wB,SAAAsJ,EAAA3O,GAAAsF,EAAAuJ,QAAAF,EAAA3O,KAIA,OAHAsF,GAAA4I,QACA6nB,EAAAxnB,QAAAjJ,EAAA4I,QACA6nB,EAAApxB,QAAAW,EAAAX,QACAoxB,GAQAznB,EAAApN,UAAAqE,OAAA,SAAAC,GACA,GAAA6vB,GAAAjwB,EAAAlE,UAAAqE,OAAArF,KAAAP,KAAA6F,GACAC,IAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,UAAAgzB,KAAA3wB,aAAAlC,GACA,UAAA4C,EAAA6I,YAAAtO,KAAAu2B,aAAA1wB,OACA,SAAA6vB,KAAAnnB,YAAA1L,GACA,UAAAiD,EAAA9F,KAAAgF,YAAAnC,MAUA/B,OAAAC,eAAA4N,EAAApN,UAAA,gBACAL,IAAA,WACA,MAAAlB,MAAAm2B,gBAAAn2B,KAAAm2B,cAAAt0B,EAAAO,QAAApC,KAAAkP,aAYAP,EAAApN,UAAAL,IAAA,SAAAP,GACA,MAAAX,MAAAkP,QAAAvO,IACA8E,EAAAlE,UAAAL,IAAAX,KAAAP,KAAAW,IAMAgO,EAAApN,UAAAiO,WAAA,WAEA,OADAN,GAAAlP,KAAAu2B,aACAl2B,EAAA,EAAmBA,EAAA6O,EAAA1M,SAAoBnC,EACvC6O,EAAA7O,GAAA8L,SACA,OAAA1G,GAAAlE,UAAA4K,QAAA5L,KAAAP,OAMA2O,EAAApN,UAAAiD,IAAA,SAAAnD,GAGA,GAAArB,KAAAkB,IAAAG,EAAAV,MACA,KAAAuF,OAAA,mBAAA7E,EAAAV,KAAA,QAAAX,KAEA,OAAAqB,aAAAg1B,IACAr2B,KAAAkP,QAAA7N,EAAAV,MAAAU,EACAA,EAAAiK,OAAAtL,KACAyO,EAAAzO,OAEAyF,EAAAlE,UAAAiD,IAAAjE,KAAAP,KAAAqB,IAMAsN,EAAApN,UAAAgD,OAAA,SAAAlD,GACA,GAAAA,YAAAg1B,GAAA,CAGA,GAAAr2B,KAAAkP,QAAA7N,EAAAV,QAAAU,EACA,KAAA6E,OAAA7E,EAAA,uBAAArB,KAIA,cAFAA,MAAAkP,QAAA7N,EAAAV,MACAU,EAAAiK,OAAA,KACAmD,EAAAzO,MAEA,MAAAyF,GAAAlE,UAAAgD,OAAAhE,KAAAP,KAAAqB,IAUAsN,EAAApN,UAAA8D,OAAA,SAAAmxB,EAAAC,EAAAC,GAEA,OAAAlN,GADAmN,EAAA,GAAAL,GAAA3nB,QAAA6nB,EAAAC,EAAAC,GACAr2B,EAAA,EAA2BA,EAAAL,KAAAu2B,aAAA/zB,SAAgDnC,EAAA,CAC3E,GAAAu2B,GAAA/0B,EAAAuI,SAAAof,EAAAxpB,KAAAm2B,cAAA91B,IAAA8L,UAAAxL,MAAAyC,QAAA,cACAuzB,GAAAC,GAAA/0B,EAAAE,SAAA,SAAAF,EAAAmB,WAAA4zB,KAAA,IAAAA,GAAA,mCACAp2B,EAAAgpB,EACAqN,EAAArN,EAAAsN,oBAAA3yB,KACAzC,EAAA8nB,EAAAuN,qBAAA5yB,OAGA,MAAAwyB,K5B6kPM,SAAU/2B,EAAQD,EAASO,GAEjC,Y6B7tPA,SAAAm2B,GAAA11B,EAAA8D,EAAAuyB,EAAAC,EAAAC,EAAAC,EAAApyB,EAAAC,GAYA,GATAnD,EAAAwG,SAAA6uB,IACAnyB,EAAAmyB,EACAA,EAAAC,MAAAt0B,IACKhB,EAAAwG,SAAA8uB,KACLpyB,EAAAoyB,EACAA,MAAAt0B,QAIAA,KAAA4B,IAAA5C,EAAAmE,SAAAvB,GACA,KAAAU,WAAA,wBAGA,KAAAtD,EAAAmE,SAAAgxB,GACA,KAAA7xB,WAAA,+BAGA,KAAAtD,EAAAmE,SAAAixB,GACA,KAAA9xB,WAAA,gCAEAD,GAAA3E,KAAAP,KAAAW,EAAAoE,GAMA/E,KAAAyE,QAAA,MAMAzE,KAAAg3B,cAMAh3B,KAAAk3B,uBAAAr0B,GAMA7C,KAAAi3B,eAMAj3B,KAAAm3B,wBAAAt0B,GAMA7C,KAAA82B,oBAAA,KAMA92B,KAAA+2B,qBAAA,KAMA/2B,KAAAgF,UA7FApF,EAAAD,QAAA02B,CAGA,IAAAnxB,GAAAhF,EAAA,KACAm2B,EAAA90B,UAAAT,OAAAuE,OAAAH,EAAA3D,YAAAgE,YAAA8wB,GAAA7wB,UAAA,QAEA,IAAA3D,GAAA3B,EAAA,EA4GAm2B,GAAA3wB,SAAA,SAAA/E,EAAAgF,GACA,UAAA0wB,GAAA11B,EAAAgF,EAAAlB,KAAAkB,EAAAqxB,YAAArxB,EAAAsxB,aAAAtxB,EAAAuxB,cAAAvxB,EAAAwxB,eAAAxxB,EAAAZ,QAAAY,EAAAX,UAQAqxB,EAAA90B,UAAAqE,OAAA,SAAAC,GACA,GAAAC,KAAAD,GAAAE,QAAAF,EAAAC,aACA,OAAAjE,GAAAa,UACA,eAAA1C,KAAAyE,MAAAzE,KAAAyE,UAAA5B,GACA,cAAA7C,KAAAg3B,YACA,gBAAAh3B,KAAAk3B,cACA,eAAAl3B,KAAAi3B,aACA,iBAAAj3B,KAAAm3B,eACA,UAAAn3B,KAAA+E,QACA,UAAAe,EAAA9F,KAAAgF,YAAAnC,MAOAwzB,EAAA90B,UAAA4K,QAAA,WAGA,MAAAnM,MAAAuL,SACAvL,MAEAA,KAAA82B,oBAAA92B,KAAAsL,OAAAyE,WAAA/P,KAAAg3B,aACAh3B,KAAA+2B,qBAAA/2B,KAAAsL,OAAAyE,WAAA/P,KAAAi3B,cAEA/xB,EAAA3D,UAAA4K,QAAA5L,KAAAP,S7B2vPM,SAAUJ,EAAQD,EAASO,GAEjC,Y8B34PA,SAAAk3B,GAAArX,GACA,2BAAAA,EAAApf,KAAA,IAQA,QAAAu0B,GAAAV,GAEA,GAAAL,GAAAtyB,EAAAE,SAAA,SAAAyyB,EAAA7zB,KAAA,WACA,8BACA,sBACA,qDAAA6zB,EAAA3U,YAAA8V,OAAA,SAAA5V,GAAsG,MAAAA,GAAAhT,MAAoBvK,OAAA,UAC1H,mBACA,mBACAgyB,GAAAF,OAAAH,EACA,iBACA,SACAA,EACA,iBAGA,KADA,GAAA9zB,GAAA,EACUA,EAAAm0B,EAAA3U,YAAArd,SAAgDnC,EAAA,CAC1D,GAAA0f,GAAAyU,EAAAE,aAAAr0B,GAAA8L,UACA1H,EAAAsb,EAAA1S,uBAAAzL,GAAA,QAAAme,EAAAtb,KACA4vB,EAAA,IAAAxyB,EAAAqB,SAAA6c,EAAApf,KAAoDwzB,GACpD,WAAApU,EAAA9b,IAGA8b,EAAAhT,KAAwBonB,EACxB,kBACA,4BAAAE,GACA,QAA2BA,GAC3B,WAAAtU,EAAA4U,SACA,eACA9xB,KAAAuK,EAAAD,KAAA4S,EAAA4U,aACA9xB,KAAAuK,EAAAiD,MAAA5L,GAAA0vB,EACA,8EAAAE,EAAAh0B,GACA8zB,EACA,sDAAAE,EAAA5vB,OAEA5B,KAAAuK,EAAAiD,MAAA5L,GAAA0vB,EACA,uCAAAE,EAAAh0B,GACA8zB,EACA,eAAAE,EAAA5vB,IAISsb,EAAAjT,UAA2BqnB,EAEpC,uBAAAE,KACA,QAAAA,OAGAxxB,KAAAuK,EAAAO,OAAAlJ,IAAA0vB,EACA,kBACA,2BACA,mBACA,kBAAAE,EAAA5vB,GACA,aAGA5B,KAAAuK,EAAAiD,MAAA5L,GAAA0vB,EAAApU,EAAA1S,aAAAinB,MACA,+BACA,0CAAAD,EAAAh0B,GACA8zB,EACA,kBAAAE,EAAA5vB,QAGS5B,KAAAuK,EAAAiD,MAAA5L,GAAA0vB,EAAApU,EAAA1S,aAAAinB,MACT,yBACA,oCAAAD,EAAAh0B,GACA8zB,EACA,YAAAE,EAAA5vB,GACA0vB,EACA,SAWA,IATKA,EACL,YACA,mBACA,SAEA,KACA,KAGA9zB,EAAA,EAAeA,EAAAm0B,EAAAE,aAAAlyB,SAA+BnC,EAAA,CAC9C,GAAAg3B,GAAA7C,EAAAE,aAAAr0B,EACAg3B,GAAAzqB,UAAAunB,EACA,4BAAAkD,EAAA12B,MACA,4CAAkDy2B,EAAAC,IAGlD,MAAAlD,GACA,YAtGAv0B,EAAAD,QAAAu1B,CAEA,IAAAtzB,GAAA1B,EAAA,GACAkN,EAAAlN,EAAA,GACA2B,EAAA3B,EAAA,I9B4/PM,SAAUN,EAAQD,EAASO,GAEjC,Y+B7/PA,SAAAo3B,GAAAvX,EAAAwX,GACA,MAAAxX,GAAApf,KAAA,KAAA42B,GAAAxX,EAAAjT,UAAA,UAAAyqB,EAAA,KAAAxX,EAAAhT,KAAA,WAAAwqB,EAAA,MAAkIxX,EAAA4U,QAAA,IAAoB,gBAYtJ,QAAA6C,GAAArD,EAAApU,EAAAqU,EAAAC,GAEA,GAAAtU,EAAA1S,aACA,GAAA0S,EAAA1S,uBAAAzL,GAAA,CAAiDuyB,EACjD,cAAyBE,GACzB,YACA,WAAAiD,EAAAvX,EAAA,cACA,QAAA1d,GAAAvB,OAAAuB,KAAA0d,EAAA1S,aAAAvI,QAAA2yB,EAAA,EAA0EA,EAAAp1B,EAAAG,SAAiBi1B,EAAAtD,EAC3F,WAAApU,EAAA1S,aAAAvI,OAAAzC,EAAAo1B,IACAtD,GACA,SACA,SAEAA,GACA,KACA,8BAA6CC,EAAAC,GAC7C,SACA,aAAAtU,EAAApf,KAAA,KACA,SAGA,QAAAof,EAAAtb,MACA,YACA,aACA,aACA,cACA,eAAA0vB,EACA,0BAAAE,GACA,WAAAiD,EAAAvX,EAAA,WACA,MACA,aACA,aACA,aACA,cACA,eAAAoU,EACA,kFAAAE,SACA,WAAAiD,EAAAvX,EAAA,gBACA,MACA,aACA,aAAAoU,EACA,2BAAAE,GACA,WAAAiD,EAAAvX,EAAA,UACA,MACA,YAAAoU,EACA,4BAAAE,GACA,WAAAiD,EAAAvX,EAAA,WACA,MACA,cAAAoU,EACA,yBAAAE,GACA,WAAAiD,EAAAvX,EAAA,UACA,MACA,aAAAoU,EACA,4DAAAE,OACA,WAAAiD,EAAAvX,EAAA,WAIA,MAAAoU,GAYA,QAAAuD,GAAAvD,EAAApU,EAAAsU,GAEA,OAAAtU,EAAA4U,SACA,YACA,aACA,aACA,cACA,eAAAR,EACA,6BAAAE,GACA,WAAAiD,EAAAvX,EAAA,eACA,MACA,aACA,aACA,aACA,cACA,eAAAoU,EACA,6BAAAE,GACA,WAAAiD,EAAAvX,EAAA,oBACA,MACA,YAAAoU,EACA,4BAAAE,GACA,WAAAiD,EAAAvX,EAAA,gBAGA,MAAAoU,GASA,QAAAgB,GAAAX,GAGA,GAAAL,GAAAtyB,EAAAE,SAAA,KAAAyyB,EAAA7zB,KAAA,WACA,qCACA,8BACAi0B,EAAAJ,EAAAe,YACAoC,IACA/C,GAAApyB,QAAA2xB,EACA,WAEA,QAAA9zB,GAAA,EAAmBA,EAAAm0B,EAAA3U,YAAArd,SAAgDnC,EAAA,CACnE,GAAA0f,GAAAyU,EAAAE,aAAAr0B,GAAA8L,UACAkoB,EAAA,IAAAxyB,EAAAqB,SAAA6c,EAAApf,KAMA,IAJAof,EAAAlT,UAAAsnB,EACA,sCAA6CE,EAAAtU,EAAApf,MAG7Cof,EAAAhT,IAAwBonB,EACxB,yBAAAE,GACA,WAAAiD,EAAAvX,EAAA,WACA,wBAAAsU,GACA,gCACAqD,EAAAvD,EAAApU,EAAA,QACAyX,EAAArD,EAAApU,EAAA1f,EAAAg0B,EAAA,UACA,SAGS,IAAAtU,EAAAjT,SAA2BqnB,EACpC,yBAAAE,GACA,WAAAiD,EAAAvX,EAAA,UACA,gCAA2CsU,GAC3CmD,EAAArD,EAAApU,EAAA1f,EAAAg0B,EAAA,OACA,SAGS,CACT,GAAAtU,EAAA/S,OAAA,CACA,GAAA4qB,GAAA/1B,EAAAqB,SAAA6c,EAAA/S,OAAArM,KACA,KAAAg3B,EAAA5X,EAAA/S,OAAArM,OAAAwzB,EACA,cAAAyD,GACA,WAAA7X,EAAA/S,OAAArM,KAAA,qBACAg3B,EAAA5X,EAAA/S,OAAArM,MAAA,EACAwzB,EACA,QAAAyD,GAEAJ,EAAArD,EAAApU,EAAA1f,EAAAg0B,GAEAtU,EAAAlT,UAAAsnB,EACA,KAEA,MAAAA,GACA,eA7KAv0B,EAAAD,QAAAw1B,CAEA,IAAAvzB,GAAA1B,EAAA,GACA2B,EAAA3B,EAAA,I/BorQM,SAAUN,EAAQD,EAASO,GAEjC,YgCvqQA,SAAA23B,GAAA1D,EAAApU,EAAAqU,EAAAjxB,GAEA,GAAA4c,EAAA1S,aACA,GAAA0S,EAAA1S,uBAAAzL,GAAA,CAAiDuyB,EACjD,eAA0BhxB,EAC1B,QAAA2B,GAAAib,EAAA1S,aAAAvI,OAAAzC,EAAAvB,OAAAuB,KAAAyC,GAAAzE,EAAA,EAA2FA,EAAAgC,EAAAG,SAAiBnC,EAC5G0f,EAAAjT,UAAAhI,EAAAzC,EAAAhC,MAAA0f,EAAA9S,aAAAknB,EACA,YACAA,EACA,UAAA9xB,EAAAhC,IACA,WAAAyE,EAAAzC,EAAAhC,KACA,SAAA8C,EAAA2B,EAAAzC,EAAAhC,KACA,QACa8zB,GACb,SACSA,GACT,4BAAAhxB,GACA,sBAAA4c,EAAAnU,SAAA,qBACA,gCAAAzI,EAAAixB,EAAAjxB,OACK,CACL,GAAA20B,IAAA,CACA,QAAA/X,EAAAtb,MACA,aACA,YAAA0vB,EACA,kBAAAhxB,IACA,MACA,cACA,cAAAgxB,EACA,cAAAhxB,IACA,MACA,aACA,aACA,eAAAgxB,EACA,YAAAhxB,IACA,MACA,cACA20B,GAAA,CAEA,aACA,aACA,cACA,eAAA3D,EACA,iBACA,6CAAAhxB,IAAA20B,GACA,iCAAA30B,GACA,uBAAAA,KACA,iCAAAA,GACA,UAAAA,KACA,iCAAAA,GACA,+DAAAA,MAAA20B,EAAA,UACA,MACA,aAAA3D,EACA,4BAAAhxB,GACA,wEAAAA,OACA,sBAAAA,GACA,UAAAA,IACA,MACA,cAAAgxB,EACA,kBAAAhxB,IACA,MACA,YAAAgxB,EACA,mBAAAhxB,MAOA,MAAAgxB,GAmEA,QAAA4D,GAAA5D,EAAApU,EAAAqU,EAAAjxB,GAEA,GAAA4c,EAAA1S,aACA0S,EAAA1S,uBAAAzL,GAAAuyB,EACA,iDAAAhxB,EAAAixB,EAAAjxB,KACAgxB,EACA,gCAAAhxB,EAAAixB,EAAAjxB,OACK,CACL,GAAA20B,IAAA,CACA,QAAA/X,EAAAtb,MACA,aACA,YAAA0vB,EACA,6CAAAhxB,QACA,MACA,cACA20B,GAAA,CAEA,aACA,aACA,cACA,eAAA3D,EACA,4BAAAhxB,GACA,uCAAAA,OACA,QACA,4IAAAA,QAAA20B,EAAA,UAAA30B,EACA,MACA,aAAAgxB,EACA,gHAAAhxB,UACA,MACA,SAAAgxB,EACA,UAAAhxB,MAIA,MAAAgxB,GAvLA,GAAAiB,GAAAz1B,EAEAiC,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,EAwFAk1B,GAAA9U,WAAA,SAAAkU,GAEA,GAAAvlB,GAAAulB,EAAA3U,YACAsU,EAAAtyB,EAAAE,SAAA,KAAAyyB,EAAA7zB,KAAA,eACA,8BACA,WACA,KAAAsO,EAAAzM,OAAA,MAAA2xB,GACA,uBACAA,GACA,sBACA,QAAA9zB,GAAA,EAAmBA,EAAA4O,EAAAzM,SAAmBnC,EAAA,CACtC,GAAA0f,GAAA9Q,EAAA5O,GAAA8L,UACAhJ,EAAAtB,EAAAqB,SAAA6c,EAAApf,KAGAof,GAAAhT,KAAwBonB,EACxB,WAAchxB,GACd,4BAAAA,GACA,sBAAA4c,EAAAnU,SAAA,qBACA,SAAgBzI,GAChB,oDAA2DA,GAC3D00B,EAAA1D,EAAApU,EAAA1f,EAAA8C,EAAA,WACA,KACA,MAGS4c,EAAAjT,UAA2BqnB,EACpC,WAAchxB,GACd,0BAAAA,GACA,sBAAA4c,EAAAnU,SAAA,oBACA,SAAAzI,GACA,iCAAwCA,GACxC00B,EAAA1D,EAAApU,EAAA1f,EAAA8C,EAAA,OACA,KACA,OAIA4c,EAAA1S,uBAAAzL,IAAAuyB,EACA,iBAAoBhxB,GACpB00B,EAAA1D,EAAApU,EAAA1f,EAAA8C,GACA4c,EAAA1S,uBAAAzL,IAAAuyB,EACA,MAEK,MAAAA,GACL,aAwDAiB,EAAA1yB,SAAA,SAAA8xB,GAEA,GAAAvlB,GAAAulB,EAAA3U,YAAAjQ,QAAA6kB,KAAA5yB,EAAAiC,kBACA,KAAAmL,EAAAzM,OACA,MAAAX,GAAAE,UAAA,YAUA,KATA,GAAAoyB,GAAAtyB,EAAAE,SAAA,SAAAyyB,EAAA7zB,KAAA,aACA,UACA,QACA,YAEAq3B,KACAC,KACAC,KACA73B,EAAA,EACUA,EAAA4O,EAAAzM,SAAmBnC,EAC7B4O,EAAA5O,GAAA2M,SACAiC,EAAA5O,GAAA8L,UAAAW,SAAAkrB,EACA/oB,EAAA5O,GAAA0M,IAAAkrB,EACAC,GAAAnlB,KAAA9D,EAAA5O,GAEA,IAAA23B,EAAAx1B,OAAA,CAEA,IAFgC2xB,EAChC,6BACA9zB,EAAA,EAAmBA,EAAA23B,EAAAx1B,SAA2BnC,EAAA8zB,EAC9C,SAAAtyB,EAAAqB,SAAA80B,EAAA33B,GAAAM,MACAwzB,GACA,KAGA,GAAA8D,EAAAz1B,OAAA,CAEA,IAF2B2xB,EAC3B,8BACA9zB,EAAA,EAAmBA,EAAA43B,EAAAz1B,SAAsBnC,EAAA8zB,EACzC,SAAgBtyB,EAAAqB,SAAA+0B,EAAA53B,GAAAM,MAChBwzB,GACA,KAGA,GAAA+D,EAAA11B,OAAA,CAEA,IAF8B2xB,EAC9B,mBACA9zB,EAAA,EAAmBA,EAAA63B,EAAA11B,SAAyBnC,EAAA,CAC5C,GAAA0f,GAAAmY,EAAA73B,GACA8C,EAAAtB,EAAAqB,SAAA6c,EAAApf,KACAof,GAAA1S,uBAAAzL,GAAAuyB,EACA,6BAAAhxB,EAAA4c,EAAA1S,aAAAjI,WAAA2a,EAAA9S,aAAA8S,EAAA9S,aACA8S,EAAA5S,KAAAgnB,EACA,kBACA,gCAAApU,EAAA9S,YAAAkrB,IAAApY,EAAA9S,YAAAmrB,KAAArY,EAAA9S,YAAApD,UACA,oEAAA1G,GACA,SACA,6BAAAA,EAAA4c,EAAA9S,YAAAhG,WAAA8Y,EAAA9S,YAAA9C,YACA4V,EAAAlV,MAAAspB,EACA,6BAAAhxB,EAAAiF,OAAAiwB,aAAArnB,MAAA5I,OAAA2X,EAAA9S,aAAA,IAAA1K,MAAAhB,UAAAqO,MAAArP,KAAAwf,EAAA9S,aAAAnB,KAAA,UACAqoB,EACA,SAAAhxB,EAAA4c,EAAA9S,aACSknB,EACT,KAEA,GAAAmE,IAAA,CACA,KAAAj4B,EAAA,EAAeA,EAAA4O,EAAAzM,SAAmBnC,EAAA,CAClC,GAAA0f,GAAA9Q,EAAA5O,GACAoC,EAAA+xB,EAAAE,aAAA5kB,QAAAiQ,GACA5c,EAAAtB,EAAAqB,SAAA6c,EAAApf,KACAof,GAAAhT,KACAurB,IAA0BA,GAAA,EAAenE,EACzC,YACaA,EACb,0CAA6ChxB,KAC7C,SAAgBA,GAChB,kCACA40B,EAAA5D,EAAApU,EAAAtd,EAAAU,EAAA,YACA,MACS4c,EAAAjT,UAA2BqnB,EACpC,uBAA0BhxB,KAC1B,SAAAA,GACA,iCAAwCA,GACxC40B,EAAA5D,EAAApU,EAAAtd,EAAAU,EAAA,OACA,OACgBgxB,EAChB,uCAA0ChxB,EAAA4c,EAAApf,MAC1Co3B,EAAA5D,EAAApU,EAAAtd,EAAAU,GACA4c,EAAA/S,QAAAmnB,EACA,gBACA,SAAAtyB,EAAAqB,SAAA6c,EAAA/S,OAAArM,MAAAof,EAAApf,OAEAwzB,EACA,KAEA,MAAAA,GACA,chCksQM,SAAUv0B,EAAQD,EAASO,GAEjC,YiCz9QA,IAAAm1B,GAAA11B,EAEAsgB,EAAA/f,EAAA,GA6BAm1B,GAAA,yBAEA/U,WAAA,SAAAjf,GAGA,GAAAA,KAAA,UACA,GAAAoD,GAAAzE,KAAAyP,OAAApO,EAAA,SAEA,IAAAoD,EAAA,CAEA,GAAA8zB,GAAA,MAAAl3B,EAAA,SAAAkC,OAAA,GACAlC,EAAA,SAAAm3B,OAAA,GAAAn3B,EAAA,QAEA,OAAArB,MAAAqF,QACAkzB,SAAA,IAAAA,EACA7zB,MAAAD,EAAAyb,OAAAzb,EAAA6b,WAAAjf,IAAA6c,YAKA,MAAAle,MAAAsgB,WAAAjf,IAGAqB,SAAA,SAAAmE,EAAA9B,GAGA,GAAAA,KAAAY,MAAAkB,EAAA0xB,UAAA1xB,EAAAnC,MAAA,CAEA,GAAA/D,GAAAkG,EAAA0xB,SAAA90B,UAAAoD,EAAA0xB,SAAA7nB,YAAA,QACAjM,EAAAzE,KAAAyP,OAAA9O,EAEA8D,KACAoC,EAAApC,EAAAqJ,OAAAjH,EAAAnC,QAIA,KAAAmC,YAAA7G,MAAAmE,OAAA0C,YAAAoZ,GAAA,CACA,GAAA5e,GAAAwF,EAAAxC,MAAA3B,SAAAmE,EAAA9B,EAEA,OADA1D,GAAA,SAAAwF,EAAAxC,MAAAuH,SACAvK,EAGA,MAAArB,MAAA0C,SAAAmE,EAAA9B,MjCw+QM,SAAUnF,EAAQD,EAASO,GAEjC,YkCniRA,SAAAuL,GAAA1G,GACAU,EAAAlF,KAAAP,KAAA,GAAA+E,GAMA/E,KAAAy4B,YAMAz4B,KAAA04B,SA6BA,QAAAC,MAkMA,QAAAC,GAAAn5B,EAAAsgB,GACA,GAAA8Y,GAAA9Y,EAAAzU,OAAAmE,OAAAsQ,EAAArT,OACA,IAAAmsB,EAAA,CACA,GAAAC,GAAA,GAAAtsB,GAAAuT,EAAAnU,SAAAmU,EAAA9b,GAAA8b,EAAAtb,KAAAsb,EAAAtT,SAAA5J,GAAAkd,EAAAhb,QAIA,OAHA+zB,GAAAvrB,eAAAwS,EACAA,EAAAzS,eAAAwrB,EACAD,EAAAr0B,IAAAs0B,IACA,EAEA,SA3QAl5B,EAAAD,QAAA8L,CAGA,IAAAhG,GAAAvF,EAAA,KACAuL,EAAAlK,UAAAT,OAAAuE,OAAAI,EAAAlE,YAAAgE,YAAAkG,GAAAjG,UAAA,MAEA,IAKA7D,GACAolB,EACAgS,EAPAvsB,EAAAtM,EAAA,GACA0B,EAAA1B,EAAA,GACAyf,EAAAzf,EAAA,IACA2B,EAAA3B,EAAA,EAmCAuL,GAAA/F,SAAA,SAAAC,EAAAlG,GAKA,MAJAA,KACAA,EAAA,GAAAgM,IACA9F,EAAAZ,SACAtF,EAAA6M,WAAA3G,EAAAZ,SACAtF,EAAAmP,QAAAjJ,EAAA4I,SAWA9C,EAAAlK,UAAAy3B,YAAAn3B,EAAAI,KAAAkK,QAaAV,EAAAlK,UAAA03B,KAAA,QAAAA,GAAAztB,EAAAzG,EAAA4P,GAYA,QAAAuJ,GAAAxL,EAAAjT,GAEA,GAAAkV,EAAA,CAEA,GAAA8W,GAAA9W,CAEA,IADAA,EAAA,KACAukB,EACA,KAAAxmB,EACA+Y,GAAA/Y,EAAAjT,IAIA,QAAAoI,GAAA2D,EAAA2tB,GACA,IAGA,GAFAt3B,EAAAmE,SAAAmzB,IAAA,MAAAA,EAAA51B,OAAA,KACA41B,EAAArS,KAAAC,MAAAoS,IACAt3B,EAAAmE,SAAAmzB,GAEA,CACApS,EAAAvb,UACA,IACAD,GADAsb,EAAAE,EAAAoS,EAAAp5B,EAAAgF,GAEA1E,EAAA,CACA,IAAAwmB,EAAAuS,QACA,KAA0B/4B,EAAAwmB,EAAAuS,QAAA52B,SAA2BnC,GACrDkL,EAAAxL,EAAAi5B,YAAAxtB,EAAAqb,EAAAuS,QAAA/4B,MACA2B,EAAAuJ,EACA,IAAAsb,EAAAwS,YACA,IAAAh5B,EAAA,EAA+BA,EAAAwmB,EAAAwS,YAAA72B,SAA+BnC,GAC9DkL,EAAAxL,EAAAi5B,YAAAxtB,EAAAqb,EAAAwS,YAAAh5B,MACA2B,EAAAuJ,GAAA,OAbAxL,GAAAuM,WAAA6sB,EAAAp0B,SAAA6J,QAAAuqB,EAAA5qB,QAeS,MAAAmE,GACTwL,EAAAxL,GAEAwmB,GAAAI,GACApb,EAAA,KAAAne,GAIA,QAAAiC,GAAAwJ,EAAA+tB,GAGA,GAAAC,GAAAhuB,EAAAkF,YAAA,mBACA,IAAA8oB,GAAA,GACA,GAAAC,GAAAjuB,EAAA/H,UAAA+1B,EACAC,KAAAV,KACAvtB,EAAAiuB,GAIA,KAAA15B,EAAA24B,MAAA5oB,QAAAtE,IAAA,IAKA,GAHAzL,EAAA24B,MAAA3lB,KAAAvH,GAGAA,IAAAutB,GAUA,YATAG,EACArxB,EAAA2D,EAAAutB,EAAAvtB,OAEA8tB,EACA5kB,WAAA,aACA4kB,EACAzxB,EAAA2D,EAAAutB,EAAAvtB,OAOA,IAAA0tB,EAAA,CACA,GAAAC,EACA,KACAA,EAAAt3B,EAAAK,GAAAw3B,aAAAluB,GAAAvE,SAAA,QACa,MAAAyL,GAGb,YAFA6mB,GACArb,EAAAxL,IAGA7K,EAAA2D,EAAA2tB,SAEAG,EACAz3B,EAAAG,MAAAwJ,EAAA,SAAAkH,EAAAymB,GAGA,KAFAG,EAEA3kB,EAEA,MAAAjC,QAEA6mB,EAEAD,GACApb,EAAA,KAAAne,GAFAme,EAAAxL,QAKA7K,GAAA2D,EAAA2tB,MA1GA,kBAAAp0B,KACA4P,EAAA5P,EACAA,MAAAlC,GAEA,IAAA9C,GAAAC,IACA,KAAA2U,EACA,MAAA9S,GAAAqF,UAAA+xB,EAAAl5B,EAAAyL,EAAAzG,EAEA,IAAAm0B,GAAAvkB,IAAAgkB,EAsGAW,EAAA,CAIAz3B,GAAAmE,SAAAwF,KACAA,MACA,QAAAD,GAAAlL,EAAA,EAA6BA,EAAAmL,EAAAhJ,SAAqBnC,GAClDkL,EAAAxL,EAAAi5B,YAAA,GAAAxtB,EAAAnL,MACA2B,EAAAuJ,EAEA,IAAA2tB,EACA,MAAAn5B,EACAu5B,IACApb,EAAA,KAAAne,IAiCA0L,EAAAlK,UAAAo4B,SAAA,SAAAnuB,EAAAzG,GACA,IAAAlD,EAAA+F,OACA,KAAA1B,OAAA,gBACA,OAAAlG,MAAAi5B,KAAAztB,EAAAzG,EAAA4zB,IAMAltB,EAAAlK,UAAAiO,WAAA,WACA,GAAAxP,KAAAy4B,SAAAj2B,OACA,KAAA0D,OAAA,4BAAAlG,KAAAy4B,SAAA1rB,IAAA,SAAAgT,GACA,iBAAAA,EAAArT,OAAA,QAAAqT,EAAAzU,OAAAM,WACSE,KAAA,MACT,OAAArG,GAAAlE,UAAAiO,WAAAjP,KAAAP,MAIA,IAAA45B,GAAA,QA4BAnuB,GAAAlK,UAAAyK,WAAA,SAAA3K,GACA,GAAAA,YAAAmL,OAEA3J,KAAAxB,EAAAqL,QAAArL,EAAAiM,gBACAsrB,EAAA54B,KAAAqB,IACArB,KAAAy4B,SAAA1lB,KAAA1R,OAEK,IAAAA,YAAAO,GAELg4B,EAAA32B,KAAA5B,EAAAV,QACAU,EAAAiK,OAAAjK,EAAAV,MAAAU,EAAAyD,YAEK,MAAAzD,YAAAse,IAAA,CAEL,GAAAte,YAAAM,GACA,OAAAtB,GAAA,EAA2BA,EAAAL,KAAAy4B,SAAAj2B,QAC3Bo2B,EAAA54B,UAAAy4B,SAAAp4B,IACAL,KAAAy4B,SAAAjlB,OAAAnT,EAAA,KAEAA,CACA,QAAAo3B,GAAA,EAAuBA,EAAAp2B,EAAAwN,YAAArM,SAAiDi1B,EACxEz3B,KAAAgM,WAAA3K,EAAAmN,aAAAipB,GACAmC,GAAA32B,KAAA5B,EAAAV,QACAU,EAAAiK,OAAAjK,EAAAV,MAAAU,KAcAoK,EAAAlK,UAAA2K,cAAA,SAAA7K,GACA,GAAAA,YAAAmL,IAEA,OAAA3J,KAAAxB,EAAAqL,OACA,GAAArL,EAAAiM,eACAjM,EAAAiM,eAAAhC,OAAA/G,OAAAlD,EAAAiM,gBACAjM,EAAAiM,eAAA,SACa,CACb,GAAA7K,GAAAzC,KAAAy4B,SAAA3oB,QAAAzO,EAEAoB,IAAA,GACAzC,KAAAy4B,SAAAjlB,OAAA/Q,EAAA,QAIK,IAAApB,YAAAO,GAELg4B,EAAA32B,KAAA5B,EAAAV,aACAU,GAAAiK,OAAAjK,EAAAV,UAEK,IAAAU,YAAAoE,GAAA,CAEL,OAAApF,GAAA,EAAuBA,EAAAgB,EAAAwN,YAAArM,SAAiDnC,EACxEL,KAAAkM,cAAA7K,EAAAmN,aAAAnO,GAEAu5B,GAAA32B,KAAA5B,EAAAV,aACAU,GAAAiK,OAAAjK,EAAAV,QAKA8K,EAAAX,WAAA,SAAAuD,EAAAwrB,EAAAC,GACAn4B,EAAA0M,EACA0Y,EAAA8S,EACAd,EAAAe,IlCikRM,SAAUl6B,EAAQD,EAASO,GAEjC,YAYA,SAASugB,GAA2B1gB,EAAMQ,GAAQ,IAAKR,EAAQ,KAAM,IAAI2gB,gBAAe,4DAAgE,QAAOngB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BR,EAAPQ,EAElO,QAASogB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1b,WAAU,iEAAoE0b,GAAeD,GAASrf,UAAYT,OAAOuE,OAAOwb,GAAcA,EAAWtf,WAAagE,aAAeb,MAAOkc,EAAU3f,YAAY,EAAO6f,UAAU,EAAM9f,cAAc,KAAe6f,IAAY/f,OAAOigB,eAAiBjgB,OAAOigB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAEje,QAASN,GAAgBC,EAAU/K,GAAe,KAAM+K,YAAoB/K,IAAgB,KAAM,IAAItQ,WAAU,qCAbhHrE,OAAOC,eAAepB,EAAS,cAC7B+E,OAAO,IAET/E,EAAQo6B,mBAAqBp6B,EAAQq6B,gBAAkBr6B,EAAQ4nB,YAAc5nB,EAAQs6B,gBAAkBt6B,EAAQ2nB,YAAc3nB,EAAQu6B,oBAAsBv6B,EAAQw6B,uBAAqBt3B,EAExL,IAAIwe,GAAe,WAAc,QAAS3V,GAAiB4V,EAAQC,GAAS,IAAK,GAAIlhB,GAAI,EAAGA,EAAIkhB,EAAM/e,OAAQnC,IAAK,CAAE,GAAImhB,GAAaD,EAAMlhB,EAAImhB,GAAWvgB,WAAaugB,EAAWvgB,aAAc,EAAOugB,EAAWxgB,cAAe,EAAU,SAAWwgB,KAAYA,EAAWV,UAAW,GAAMhgB,OAAOC,eAAeugB,EAAQE,EAAW7e,IAAK6e,IAAiB,MAAO,UAAU/L,EAAagM,EAAYC,GAAiJ,MAA9HD,IAAY/V,EAAiB+J,EAAYlU,UAAWkgB,GAAiBC,GAAahW,EAAiB+J,EAAaiM,GAAqBjM,MmCv6RhiBgd,EAAAvyB,EAAA,IAEMk6B,EAAWl6B,EAAQ,IACnBm6B,EAAQD,EAAS3uB,KAAK/F,SAASxF,EAAQ,KAEvCo6B,EAAeD,EAAMrqB,WAAW,cAAclL,OAEvCq1B,wBACX1Q,QAAS6Q,EAAa7Q,QACtBmC,QAAS0O,EAAa1O,QACtBI,UAAWsO,EAAatO,UACxBU,YAAa4N,EAAa5N,YAC1BuD,QAASqK,EAAarK,QACtBC,SAAUoK,EAAapK,SACvBC,eAAgBmK,EAAanK,eAC7BC,QAASkK,EAAalK,QACtBlB,KAAMoL,EAAapL,KACnBvE,IAAK2P,EAAa3P,IAClBC,QAAS0P,EAAa1P,SAGlB2P,GACJ9Q,SACE4Q,EAAMtqB,WAAW,wBACjBsqB,EAAMtqB,WAAW,wBAEnB6b,SACEyO,EAAMtqB,WAAW,wBACjBsqB,EAAMtqB,WAAW,wBAEnBic,WACEqO,EAAMtqB,WAAW,0BACjBsqB,EAAMtqB,WAAW,0BAEnB2c,aACE2N,EAAMtqB,WAAW,4BACjBsqB,EAAMtqB,WAAW,4BAEnBkgB,SACEoK,EAAMtqB,WAAW,wBACjBsqB,EAAMtqB,WAAW,wBAEnBmgB,UACEmK,EAAMtqB,WAAW,yBACjBsqB,EAAMtqB,WAAW,yBAEnBogB,gBACEkK,EAAMtqB,WAAW,8BACjBsqB,EAAMtqB,WAAW,8BAEnBqgB,SACEiK,EAAMtqB,WAAW,wBACjBsqB,EAAMtqB,WAAW,wBAEnBmf,MACEmL,EAAMtqB,WAAW,qBACjBsqB,EAAMtqB,WAAW,qBAEnB4a,KACE0P,EAAMtqB,WAAW,oBACjBsqB,EAAMtqB,WAAW,oBAEnB6a,SACEyP,EAAMtqB,WAAW,wBACjB,OAISmqB,yBACX1L,YAAa6L,EAAMrqB,WAAW,eAAelL,OAAO0pB,YACpDL,KAAMkM,EAAMrqB,WAAW,eAAelL,OAAOqpB,KAC7CE,MAAOgM,EAAMrqB,WAAW,eAAelL,OAAOupB,MAC9CgC,MAAOgK,EAAMrqB,WAAW,eAAelL,OAAOurB,OAG1CmK,GACJhM,YAAa6L,EAAMtqB,WAAW,qBAC9Boe,KAAMkM,EAAMtqB,WAAW,cACvBse,MAAOgM,EAAMtqB,WAAW,eACxBsgB,MAAOgK,EAAMtqB,WAAW,gBAGpBkQ,EAAUoa,EAAMtqB,WAAW,iBAC3B0qB,EAAUJ,EAAMtqB,WAAW,iBAC3B2qB,EAAQL,EAAMtqB,WAAW,eAElBuX,EnC84RK3nB,EmC94RL2nB,YnC84R2B,WACtC,QAASA,KACP/G,EAAgBvgB,KAAMsnB,GAgBxB,MAbAjG,GAAaiG,IACX3kB,IAAK,iBACL+B,MAAO,SmCp5RMikB,GACb,GAAM2H,KACN,KAAK,GAAMjwB,KAAKsoB,GACVA,EAASnnB,eAAenB,IAC1BiwB,EAAgBvd,KAAK+T,KAAKK,UAAUwB,EAAStoB,IAGjD,OAAOiwB,GAAgBxkB,KAAK,UnCw5RvBwb,KmCp5RI2S,EnCu5RSt6B,EmCv5RTs6B,gBnCu5RmC,WAC9C,QAASA,KACP1Z,EAAgBvgB,KAAMi6B,GAwDxB,MArDA5Y,GAAa4Y,IACXt3B,IAAK,iBACL+B,MAAO,SmC75RMikB,GACb,GAAI7M,GAASse,EAASle,OAAO7W,QAC7B,KAAK,GAAMhF,KAAKsoB,GACd,GAAIA,EAASnnB,eAAenB,GAAI,CAC9B,GAAMs6B,GAAU75B,OAAO2mB,UAAWkB,EAAStoB,GAC3C,IAAIs6B,EAAQ7U,OAAQ,CAClB,GAAIrhB,SACJ,QAAQk2B,EAAQnR,QACd,IAAK2Q,GAAmB1Q,QACtBhlB,EAAO81B,EAAa9Q,QAAQ,EAC5B,MACF,KAAK0Q,GAAmBvO,QACtBnnB,EAAO81B,EAAa3O,OACpB,MACF,KAAKuO,GAAmBnO,UACtBvnB,EAAO81B,EAAavO,UAAU,EAC9B,MACF,KAAKmO,GAAmBzN,YACtBjoB,EAAO81B,EAAa7N,YAAY,EAChC,MACF,KAAKyN,GAAmBlK,QACtBxrB,EAAO81B,EAAatK,QAAQ,EAC5B,MACF,KAAKkK,GAAmBjK,SACtBzrB,EAAO81B,EAAarK,SAAS,EAC7B,MACF,KAAKiK,GAAmBhK,eACtB1rB,EAAO81B,EAAapK,eAAe,EACnC,MACF,KAAKgK,GAAmB/J,QACtB3rB,EAAO81B,EAAanK,QAAQ,EAC5B,MACF,KAAK+J,GAAmBjL,KACtBzqB,EAAO81B,EAAarL,KAAK,EACzB,MACF,KAAKiL,GAAmBxP,IACtBlmB,EAAO81B,EAAa5P,IAAI,EACxB,MACF,KAAKwP,GAAmBla,QACtBxb,EAAO81B,EAAa3P,QAAQ,GAGhC+P,EAAQ7U,OAASrhB,EAAKyb,OAAOya,EAAQ7U,QAAQ5H,SAE/Cuc,EAAQta,gBAAgBwa,EAAS7e,GAGrC,MAAOA,GAAOoC,anCi6RT+b,KmC75RI1S,EnCg6RK5nB,EmCh6RL4nB,YnCg6R2B,WACtC,QAASA,KACPhH,EAAgBvgB,KAAMunB,GAoCxB,MAjCAlG,GAAakG,IACX5kB,IAAK,gBACL+B,MAAO,SmCt6RKgN,GACZ,GAAI8Y,MACE+F,EAAiB7e,EAAKrC,MAAM,KAClC,KAAK,GAAIhP,KAAKkwB,GACZ,GAAIA,EAAe/uB,eAAenB,GAAI,CACpC,IAAKkwB,EAAelwB,GAClB,QAEF,IAAMouB,GAAQ3H,KAAKC,MAAMwJ,EAAelwB,GACxCmqB,GAAQzX,KAAK0b,GAGjB,MAAOjE,MnCy6RP7nB,IAAK,sBACL+B,MAAO,SmCv6RW8rB,EAAY9e,GAC9B,MAAOA,MnC06RP/O,IAAK,gBACL+B,MAAO,SmCx6RKgN,GACZ,MAAOA,MnC26RP/O,IAAK,oBACL+B,MAAO,SmCz6RS+rB,EAAa/e,GAC7B,MAAOA,OnC66RF6V,KmCz6RIyS,EnC46RSr6B,EmC56RTq6B,gBnC46RmC,WAC9C,QAASA,KACPzZ,EAAgBvgB,KAAMg6B,GA0FxB,MAvFA3Y,GAAa2Y,IACXr3B,IAAK,gBACL+B,MAAO,SmCl7RKgN,GAGZ,IAFA,GAAI8Y,MACEnM,EAAS+b,EAAS5b,OAAOnZ,OAAO,GAAI4D,YAAWyI,IAC9C2M,EAAOjC,IAAMiC,EAAO9L,KAAK,CAC9B,GAAMkc,GAAQiM,EAAMta,gBAAgB/B,EACpCmM,GAAQzX,KAAK0b,GAEf,MAAOjE,MnCq7RP7nB,IAAK,sBACL+B,MAAO,SmCn7RW8rB,EAAY9e,GAC9B,GAAIjN,EACJ,QAAQ+rB,GACN,IAAK2J,GAAmB1Q,QACtBhlB,EAAO81B,EAAa9Q,QAAQ,EAC5B,MACF,KAAK0Q,GAAmBvO,QACtBnnB,EAAO81B,EAAa3O,QAAQ,EAC5B,MACF,KAAKuO,GAAmBnO,UACtBvnB,EAAO81B,EAAavO,UAAU,EAC9B,MACF,KAAKmO,GAAmBzN,YACtBjoB,EAAO81B,EAAa7N,YAAY,EAChC,MACF,KAAKyN,GAAmBlK,QACtBxrB,EAAO81B,EAAatK,QAAQ,EAC5B,MACF,KAAKkK,GAAmBjK,SACtBzrB,EAAO81B,EAAarK,SAAS,EAC7B,MACF,KAAKiK,GAAmBhK,eACtB1rB,EAAO81B,EAAapK,eAAe,EACnC,MACF,KAAKgK,GAAmB/J,QACtB3rB,EAAO81B,EAAanK,QAAQ,EAC5B,MACF,KAAK+J,GAAmBjL,KACtBzqB,EAAO81B,EAAarL,KAAK,EACzB,MACF,KAAKiL,GAAmBxP,IACtBlmB,EAAO81B,EAAa5P,IAAI,GAG5B,MAAO3qB,MAAK46B,QAAQn2B,EAAMiN,MnCs7R1B/O,IAAK,gBACL+B,MAAO,SmCp7RKgN,GACZ,MAAO1R,MAAK46B,QAAQ3a,EAASvO,MnCu7R7B/O,IAAK,oBACL+B,MAAO,SmCr7RS+rB,EAAa/e,GAC7B,GAAIjN,EACJ,QAAQgsB,GACN,IAAKyJ,GAAoB1L,YACvB/pB,EAAO+1B,EAAchM,WACrB,MACF,KAAK0L,GAAoB/L,KACvB1pB,EAAO+1B,EAAcrM,IACrB,MACF,KAAK+L,GAAoB7L,MACvB5pB,EAAO+1B,EAAcnM,KACrB,MACF,KAAK6L,GAAoB7J,MACvB5rB,EAAO+1B,EAAcnK,MAGzB,MAAOrwB,MAAK46B,QAAQn2B,EAAMiN,MnCw7R1B/O,IAAK,UACL+B,MAAO,SmCt7RDD,EAAMiN,GACZ,GAAImpB,SACJ,KACEA,EAAMp2B,EAAKqJ,OAAO4D,GAClB,MAAOgB,GACP,MAAO,MAET,MAAOmoB,OnC07RFb,IAGgBr6B,GmCz7RZo6B,mBnCy7RyC,SAAUe,GAG9D,QAASf,KAGP,MAFAxZ,GAAgBvgB,KAAM+5B,GAEftZ,EAA2BzgB,MAAO+5B,EAAmB/Y,WAAalgB,OAAOmhB,eAAe8X,IAAqB/oB,MAAMhR,KAAMyS,YAmBlI,MAxBAkO,GAAUoZ,EAAoBe,GAQ9BzZ,EAAa0Y,IACXp3B,IAAK,aACL+B,MAAO,SmCl8RE2iB,GACM,aAAXA,GACFrnB,KAAKyiB,SAAU,EACfziB,KAAKkiB,YAAciY,EACnBn6B,KAAKoiB,aAAe8X,EACpBl6B,KAAK0iB,SAAW,GAAIuX,GACpBj6B,KAAK2iB,SAAW,GAAIqX,KAEpBh6B,KAAK0iB,SAAW,GAAI4E,GACpBtnB,KAAK2iB,SAAW,GAAI4E,QnCu8RjBwS,GACPtH,EAAYxR,aAIR,SAAUrhB,EAAQD,EAASO,GAEjC,YoC3tSAN,GAAAD,QAAAO,EAAA,KpCmuSM,SAAUN,EAAQD,EAASO,GAEjC,YqCltSA,SAAA+4B,GAAAztB,EAAA/L,EAAAkV,GAMA,MALA,kBAAAlV,IACAkV,EAAAlV,EACAA,EAAA,GAAA26B,GAAA3uB,MACKhM,IACLA,EAAA,GAAA26B,GAAA3uB,MACAhM,EAAAw5B,KAAAztB,EAAAmJ,GAqCA,QAAAglB,GAAAnuB,EAAA/L,GAGA,MAFAA,KACAA,EAAA,GAAA26B,GAAA3uB,MACAhM,EAAAk6B,SAAAnuB,GAnEA,GAAA4uB,GAAAx6B,EAAAD,QAAAO,EAAA,GAEAk6B,GAAAW,MAAA,QAoDAX,EAAAnB,OAgBAmB,EAAAT,WAGAS,EAAA7F,QAAAr0B,EAAA,IACAk6B,EAAAlF,QAAAh1B,EAAA,IACAk6B,EAAAjF,SAAAj1B,EAAA,IACAk6B,EAAAhF,UAAAl1B,EAAA,IAGAk6B,EAAAl1B,iBAAAhF,EAAA,GACAk6B,EAAA30B,UAAAvF,EAAA,GACAk6B,EAAA3uB,KAAAvL,EAAA,IACAk6B,EAAAx4B,KAAA1B,EAAA,GACAk6B,EAAAz4B,KAAAzB,EAAA,IACAk6B,EAAA5tB,MAAAtM,EAAA,GACAk6B,EAAAza,MAAAzf,EAAA,IACAk6B,EAAAnF,SAAA/0B,EAAA,IACAk6B,EAAAzrB,QAAAzO,EAAA,IACAk6B,EAAA/D,OAAAn2B,EAAA,IAGAk6B,EAAAna,QAAA/f,EAAA,IACAk6B,EAAA/E,SAAAn1B,EAAA,IAGAk6B,EAAAhtB,MAAAlN,EAAA,GACAk6B,EAAAv4B,KAAA3B,EAAA,GAGAk6B,EAAAl1B,iBAAA4F,WAAAsvB,EAAA3uB,MACA2uB,EAAA30B,UAAAqF,WAAAsvB,EAAAz4B,KAAAy4B,EAAAzrB,SACAyrB,EAAA3uB,KAAAX,WAAAsvB,EAAAz4B,MACAy4B,EAAA5tB,MAAA1B,WAAAsvB,EAAAz4B,OrC8uSM,SAAU/B,EAAQD,EAASO,GAEjC,YsC3zSA,SAAA86B,KACAZ,EAAA5b,OAAA1T,WAAAsvB,EAAAtb,cACAsb,EAAAv4B,KAAAiJ,aA7BA,GAAAsvB,GAAAz6B,CAQAy6B,GAAAW,MAAA,UAGAX,EAAAle,OAAAhc,EAAA,IACAk6B,EAAA3d,aAAAvc,EAAA,IACAk6B,EAAA5b,OAAAte,EAAA,IACAk6B,EAAAtb,aAAA5e,EAAA,IAGAk6B,EAAAv4B,KAAA3B,EAAA,GACAk6B,EAAA9D,IAAAp2B,EAAA,IACAk6B,EAAAt4B,MAAA5B,EAAA,IACAk6B,EAAAY,YAaAZ,EAAAle,OAAApR,WAAAsvB,EAAA3d,cACAue,KtC61SM,SAAUp7B,EAAQD,EAASO,GAEjC,YuC33SA,IAAAiH,GAAAxH,CAOAwH,GAAA3E,OAAA,SAAAsb,GACA,GAAArc,GAAAqc,EAAAtb,MACA,KAAAf,EACA,QAEA,KADA,GAAAN,GAAA,IACAM,EAAA,WAAAqc,EAAAva,OAAA9B,MACAN,CACA,OAAA+G,MAAA+yB,KAAA,EAAAnd,EAAAtb,QAAA,EAAArB,EAUA,QANA+5B,GAAA,GAAA34B,OAAA,IAGA44B,EAAA,GAAA54B,OAAA,KAGAlC,EAAA,EAAeA,EAAA,IACf86B,EAAAD,EAAA76B,KAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,EAAAA,EAAA,OAAAA,GASA8G,GAAA+Y,OAAA,SAAAzB,EAAAW,EAAAR,GAMA,IALA,GAIAwc,GAJAC,EAAA,KACAC,KACAj7B,EAAA,EACAo3B,EAAA,EAEArY,EAAAR,GAAA,CACA,GAAA5a,GAAAya,EAAAW,IACA,QAAAqY,GACA,OACA6D,EAAAj7B,KAAA66B,EAAAl3B,GAAA,GACAo3B,GAAA,EAAAp3B,IAAA,EACAyzB,EAAA,CACA,MACA,QACA6D,EAAAj7B,KAAA66B,EAAAE,EAAAp3B,GAAA,GACAo3B,GAAA,GAAAp3B,IAAA,EACAyzB,EAAA,CACA,MACA,QACA6D,EAAAj7B,KAAA66B,EAAAE,EAAAp3B,GAAA,GACAs3B,EAAAj7B,KAAA66B,EAAA,GAAAl3B,GACAyzB,EAAA,EAGAp3B,EAAA,QACAg7B,WAAAtoB,KAAA3K,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,IACAj7B,EAAA,GASA,MANAo3B,KACA6D,EAAAj7B,KAAA66B,EAAAE,GACAE,EAAAj7B,KAAA,GACA,IAAAo3B,IACA6D,EAAAj7B,KAAA,KAEAg7B,GACAh7B,GACAg7B,EAAAtoB,KAAA3K,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,EAAA1rB,MAAA,EAAAvP,KACAg7B,EAAAvvB,KAAA,KAEA1D,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,EAAA1rB,MAAA,EAAAvP,IAaA8G,GAAA2G,OAAA,SAAAgQ,EAAAW,EAAArO,GAIA,OADAgrB,GAFAhc,EAAAhP,EACAqnB,EAAA,EAEAp3B,EAAA,EAAmBA,EAAAyd,EAAAtb,QAAmB,CACtC,GAAA/B,GAAAqd,EAAAyd,WAAAl7B,IACA,SAAAI,GAAAg3B,EAAA,EACA,KACA,QAAA50B,MAAApC,EAAA06B,EAAA16B,IACA,KAAAyF,OAnBA,mBAoBA,QAAAuxB,GACA,OACA2D,EAAA36B,EACAg3B,EAAA,CACA,MACA,QACAhZ,EAAArO,KAAAgrB,GAAA,MAAA36B,IAAA,EACA26B,EAAA36B,EACAg3B,EAAA,CACA,MACA,QACAhZ,EAAArO,MAAA,GAAAgrB,IAAA,MAAA36B,IAAA,EACA26B,EAAA36B,EACAg3B,EAAA,CACA,MACA,QACAhZ,EAAArO,MAAA,EAAAgrB,IAAA,EAAA36B,EACAg3B,EAAA,GAIA,OAAAA,EACA,KAAAvxB,OA1CA,mBA2CA,OAAAkK,GAAAgP,GAQAjY,EAAAlE,KAAA,SAAA6a,GACA,4EAAwE7a,KAAA6a,KvCy4SlE,SAAUle,EAAQD,EAASO,GAEjC,YwC3gTA,SAAAkH,KAOApH,KAAAw7B,cAfA57B,EAAAD,QAAAyH,EAyBAA,EAAA7F,UAAA2R,GAAA,SAAAuoB,EAAA9f,EAAAmY,GAKA,OAJA9zB,KAAAw7B,WAAAC,KAAAz7B,KAAAw7B,WAAAC,QAAA1oB,MACA4I,KACAmY,OAAA9zB,OAEAA,MASAoH,EAAA7F,UAAAwwB,IAAA,SAAA0J,EAAA9f,GACA,OAAA9Y,KAAA44B,EACAz7B,KAAAw7B,kBAEA,QAAA34B,KAAA8Y,EACA3b,KAAAw7B,WAAAC,UAGA,QADAjpB,GAAAxS,KAAAw7B,WAAAC,GACAp7B,EAAA,EAA2BA,EAAAmS,EAAAhQ,QAC3BgQ,EAAAnS,GAAAsb,OACAnJ,EAAAgB,OAAAnT,EAAA,KAEAA,CAGA,OAAAL,OASAoH,EAAA7F,UAAA6Q,KAAA,SAAAqpB,GACA,GAAAjpB,GAAAxS,KAAAw7B,WAAAC,EACA,IAAAjpB,EAAA,CAGA,IAFA,GAAA3B,MACAxQ,EAAA,EACcA,EAAAoS,UAAAjQ,QACdqO,EAAAkC,KAAAN,UAAApS,KACA,KAAAA,EAAA,EAAmBA,EAAAmS,EAAAhQ,QACnBgQ,EAAAnS,GAAAsb,GAAA3K,MAAAwB,EAAAnS,KAAAyzB,IAAAjjB,GAEA,MAAA7Q,QxC2hTM,SAAUJ,EAAQD,EAASO,GAEjC,YyChhTA,SAAAR,GAAAC,GAwNA,MArNA,mBAAA+7B,cAAA,WAMA,QAAAC,GAAA/4B,EAAAiL,EAAAuO,GACAwf,EAAA,GAAAh5B,EACAiL,EAAAuO,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GAGA,QAAAC,GAAAl5B,EAAAiL,EAAAuO,GACAwf,EAAA,GAAAh5B,EACAiL,EAAAuO,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GAQA,QAAAE,GAAAluB,EAAAuO,GAKA,MAJAyf,GAAA,GAAAhuB,EAAAuO,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAwf,EAAA,GAGA,QAAAI,GAAAnuB,EAAAuO,GAKA,MAJAyf,GAAA,GAAAhuB,EAAAuO,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAwf,EAAA,GAtCA,GAAAA,GAAA,GAAAF,gBAAA,IACAG,EAAA,GAAA5yB,YAAA2yB,EAAAnd,QACAwd,EAAA,MAAAJ,EAAA,EAmBAl8B,GAAA8d,aAAAwe,EAAAN,EAAAG,EAEAn8B,EAAAu8B,aAAAD,EAAAH,EAAAH,EAmBAh8B,EAAAuf,YAAA+c,EAAAF,EAAAC,EAEAr8B,EAAAw8B,YAAAF,EAAAD,EAAAD,KAGS,WAET,QAAAK,GAAAC,EAAAz5B,EAAAiL,EAAAuO,GACA,GAAA0L,GAAAllB,EAAA,KAGA,IAFAklB,IACAllB,MACA,IAAAA,EACAy5B,EAAA,EAAAz5B,EAAA,eAAAiL,EAAAuO,OACA,IAAAjK,MAAAvP,GACAy5B,EAAA,WAAAxuB,EAAAuO,OACA,IAAAxZ,EAAA,sBACAy5B,GAAAvU,GAAA,mBAAAja,EAAAuO,OACA,IAAAxZ,EAAA,uBACAy5B,GAAAvU,GAAA,GAAA5f,KAAAyjB,MAAA/oB,EAAA,4BAAAiL,EAAAuO,OACA,CACA,GAAAkgB,GAAAp0B,KAAAC,MAAAD,KAAAyI,IAAA/N,GAAAsF,KAAAq0B,KACAC,EAAA,QAAAt0B,KAAAyjB,MAAA/oB,EAAAsF,KAAAsJ,IAAA,GAAA8qB,GAAA,QACAD,IAAAvU,GAAA,GAAAwU,EAAA,QAAAE,KAAA,EAAA3uB,EAAAuO,IAOA,QAAAqgB,GAAAC,EAAA7uB,EAAAuO,GACA,GAAAugB,GAAAD,EAAA7uB,EAAAuO,GACA0L,EAAA,GAAA6U,GAAA,MACAL,EAAAK,IAAA,OACAH,EAAA,QAAAG,CACA,cAAAL,EACAE,EACAI,IACA9U,GAAA+U,KACA,IAAAP,EACA,sBAAAxU,EAAA0U,EACA1U,EAAA5f,KAAAsJ,IAAA,EAAA8qB,EAAA,MAAAE,EAAA,SAdA78B,EAAA8d,aAAA2e,EAAArG,KAAA,KAAA+G,GACAn9B,EAAAu8B,aAAAE,EAAArG,KAAA,KAAAgH,GAgBAp9B,EAAAuf,YAAAud,EAAA1G,KAAA,KAAAiH,GACAr9B,EAAAw8B,YAAAM,EAAA1G,KAAA,KAAAkH,MAKA,mBAAAC,cAAA,WAMA,QAAAC,GAAAv6B,EAAAiL,EAAAuO,GACAghB,EAAA,GAAAx6B,EACAiL,EAAAuO,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GAGA,QAAAwB,GAAAz6B,EAAAiL,EAAAuO,GACAghB,EAAA,GAAAx6B,EACAiL,EAAAuO,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GACAhuB,EAAAuO,EAAA,GAAAyf,EAAA,GAQA,QAAAyB,GAAAzvB,EAAAuO,GASA,MARAyf,GAAA,GAAAhuB,EAAAuO,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAghB,EAAA,GAGA,QAAAG,GAAA1vB,EAAAuO,GASA,MARAyf,GAAA,GAAAhuB,EAAAuO,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAyf,EAAA,GAAAhuB,EAAAuO,EAAA,GACAghB,EAAA,GAtDA,GAAAA,GAAA,GAAAF,gBAAA,IACArB,EAAA,GAAA5yB,YAAAm0B,EAAA3e,QACAwd,EAAA,MAAAJ,EAAA,EA2BAl8B,GAAAge,cAAAse,EAAAkB,EAAAE,EAEA19B,EAAA69B,cAAAvB,EAAAoB,EAAAF,EA2BAx9B,EAAAwf,aAAA8c,EAAAqB,EAAAC,EAEA59B,EAAA89B,aAAAxB,EAAAsB,EAAAD,KAGS,WAET,QAAAI,GAAArB,EAAAsB,EAAAC,EAAAh7B,EAAAiL,EAAAuO,GACA,GAAA0L,GAAAllB,EAAA,KAGA,IAFAklB,IACAllB,MACA,IAAAA,EACAy5B,EAAA,EAAAxuB,EAAAuO,EAAAuhB,GACAtB,EAAA,EAAAz5B,EAAA,eAAAiL,EAAAuO,EAAAwhB,OACa,IAAAzrB,MAAAvP,GACby5B,EAAA,EAAAxuB,EAAAuO,EAAAuhB,GACAtB,EAAA,WAAAxuB,EAAAuO,EAAAwhB,OACa,IAAAh7B,EAAA,uBACby5B,EAAA,EAAAxuB,EAAAuO,EAAAuhB,GACAtB,GAAAvU,GAAA,mBAAAja,EAAAuO,EAAAwhB,OACa,CACb,GAAApB,EACA,IAAA55B,EAAA,wBACA45B,EAAA55B,EAAA,OACAy5B,EAAAG,IAAA,EAAA3uB,EAAAuO,EAAAuhB,GACAtB,GAAAvU,GAAA,GAAA0U,EAAA,gBAAA3uB,EAAAuO,EAAAwhB,OACiB,CACjB,GAAAtB,GAAAp0B,KAAAC,MAAAD,KAAAyI,IAAA/N,GAAAsF,KAAAq0B,IACA,QAAAD,IACAA,EAAA,MACAE,EAAA55B,EAAAsF,KAAAsJ,IAAA,GAAA8qB,GACAD,EAAA,iBAAAG,IAAA,EAAA3uB,EAAAuO,EAAAuhB,GACAtB,GAAAvU,GAAA,GAAAwU,EAAA,iBAAAE,EAAA,aAAA3uB,EAAAuO,EAAAwhB,KAQA,QAAAC,GAAAnB,EAAAiB,EAAAC,EAAA/vB,EAAAuO,GACA,GAAAnS,GAAAyyB,EAAA7uB,EAAAuO,EAAAuhB,GACAzzB,EAAAwyB,EAAA7uB,EAAAuO,EAAAwhB,GACA9V,EAAA,GAAA5d,GAAA,MACAoyB,EAAApyB,IAAA,QACAsyB,EAAA,oBAAAtyB,GAAAD,CACA,eAAAqyB,EACAE,EACAI,IACA9U,GAAA+U,KACA,IAAAP,EACA,OAAAxU,EAAA0U,EACA1U,EAAA5f,KAAAsJ,IAAA,EAAA8qB,EAAA,OAAAE,EAAA,kBAfA78B,EAAAge,cAAA+f,EAAA3H,KAAA,KAAA+G,EAAA,KACAn9B,EAAA69B,cAAAE,EAAA3H,KAAA,KAAAgH,EAAA,KAiBAp9B,EAAAwf,aAAA0e,EAAA9H,KAAA,KAAAiH,EAAA,KACAr9B,EAAA89B,aAAAI,EAAA9H,KAAA,KAAAkH,EAAA,QAIAt9B,EAKA,QAAAm9B,GAAAl6B,EAAAiL,EAAAuO,GACAvO,EAAAuO,GAAA,IAAAxZ,EACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,MACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,OACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,GAGA,QAAAm6B,GAAAn6B,EAAAiL,EAAAuO,GACAvO,EAAAuO,GAAAxZ,IAAA,GACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,OACAiL,EAAAuO,EAAA,GAAAxZ,IAAA,MACAiL,EAAAuO,EAAA,OAAAxZ,EAGA,QAAAo6B,GAAAnvB,EAAAuO,GACA,OAAAvO,EAAAuO,GACAvO,EAAAuO,EAAA,MACAvO,EAAAuO,EAAA,OACAvO,EAAAuO,EAAA,YAGA,QAAA6gB,GAAApvB,EAAAuO,GACA,OAAAvO,EAAAuO,IAAA,GACAvO,EAAAuO,EAAA,OACAvO,EAAAuO,EAAA,MACAvO,EAAAuO,EAAA,QA3UAxc,EAAAD,QAAAD,MzCy7TM,SAAUE,EAAQD,EAASO,GAEjC,Y0Ct7TA,IAAAoH,GAAA3H,CAOA2H,GAAA9E,OAAA,SAAAsb,GAGA,OAFAvL,GAAA,EACA9R,EAAA,EACAJ,EAAA,EAAmBA,EAAAyd,EAAAtb,SAAmBnC,EACtCI,EAAAqd,EAAAyd,WAAAl7B,GACAI,EAAA,IACA8R,GAAA,EACA9R,EAAA,KACA8R,GAAA,EACA,cAAA9R,IAAA,cAAAqd,EAAAyd,WAAAl7B,EAAA,OACAA,EACAkS,GAAA,GAEAA,GAAA,CAEA,OAAAA,IAUAjL,EAAA+X,KAAA,SAAAZ,EAAAW,EAAAR,GAEA,GADAA,EAAAQ,EACA,EACA,QAKA,KAJA,GAGAgc,GAHAC,EAAA,KACAC,KACAj7B,EAAA,EAEA+e,EAAAR,GACAwc,EAAA3c,EAAAW,KACAgc,EAAA,IACAE,EAAAj7B,KAAA+6B,EACAA,EAAA,KAAAA,EAAA,IACAE,EAAAj7B,MAAA,GAAA+6B,IAAA,KAAA3c,EAAAW,KACAgc,EAAA,KAAAA,EAAA,KACAA,IAAA,EAAAA,IAAA,OAAA3c,EAAAW,OAAA,OAAAX,EAAAW,OAAA,KAAAX,EAAAW,MAAA,MACAkc,EAAAj7B,KAAA,OAAA+6B,GAAA,IACAE,EAAAj7B,KAAA,YAAA+6B,IAEAE,EAAAj7B,MAAA,GAAA+6B,IAAA,OAAA3c,EAAAW,OAAA,KAAAX,EAAAW,KACA/e,EAAA,QACAg7B,WAAAtoB,KAAA3K,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,IACAj7B,EAAA,EAGA,OAAAg7B,IACAh7B,GACAg7B,EAAAtoB,KAAA3K,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,EAAA1rB,MAAA,EAAAvP,KACAg7B,EAAAvvB,KAAA,KAEA1D,OAAAiwB,aAAArnB,MAAA5I,OAAAkzB,EAAA1rB,MAAA,EAAAvP,KAUAiH,EAAAyG,MAAA,SAAA+P,EAAAW,EAAArO,GAIA,OAFA0tB,GACAC,EAFA3e,EAAAhP,EAGA/P,EAAA,EAAmBA,EAAAyd,EAAAtb,SAAmBnC,EACtCy9B,EAAAhgB,EAAAyd,WAAAl7B,GACAy9B,EAAA,IACArf,EAAArO,KAAA0tB,EACSA,EAAA,MACTrf,EAAArO,KAAA0tB,GAAA,MACArf,EAAArO,KAAA,GAAA0tB,EAAA,KACS,cAAAA,IAAA,eAAAC,EAAAjgB,EAAAyd,WAAAl7B,EAAA,MACTy9B,EAAA,aAAAA,IAAA,UAAAC,KACA19B,EACAoe,EAAArO,KAAA0tB,GAAA,OACArf,EAAArO,KAAA0tB,GAAA,UACArf,EAAArO,KAAA0tB,GAAA,SACArf,EAAArO,KAAA,GAAA0tB,EAAA,MAEArf,EAAArO,KAAA0tB,GAAA,OACArf,EAAArO,KAAA0tB,GAAA,SACArf,EAAArO,KAAA,GAAA0tB,EAAA,IAGA,OAAA1tB,GAAAgP,I1Co8TM,SAAUxf,EAAQD,EAASO,GAEjC,Y2C/gUA,SAAAqH,GAAAmV,EAAA9M,EAAA3E,GACA,GAAA+yB,GAAA/yB,GAAA,KACAgzB,EAAAD,IAAA,EACAE,EAAA,KACA9tB,EAAA4tB,CACA,iBAAA/yB,GACA,GAAAA,EAAA,GAAAA,EAAAgzB,EACA,MAAAvhB,GAAAzR,EACAmF,GAAAnF,EAAA+yB,IACAE,EAAAxhB,EAAAshB,GACA5tB,EAAA,EAEA,IAAAvC,GAAA+B,EAAArP,KAAA29B,EAAA9tB,KAAAnF,EAGA,OAFA,GAAAmF,IACAA,EAAA,KAAAA,IACAvC,GA5CAjO,EAAAD,QAAA4H,G3CimUM,SAAU3H,EAAQD,EAASO,GAEjC,Y4CvlUA,SAAAsH,GAAAyC,EAAAC,GASAlK,KAAAiK,OAAA,EAMAjK,KAAAkK,OAAA,EA3BAtK,EAAAD,QAAA6H,CAEA,IAAA3F,GAAA3B,EAAA,GAiCAi+B,EAAA32B,EAAA22B,KAAA,GAAA32B,GAAA,IAEA22B,GAAAh0B,SAAA,WAA4B,UAC5Bg0B,EAAAhhB,SAAAghB,EAAAze,SAAA,WAA4C,MAAA1f,OAC5Cm+B,EAAA37B,OAAA,WAA0B,SAO1B,IAAAkH,GAAAlC,EAAAkC,SAAA,kBAOAlC,GAAAoG,WAAA,SAAAlJ,GACA,OAAAA,EACA,MAAAy5B,EACA,IAAArW,GAAApjB,EAAA,CACAojB,KACApjB,KACA,IAAAuF,GAAAvF,IAAA,EACAwF,GAAAxF,EAAAuF,GAAA,cAUA,OATA6d,KACA5d,OAAA,EACAD,OAAA,IACAA,EAAA,aACAA,EAAA,IACAC,EAAA,aACAA,EAAA,KAGA,GAAA1C,GAAAyC,EAAAC,IAQA1C,EAAAgC,KAAA,SAAA9E,GACA,mBAAAA,GACA,MAAA8C,GAAAoG,WAAAlJ,EACA,IAAA7C,EAAAmE,SAAAtB,GAAA,CAEA,IAAA7C,EAAAqH,KAGA,MAAA1B,GAAAoG,WAAAwwB,SAAA15B,EAAA,IAFAA,GAAA7C,EAAAqH,KAAAm1B,WAAA35B,GAIA,MAAAA,GAAAyzB,KAAAzzB,EAAA0zB,KAAA,GAAA5wB,GAAA9C,EAAAyzB,MAAA,EAAAzzB,EAAA0zB,OAAA,GAAA+F,GAQA32B,EAAAjG,UAAA4I,SAAA,SAAAN,GACA,IAAAA,GAAA7J,KAAAkK,KAAA,IACA,GAAAD,GAAA,GAAAjK,KAAAiK,KAAA,EACAC,GAAAlK,KAAAkK,KAAA,CAGA,OAFAD,KACAC,IAAA,SACAD,EAAA,WAAAC,GAEA,MAAAlK,MAAAiK,GAAA,WAAAjK,KAAAkK,IAQA1C,EAAAjG,UAAA+8B,OAAA,SAAAz0B,GACA,MAAAhI,GAAAqH,KACA,GAAArH,GAAAqH,KAAA,EAAAlJ,KAAAiK,GAAA,EAAAjK,KAAAkK,GAAAnE,QAAA8D,KAEWsuB,IAAA,EAAAn4B,KAAAiK,GAAAmuB,KAAA,EAAAp4B,KAAAkK,GAAAL,SAAA9D,QAAA8D,IAGX,IAAA0xB,GAAAnzB,OAAA7G,UAAAg6B,UAOA/zB,GAAAuC,SAAA,SAAAH,GACA,MAAAA,KAAAF,EACAy0B,EACA,GAAA32B,IACA+zB,EAAAh7B,KAAAqJ,EAAA,GACA2xB,EAAAh7B,KAAAqJ,EAAA,MACA2xB,EAAAh7B,KAAAqJ,EAAA,OACA2xB,EAAAh7B,KAAAqJ,EAAA,aAEA2xB,EAAAh7B,KAAAqJ,EAAA,GACA2xB,EAAAh7B,KAAAqJ,EAAA,MACA2xB,EAAAh7B,KAAAqJ,EAAA,OACA2xB,EAAAh7B,KAAAqJ,EAAA,cAQApC,EAAAjG,UAAAkI,OAAA,WACA,MAAArB,QAAAiwB,aACA,IAAAr4B,KAAAiK,GACAjK,KAAAiK,KAAA,MACAjK,KAAAiK,KAAA,OACAjK,KAAAiK,KAAA,GACA,IAAAjK,KAAAkK,GACAlK,KAAAkK,KAAA,MACAlK,KAAAkK,KAAA,OACAlK,KAAAkK,KAAA,KAQA1C,EAAAjG,UAAA4b,SAAA,WACA,GAAAohB,GAAAv+B,KAAAkK,IAAA,EAGA,OAFAlK,MAAAkK,KAAAlK,KAAAkK,IAAA,EAAAlK,KAAAiK,KAAA,IAAAs0B,KAAA,EACAv+B,KAAAiK,IAAAjK,KAAAiK,IAAA,EAAAs0B,KAAA,EACAv+B,MAOAwH,EAAAjG,UAAAme,SAAA,WACA,GAAA6e,KAAA,EAAAv+B,KAAAiK,GAGA,OAFAjK,MAAAiK,KAAAjK,KAAAiK,KAAA,EAAAjK,KAAAkK,IAAA,IAAAq0B,KAAA,EACAv+B,KAAAkK,IAAAlK,KAAAkK,KAAA,EAAAq0B,KAAA,EACAv+B,MAOAwH,EAAAjG,UAAAiB,OAAA,WACA,GAAAg8B,GAAAx+B,KAAAiK,GACAw0B,GAAAz+B,KAAAiK,KAAA,GAAAjK,KAAAkK,IAAA,OACAw0B,EAAA1+B,KAAAkK,KAAA,EACA,YAAAw0B,EACA,IAAAD,EACAD,EAAA,MACAA,EAAA,QACAA,EAAA,YACAC,EAAA,MACAA,EAAA,QACAA,EAAA,YACAC,EAAA,W5C2mUM,SAAU9+B,EAAQD,EAASO,GAEjC,Y6ClyUA,SAAAuc,KACAP,EAAA3b,KAAAP,MAsCA,QAAA2+B,GAAA/7B,EAAAiL,EAAAuO,GACAxZ,EAAAJ,OAAA,GACAX,EAAAyF,KAAAyG,MAAAnL,EAAAiL,EAAAuO,GAEAvO,EAAAlF,UAAA/F,EAAAwZ,GA3DAxc,EAAAD,QAAA8c,CAGA,IAAAP,GAAAhc,EAAA,KACAuc,EAAAlb,UAAAT,OAAAuE,OAAA6W,EAAA3a,YAAAgE,YAAAkX,CAEA,IAAA5a,GAAA3B,EAAA,GAEAwI,EAAA7G,EAAA6G,MAiBA+T,GAAAC,MAAA,SAAAzR,GACA,OAAAwR,EAAAC,MAAA7a,EAAAiH,qBAAAmC,GAGA,IAAA2zB,GAAAl2B,KAAAnH,oBAAA0H,aAAA,QAAAP,EAAAnH,UAAAsc,IAAAld,KACA,SAAAiC,EAAAiL,EAAAuO,GACAvO,EAAAgQ,IAAAjb,EAAAwZ,IAIA,SAAAxZ,EAAAiL,EAAAuO,GACA,GAAAxZ,EAAAi8B,KACAj8B,EAAAi8B,KAAAhxB,EAAAuO,EAAA,EAAAxZ,EAAAJ,YACA,QAAAnC,GAAA,EAA4BA,EAAAuC,EAAAJ,QAC5BqL,EAAAuO,KAAAxZ,EAAAvC,KAMAoc,GAAAlb,UAAAsJ,MAAA,SAAAnG,GACA7C,EAAAmE,SAAAtB,KACAA,EAAA7C,EAAAgH,aAAAnE,EAAA,UACA,IAAA6N,GAAA7N,EAAAlC,SAAA,CAIA,OAHAxC,MAAA6c,OAAAtK,GACAA,GACAvS,KAAA4c,MAAAgiB,EAAArsB,EAAA7N,GACA1E,MAaAyc,EAAAlb,UAAAuc,OAAA,SAAApZ,GACA,GAAA6N,GAAA7J,EAAAo2B,WAAAp6B,EAIA,OAHA1E,MAAA6c,OAAAtK,GACAA,GACAvS,KAAA4c,MAAA+hB,EAAApsB,EAAA7N,GACA1E,O7Ck0UM,SAAUJ,EAAQD,EAASO,GAEjC,Y8C33UA,SAAA4e,GAAAL,GACAD,EAAAje,KAAAP,KAAAye,GAhBA7e,EAAAD,QAAAmf,CAGA,IAAAN,GAAAte,EAAA,KACA4e,EAAAvd,UAAAT,OAAAuE,OAAAmZ,EAAAjd,YAAAgE,YAAAuZ,CAEA,IAAAjd,GAAA3B,EAAA,EAoBA2B,GAAA6G,SACAoW,EAAAvd,UAAA0d,OAAApd,EAAA6G,OAAAnH,UAAAqO,OAKAkP,EAAAvd,UAAAuc,OAAA,WACA,GAAAvL,GAAAvS,KAAA6c,QACA,OAAA7c,MAAA6N,IAAAkxB,UAAA/+B,KAAAoc,IAAApc,KAAAoc,IAAAlU,KAAAiJ,IAAAnR,KAAAoc,IAAA7J,EAAAvS,KAAAuS,Q9Cy5UM,SAAU3S,EAAQD,EAASO,GAEjC,Y+Cr5UA,SAAAyO,GAAA6nB,EAAAC,EAAAC,GAEA,qBAAAF,GACA,KAAArxB,WAAA,6BAEAtD,GAAAuF,aAAA7G,KAAAP,MAMAA,KAAAw2B,UAMAx2B,KAAAy2B,iBAAA1wB,QAAA0wB,GAMAz2B,KAAA02B,kBAAA3wB,QAAA2wB,GA/DA92B,EAAAD,QAAAgP,CAEA,IAAA9M,GAAA3B,EAAA,IAGAyO,EAAApN,UAAAT,OAAAuE,OAAAxD,EAAAuF,aAAA7F,YAAAgE,YAAAoJ,EAwEAA,EAAApN,UAAAy9B,QAAA,QAAAA,GAAAxV,EAAAyV,EAAAC,EAAAC,EAAAxqB,GAEA,IAAAwqB,EACA,KAAAh6B,WAAA,4BAEA,IAAApF,GAAAC,IACA,KAAA2U,EACA,MAAA9S,GAAAqF,UAAA83B,EAAAj/B,EAAAypB,EAAAyV,EAAAC,EAAAC,EAEA,KAAAp/B,EAAAy2B,QAEA,WADA9hB,YAAA,WAA+BC,EAAAzO,MAAA,mBAAoC,EAInE,KACA,MAAAnG,GAAAy2B,QACAhN,EACAyV,EAAAl/B,EAAA02B,iBAAA,4BAAA0I,GAAAjhB,SACA,SAAAxL,EAAA0sB,GAEA,GAAA1sB,EAEA,MADA3S,GAAAqS,KAAA,QAAAM,EAAA8W,GACA7U,EAAAjC,EAGA,WAAA0sB,EAEA,WADAr/B,GAAA6e,KAAA,EAIA,MAAAwgB,YAAAF,IACA,IACAE,EAAAF,EAAAn/B,EAAA22B,kBAAA,4BAAA0I,GACqB,MAAA1sB,GAErB,MADA3S,GAAAqS,KAAA,QAAAM,EAAA8W,GACA7U,EAAAjC,GAKA,MADA3S,GAAAqS,KAAA,OAAAgtB,EAAA5V,GACA7U,EAAA,KAAAyqB,KAGK,MAAA1sB,GAGL,MAFA3S,GAAAqS,KAAA,QAAAM,EAAA8W,OACA9U,YAAA,WAA+BC,EAAAjC,IAAiB,KAUhD/D,EAAApN,UAAAqd,IAAA,SAAAygB,GAOA,MANAr/B,MAAAw2B,UACA6I,GACAr/B,KAAAw2B,QAAA,gBACAx2B,KAAAw2B,QAAA,KACAx2B,KAAAoS,KAAA,OAAA2f,OAEA/xB,O/Cq8UM,SAAUJ,EAAQD,EAASO,GAEjC,YgDzkVA,SAAA6B,GAAAu9B,EAAAC,GAoBA,QAAAC,GAAAC,GAIA,mBAAAA,GAAA,CACA,GAAAtG,GAAAlyB,GAIA,IAHAlF,EAAA29B,SACA5uB,QAAAH,IAAA,YAAAwoB,GACAA,EAAA,UAAAA,EACAsG,EAAA,CAKA,IAJA,GAAAE,GAAA7+B,OAAAuB,KAAAo9B,GACAG,EAAA,GAAAr9B,OAAAo9B,EAAAn9B,OAAA,GACAq9B,EAAA,GAAAt9B,OAAAo9B,EAAAn9B,QACAs9B,EAAA,EACAA,EAAAH,EAAAn9B,QACAo9B,EAAAE,GAAAH,EAAAG,GACAD,EAAAC,GAAAL,EAAAE,EAAAG,KAGA,OADAF,GAAAE,GAAA3G,EACAhuB,SAAA6F,MAAA,KAAA4uB,GAAA5uB,MAAA,KAAA6uB,GAEA,MAAA10B,UAAAguB,KAMA,IAFA,GAAA4G,GAAA,GAAAx9B,OAAAkQ,UAAAjQ,OAAA,GACAw9B,EAAA,EACAA,EAAAD,EAAAv9B,QACAu9B,EAAAC,GAAAvtB,YAAAutB,EAYA,IAXAA,EAAA,EACAP,IAAAr8B,QAAA,wBAAAQ,EAAAC,GACA,GAAAa,GAAAq7B,EAAAC,IACA,QAAAn8B,GACA,sBAAAuE,QAAAJ,OAAAtD,GACA,eAAA0D,QAAAF,KAAAC,MAAAzD,GACA,eAAAoiB,MAAAK,UAAAziB,EACA,eAAA0D,QAAA1D,GAEA,YAEAs7B,IAAAD,EAAAv9B,OACA,KAAA0D,OAAA,2BAEA,OADA6nB,GAAAhb,KAAA0sB,GACAD,EAGA,QAAAv4B,GAAAg5B,GACA,mBAAAA,GAAAV,GAAA,SAAAD,KAAAxzB,KAAA,mBAA0IiiB,EAAAjiB,KAAA,cAhE1I,gBAAAwzB,KACAC,EAAAD,EACAA,MAAAz8B,GAGA,IAAAkrB,KA+DA,OADAyR,GAAAv4B,WACAu4B,EAhFA5/B,EAAAD,QAAAoC,EAiGAA,EAAA29B,SAAA,GhDylVM,SAAU9/B,EAAQD,EAASO,GAEjC,YiD5pVA,SAAA8B,GAAAwJ,EAAAzG,EAAA4P,GAOA,MANA,kBAAA5P,IACA4P,EAAA5P,EACAA,MACKA,IACLA,MAEA4P,GAIA5P,EAAAmhB,KAAAhkB,KAAAg+B,SACAh+B,EAAAg+B,SAAA10B,EAAA,SAAAkH,EAAAytB,GACA,MAAAztB,IAAA,mBAAAyT,gBACAnkB,EAAAkkB,IAAA1a,EAAAzG,EAAA4P,GACAjC,EACAiC,EAAAjC,GACAiC,EAAA,KAAA5P,EAAAq7B,OAAAD,IAAAl5B,SAAA,WAIAjF,EAAAkkB,IAAA1a,EAAAzG,EAAA4P,GAbAzN,EAAAlF,EAAAhC,KAAAwL,EAAAzG,GAxCAnF,EAAAD,QAAAqC,CAEA,IAAAkF,GAAAhH,EAAA,IACAiC,EAAAjC,EAAA,IAEAgC,EAAAC,EAAA,KAwEAH,GAAAkkB,IAAA,SAAA1a,EAAAzG,EAAA4P,GACA,GAAAuR,GAAA,GAAAC,eACAD,GAAAQ,mBAAA,WAEA,OAAAR,EAAAS,WAAA,CAMA,OAAAT,EAAAU,QAAA,MAAAV,EAAAU,OACA,MAAAjS,GAAAzO,MAAA,UAAAggB,EAAAU,QAIA,IAAA7hB,EAAAq7B,OAAA,CACA,GAAA3hB,GAAAyH,EAAAkZ,QACA,KAAA3gB,EAAA,CACAA,IACA,QAAApe,GAAA,EAA+BA,EAAA6lB,EAAAc,aAAAxkB,SAA6BnC,EAC5Doe,EAAA1L,KAAA,IAAAmT,EAAAc,aAAAuU,WAAAl7B,IAEA,MAAAsU,GAAA,wBAAA1L,YAAA,GAAAA,YAAAwV,MAEA,MAAA9J,GAAA,KAAAuR,EAAAc,gBAGAjiB,EAAAq7B,SAEA,oBAAAla,IACAA,EAAAma,iBAAA,sCACAna,EAAA+Q,aAAA,eAGA/Q,EAAAI,KAAA,MAAA9a,GACA0a,EAAAgB,SjDosVM,SAAUtnB,EAAQD,EAASO,GAEjC,YkDhzVA,IAAA+B,GAAAtC,EAEA2gC,EAMAr+B,EAAAq+B,WAAA,SAAAr+B,GACA,qBAAAgB,KAAAhB,IAGAs+B,EAMAt+B,EAAAs+B,UAAA,SAAAt+B,GACAA,IAAAmB,QAAA,WACAA,QAAA,UAA+B,IAC/B,IAAAi4B,GAAAp5B,EAAAoN,MAAA,KACAmxB,EAAAF,EAAAr+B,GACAwO,EAAA,EACA+vB,KACA/vB,EAAA4qB,EAAA9rB,QAAA,IACA,QAAAlP,GAAA,EAAmBA,EAAAg7B,EAAA74B,QACnB,OAAA64B,EAAAh7B,GACAA,EAAA,UAAAg7B,EAAAh7B,EAAA,GACAg7B,EAAA7nB,SAAAnT,EAAA,GACAmgC,EACAnF,EAAA7nB,OAAAnT,EAAA,KAEAA,EACS,MAAAg7B,EAAAh7B,GACTg7B,EAAA7nB,OAAAnT,EAAA,KAEAA,CAEA,OAAAoQ,GAAA4qB,EAAAvvB,KAAA,KAUA7J,GAAAkK,QAAA,SAAAs0B,EAAAC,EAAAC,GAGA,MAFAA,KACAD,EAAAH,EAAAG,IACAJ,EAAAI,GACAA,GACAC,IACAF,EAAAF,EAAAE,KACAA,IAAAr9B,QAAA,uBAAAZ,OAAA+9B,EAAAE,EAAA,IAAAC,QlD8zVM,SAAU9gC,EAAQD,GmD73VxBC,EAAAD,SAAkB4O,QAAU8rB,OAAS9rB,QAAUrI,OAAS+I,QAAUye,MAAQjpB,KAAA,SAAAR,GAAA,GAAuB4C,SAAYpC,KAAA,SAAAR,GAAA,KAAyB28B,YAAe97B,QAAU2kB,QAAA,EAAAmC,QAAA,EAAAI,UAAA,EAAAU,YAAA,EAAAuD,QAAA,EAAAC,SAAA,EAAAC,eAAA,EAAAC,QAAA,EAAAlB,KAAA,EAAAvE,IAAA,EAAAC,QAAA,KAA6I6P,SAAYxrB,QAAUhL,IAAMQ,KAAA,SAAAR,GAAA,GAAuBulB,QAAW/kB,KAAA,aAAAR,GAAA,GAA2B6hB,QAAWrhB,KAAA,QAAAR,GAAA,KAAwBy2B,OAAUzrB,QAAUhL,IAAMQ,KAAA,SAAAR,GAAA,GAAuB0N,OAAUlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,QAAAR,GAAA,KAAwB48B,aAAgB/7B,QAAU0pB,YAAA,EAAAL,KAAA,EAAAE,MAAA,EAAAgC,MAAA,IAA8CpQ,SAAYhR,QAAUxK,MAAQA,KAAA,cAAAR,GAAA,GAA4B+V,SAAYvV,KAAA,SAAAR,GAAA,GAAuByN,MAASjN,KAAA,QAAAR,GAAA,KAAwB68B,YAAe7xB,QAAU0Y,MAAQljB,KAAA,SAAAR,GAAA,GAAuB8oB,QAAWtoB,KAAA,SAAAR,GAAA,GAAuB88B,UAAat8B,KAAA,QAAAR,GAAA,GAAsB+8B,UAAav8B,KAAA,QAAAR,GAAA,KAAwBg9B,aAAgBhyB,QAAUiZ,KAAOzjB,KAAA,SAAAR,GAAA,GAAuByN,MAASjN,KAAA,QAAAR,GAAA,GAAsB4jB,MAASpjB,KAAA,aAAAR,GAAA,KAA6Bi9B,MAASjyB,QAAU4Y,MAAQpjB,KAAA,aAAAR,GAAA,KAA6Bk9B,OAAUlyB,QAAU4Y,MAAQpjB,KAAA,aAAAR,GAAA,KAA6Bm9B,OAAUnyB,WAAYoyB,gBAAmBpyB,QAAU0Y,MAAQljB,KAAA,SAAAR,GAAA,GAAuB2jB,KAAQnjB,KAAA,SAAAR,GAAA,GAAuB4jB,MAASpjB,KAAA,SAAAR,GAAA,GAAuBq9B,MAAS78B,KAAA,SAAAR,GAAA,GAAuB6jB,MAASrjB,KAAA,SAAAR,GAAA,KAAyBs9B,iBAAoBtyB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,gBAAAR,GAAA,KAAgCu9B,eAAkBvyB,QAAU8d,QAAUtoB,KAAA,SAAAR,GAAA,GAAuB6tB,SAAYrtB,KAAA,SAAAR,GAAA,GAAuB4oB,SAAYpoB,KAAA,OAAAR,GAAA,GAAqB6oB,SAAYroB,KAAA,OAAAR,GAAA,GAAqB+oB,KAAQvoB,KAAA,SAAAR,GAAA,KAAyBw9B,gBAAmBxyB,QAAU0Y,MAAQljB,KAAA,SAAAR,GAAA,GAAuB2jB,KAAQnjB,KAAA,SAAAR,GAAA,GAAuB4jB,MAASpjB,KAAA,SAAAR,GAAA,GAAuBq9B,MAAS78B,KAAA,SAAAR,GAAA,GAAuB6jB,MAASrjB,KAAA,SAAAR,GAAA,KAAyBy9B,iBAAoBzyB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,gBAAAR,GAAA,KAAgC09B,eAAkB1yB,QAAU8d,QAAUtoB,KAAA,SAAAR,GAAA,GAAuB6tB,SAAYrtB,KAAA,SAAAR,GAAA,GAAuB4oB,SAAYpoB,KAAA,OAAAR,GAAA,GAAqB6oB,SAAYroB,KAAA,OAAAR,GAAA,GAAqB+oB,KAAQvoB,KAAA,SAAAR,GAAA,KAAyB29B,kBAAqB3yB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,GAAuB8oB,QAAWtoB,KAAA,SAAAR,GAAA,GAAuB4jB,MAASpjB,KAAA,SAAAR,GAAA,GAAuB6jB,MAASrjB,KAAA,SAAAR,GAAA,GAAuBooB,SAAY5nB,KAAA,OAAAR,GAAA,GAAqBqoB,MAAS7nB,KAAA,SAAAR,GAAA,KAAyB49B,mBAAsB5yB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,kBAAAR,GAAA,KAAkC69B,iBAAoB7yB,QAAUqd,MAAQ7nB,KAAA,SAAAR,GAAA,GAAuB+pB,WAAcvpB,KAAA,OAAAR,GAAA,GAAqB2pB,cAAiBnhB,KAAA,WAAAhI,KAAA,cAAAR,GAAA,KAAgD89B,oBAAuB9yB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,KAAyB+9B,qBAAwB/yB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,oBAAAR,GAAA,KAAoCg+B,mBAAsBhzB,WAAYizB,gBAAmBjzB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,GAAuByN,MAASjN,KAAA,QAAAR,GAAA,KAAwBk+B,iBAAoBlzB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,gBAAAR,GAAA,KAAgCm+B,eAAkBnzB,WAAYozB,iBAAoBpzB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,KAAyBq+B,kBAAqBrzB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,iBAAAR,GAAA,KAAiCs+B,gBAAmBtzB,QAAUuzB,UAAY7N,QAAA,SAAAlwB,KAAA,aAAAR,GAAA,KAAgDw+B,sBAAyBxzB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,KAAyBy+B,uBAA0BzzB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,sBAAAR,GAAA,KAAsC0+B,qBAAwB1zB,QAAU2zB,YAAcn+B,KAAA,SAAAR,GAAA,GAAuB4+B,UAAap+B,KAAA,SAAAR,GAAA,KAAyB6+B,gBAAmB7zB,QAAU+K,SAAWvV,KAAA,SAAAR,GAAA,KAAyB8+B,iBAAoB9zB,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,gBAAAR,GAAA,KAAgC++B,eAAkB/zB,QAAU2e,cAAgBnhB,KAAA,WAAAhI,KAAA,cAAAR,GAAA,KAAgDg/B,aAAgBh0B,QAAUyC,MAAQjN,KAAA,SAAAR,GAAA,KAAyBi/B,cAAiBj0B,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,aAAAR,GAAA,KAA6Bk/B,YAAel0B,QAAUyC,MAAQjN,KAAA,SAAAR,GAAA,KAAyBm/B,YAAen0B,QAAUyC,MAAQjN,KAAA,QAAAR,GAAA,KAAwBo/B,aAAgBp0B,QAAU0C,OAASlN,KAAA,QAAAR,GAAA,GAAsB2lB,QAAWnlB,KAAA,YAAAR,GAAA,KAA4Bq/B,WAAcr0B,QAAUyC,MAAQjN,KAAA,QAAAR,GAAA,KAAwBs/B,gBAAmBt0B,QAAUyC,MAAQjN,KAAA,QAAAR,GAAA,KAAwBgd,YAAe/R,SAAWs0B,aAAexM,YAAA,UAAAE,eAAA,EAAAD,aAAA,QAAAE,gBAAA,UnDk4Vh0I,CACA,CAEF,SAAUv3B,EAAQD,EAASO,GAEjC,YAGAY,QAAOC,eAAepB,EAAS,cAC7B+E,OAAO,GoD34VT,IAAA++B,GAAAvjC,EAAA,GpDg5VAP,GAAQyO,QAAUq1B,EAAU1J,mBAC5Bn6B,EAAOD,QAAUA,EAAiB","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 52);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = __webpack_require__(2);\r\n\r\nvar roots = __webpack_require__(22);\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = __webpack_require__(46);\r\nutil.fetch   = __webpack_require__(47);\r\nutil.path    = __webpack_require__(48);\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = __webpack_require__(24);\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = __webpack_require__(1);\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(32))());\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = __webpack_require__(6),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = __webpack_require__(19);\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = __webpack_require__(37);\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = __webpack_require__(38);\r\n\r\n// float handling accross browsers\r\nutil.float = __webpack_require__(39);\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = __webpack_require__(20);\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = __webpack_require__(40);\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = __webpack_require__(41);\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = __webpack_require__(42);\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = __webpack_require__(1),\r\n    types = __webpack_require__(7),\r\n    util  = __webpack_require__(0);\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Enum     = __webpack_require__(1),\r\n    Field    = __webpack_require__(5),\r\n    util     = __webpack_require__(0);\r\n\r\nvar Type,    // cyclic\r\n    Service; // \"\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\nNamespace._configure = function(Type_, Service_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n};\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar startsWith = exports.startsWith = function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nvar isString = exports.isString = function isString(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'string' || value instanceof String;\n};\n\nvar isFunction = exports.isFunction = function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nvar log = exports.log = function log(level, args) {\n  if (global.console) {\n    var logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nvar backoff = exports.backoff = function backoff(step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = min * Math.pow(2, step + 1);\n\n  if (interval > max) {\n    interval = max;\n  }\n  return Math.floor((1 - jitter) * interval);\n};\n\nvar errorExists = exports.errorExists = function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.4+314e4831\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(3)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Writer;\r\n\r\nvar util      = __webpack_require__(2);\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Reader;\r\n\r\nvar util      = __webpack_require__(2);\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = __webpack_require__(5),\r\n    util  = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Message;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Centrifuge = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _json = __webpack_require__(16);\n\nvar _utils = __webpack_require__(8);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(9);\nvar Promise = __webpack_require__(10);\nvar Subscription = __webpack_require__(18);\n\nvar _errorTimeout = 'timeout';\n\nvar Centrifuge = exports.Centrifuge = function (_EventEmitter) {\n  _inherits(Centrifuge, _EventEmitter);\n\n  function Centrifuge(url, options) {\n    _classCallCheck(this, Centrifuge);\n\n    var _this = _possibleConstructorReturn(this, (Centrifuge.__proto__ || Object.getPrototypeOf(Centrifuge)).call(this));\n\n    _this._methodType = _json.methodTypeJSON;\n    _this._messageType = _json.messageTypeJSON;\n    _this._url = url;\n    _this._sockjs = null;\n    _this._isSockjs = false;\n    _this._binary = false;\n    _this._encoder = null;\n    _this._decoder = null;\n    _this._status = 'disconnected';\n    _this._reconnect = true;\n    _this._reconnecting = false;\n    _this._transport = null;\n    _this._transportName = null;\n    _this._transportClosed = true;\n    _this._messageId = 0;\n    _this._clientID = null;\n    _this._subs = {};\n    _this._lastPublicationUID = {};\n    _this._messages = [];\n    _this._isBatching = false;\n    _this._isAuthBatching = false;\n    _this._authChannels = {};\n    _this._numRefreshFailed = 0;\n    _this._refreshTimeout = null;\n    _this._pingInterval = null;\n    _this._pongTimeout = null;\n    _this._retries = 0;\n    _this._callbacks = {};\n    _this._latency = null;\n    _this._latencyStart = null;\n    _this._credentials = null;\n    _this._config = {\n      debug: false,\n      sockjs: null,\n      retry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      resubscribe: true,\n      ping: true,\n      pingInterval: 30000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: ['websocket', 'xdr-streaming', 'xhr-streaming', 'eventsource', 'iframe-eventsource', 'iframe-htmlfile', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 3000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      authEndpoint: '/centrifuge/auth',\n      authHeaders: {},\n      authParams: {},\n      onAuth: null\n    };\n    _this._configure(options);\n    return _this;\n  }\n\n  _createClass(Centrifuge, [{\n    key: 'setCredentials',\n    value: function setCredentials(credentials) {\n      this._credentials = credentials;\n    }\n  }, {\n    key: '_ajax',\n    value: function _ajax(url, params, headers, data, callback) {\n      var self = this;\n      var query = '';\n\n      self._debug('sending AJAX request to', url);\n\n      var xhr = global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP');\n\n      for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n          if (query.length > 0) {\n            query += '&';\n          }\n          query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n      }\n      if (query.length > 0) {\n        query = '?' + query;\n      }\n      xhr.open('POST', url + query, true);\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      for (var headerName in headers) {\n        if (headers.hasOwnProperty(headerName)) {\n          xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var _data = void 0,\n                parsed = false;\n\n            try {\n              _data = JSON.parse(xhr.responseText);\n              parsed = true;\n            } catch (e) {\n              callback(true, 'JSON returned was invalid, yet status code was 200. Data was: ' + xhr.responseText);\n            }\n            if (parsed) {\n              // prevents double execution.\n              callback(false, _data);\n            }\n          } else {\n            self._log(\"Couldn't get auth info from application\", xhr.status);\n            callback(true, xhr.status);\n          }\n        }\n      };\n\n      setTimeout(function () {\n        xhr.send(JSON.stringify(data));\n      }, 20);\n      return xhr;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      (0, _utils.log)('info', arguments);\n    }\n  }, {\n    key: '_debug',\n    value: function _debug() {\n      if (this._config.debug === true) {\n        (0, _utils.log)('debug', arguments);\n      }\n    }\n  }, {\n    key: '_websocketSupported',\n    value: function _websocketSupported() {\n      return !(typeof WebSocket !== 'function' && (typeof WebSocket === 'undefined' ? 'undefined' : _typeof(WebSocket)) !== 'object');\n    }\n  }, {\n    key: '_setFormat',\n    value: function _setFormat(format) {\n      if (format === 'protobuf') {\n        throw new Error('not implemented by JSON only Centrifuge client');\n      } else {\n        this._encoder = new _json.JsonEncoder();\n        this._decoder = new _json.JsonDecoder();\n      }\n    }\n  }, {\n    key: '_configure',\n    value: function _configure(configuration) {\n      Object.assign(this._config, configuration || {});\n      this._debug('centrifuge config', this._config);\n\n      if (!this._url) {\n        throw new Error('url required');\n      }\n\n      if (this._url.indexOf('format=protobuf') > -1) {\n        this._setFormat('protobuf');\n      } else {\n        this._setFormat('json');\n      }\n\n      if (this._credentials !== null) {\n        if (!this._credentials.user && this._credentials.user !== '') {\n          this._debug('user not set in credentials');\n        }\n\n        if (!this._credentials.exp) {\n          this._debug('exp not set in credentials');\n        }\n\n        if (!this._credentials.info) {\n          this._debug('info not set in credentials');\n          this._credentials.info = '';\n        }\n\n        if (!this._credentials.sign) {\n          this._debug('sign not set in credentials');\n        }\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'http')) {\n        this._debug('client will try to connect to SockJS endpoint');\n        if (this._config.sockjs !== null) {\n          this._debug('SockJS explicitly provided in options');\n          this._sockjs = this._config.sockjs;\n        } else {\n          if (typeof global.SockJS === 'undefined') {\n            throw new Error('SockJS not found, use ws:// in url or include SockJS');\n          }\n          this._debug('use globally defined SockJS');\n          this._sockjs = global.SockJS;\n        }\n      } else {\n        this._debug('client will connect to websocket endpoint');\n      }\n    }\n  }, {\n    key: '_setStatus',\n    value: function _setStatus(newStatus) {\n      if (this._status !== newStatus) {\n        this._debug('Status', this._status, '->', newStatus);\n        this._status = newStatus;\n      }\n    }\n  }, {\n    key: '_isDisconnected',\n    value: function _isDisconnected() {\n      return this._status === 'disconnected';\n    }\n  }, {\n    key: '_isConnecting',\n    value: function _isConnecting() {\n      return this._status === 'connecting';\n    }\n  }, {\n    key: '_isConnected',\n    value: function _isConnected() {\n      return this._status === 'connected';\n    }\n  }, {\n    key: '_nextMessageId',\n    value: function _nextMessageId() {\n      return ++this._messageId;\n    }\n  }, {\n    key: '_resetRetry',\n    value: function _resetRetry() {\n      this._debug('reset retries count to 0');\n      this._retries = 0;\n    }\n  }, {\n    key: '_getRetryInterval',\n    value: function _getRetryInterval() {\n      var interval = (0, _utils.backoff)(this._retries, this._config.retry, this._config.maxRetry);\n\n      this._retries += 1;\n      return interval;\n    }\n  }, {\n    key: '_clearConnectedState',\n    value: function _clearConnectedState(reconnect) {\n      this._clientID = null;\n\n      // fire errbacks of registered outgoing calls.\n      for (var uid in this._callbacks) {\n        if (this._callbacks.hasOwnProperty(uid)) {\n          var callbacks = this._callbacks[uid];\n          var errback = callbacks.errback;\n          if (!errback) {\n            continue;\n          }\n          errback(this._createErrorObject('disconnected'));\n        }\n      }\n      this._callbacks = {};\n\n      // fire unsubscribe events\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n\n          if (reconnect) {\n            if (sub._isSuccess()) {\n              sub._triggerUnsubscribe();\n            }\n            sub._setSubscribing();\n          } else {\n            sub._setUnsubscribed();\n          }\n        }\n      }\n\n      if (!this._config.resubscribe || !this._reconnect) {\n        // completely clear connected state\n        this._subs = {};\n      }\n    }\n  }, {\n    key: '_send',\n    value: function _send(commands) {\n      if (!commands.length) {\n        return;\n      }\n      this._transport.send(this._encoder.encodeCommands(commands));\n    }\n  }, {\n    key: '_setupTransport',\n    value: function _setupTransport() {\n      var self = this;\n      this._isSockjs = false;\n\n      // detect transport to use - SockJS or Websocket\n      if (this._sockjs !== null) {\n        var sockjsOptions = {\n          transports: this._config.sockjsTransports\n        };\n\n        if (this._config.sockjsServer !== null) {\n          sockjsOptions.server = this._config.sockjsServer;\n        }\n        this._isSockjs = true;\n        this._transport = new this._sockjs(this._url, null, sockjsOptions);\n      } else {\n        if (!this._websocketSupported()) {\n          this._debug('No Websocket support and no SockJS configured, can not connect');\n          return;\n        }\n        this._transport = new WebSocket(this._url);\n        if (this._binary === true) {\n          this._transport.binaryType = 'arraybuffer';\n        }\n      }\n\n      this._transport.onopen = function () {\n        self._transportClosed = false;\n        self._reconnecting = false;\n        if (self._isSockjs) {\n          self._transportName = 'sockjs-' + self._transport.transport;\n          self._transport.onheartbeat = function () {\n            self._restartPing();\n          };\n        } else {\n          self._transportName = 'websocket';\n        }\n\n        self._resetRetry();\n\n        var msg = {\n          method: self._methodType.CONNECT\n        };\n\n        if (self._credentials) {\n          msg.params = self._credentials;\n        }\n\n        self._latencyStart = new Date();\n        self._call(msg).then(function (result) {\n          self._connectResponse(self._decoder.decodeCommandResult(self._methodType.CONNECT, result));\n        }, function () {\n          self._disconnect('connect error', true);\n        });\n      };\n\n      this._transport.onerror = function (error) {\n        self._debug('transport level error', error);\n      };\n\n      this._transport.onclose = function (closeEvent) {\n        self._transportClosed = true;\n        var reason = 'connection closed';\n        var needReconnect = true;\n\n        if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n          try {\n            var advice = JSON.parse(closeEvent.reason);\n\n            self._debug('reason is an advice object', advice);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            self._debug('reason is a plain string', reason);\n            needReconnect = reason !== 'disconnect';\n          }\n        }\n\n        // onTransportClose callback should be executed every time transport was closed.\n        // This can be helpful to catch failed connection events (because our disconnect\n        // event only called once and every future attempts to connect do not fire disconnect\n        // event again).\n        if (self._config.onTransportClose !== null) {\n          self._config.onTransportClose({\n            event: closeEvent,\n            reason: reason,\n            reconnect: needReconnect\n          });\n        }\n\n        self._disconnect(reason, needReconnect);\n\n        if (self._reconnect === true) {\n          self._reconnecting = true;\n          var interval = self._getRetryInterval();\n\n          self._debug('reconnect after ' + interval + ' milliseconds');\n          setTimeout(function () {\n            if (self._reconnect === true) {\n              self._connect.call(self);\n            }\n          }, interval);\n        }\n      };\n\n      this._transport.onmessage = function (event) {\n        var replies = self._decoder.decodeReplies(event.data);\n        for (var i in replies) {\n          if (replies.hasOwnProperty(i)) {\n            self._debug('Received reply', replies[i]);\n            self._dispatchReply(replies[i]);\n          }\n        }\n        self._restartPing();\n      };\n    }\n  }, {\n    key: 'rpc',\n    value: function rpc(data) {\n      var self = this;\n      var msg = {\n        method: self._methodType.RPC,\n        params: {\n          data: data\n        }\n      };\n      var promise = this._call(msg);\n\n      return new Promise(function (resolve, reject) {\n        promise.then(function (result) {\n          resolve(self._decoder.decodeCommandResult(self._methodType.RPC, result));\n        }, function (error) {\n          reject(error);\n        });\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(data) {\n      var msg = {\n        method: self._methodType.MESSAGE,\n        params: {\n          data: data\n        }\n      };\n\n      return this._callAsync(msg);\n    }\n  }, {\n    key: '_callAsync',\n    value: function _callAsync(msg) {\n      this._addMessage(msg, true);\n    }\n  }, {\n    key: '_call',\n    value: function _call(msg) {\n      var self = this;\n\n      return new Promise(function (resolve, reject) {\n        var id = self._addMessage(msg);\n        self._registerCall(id, resolve, reject);\n      });\n    }\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      if (this.isConnected()) {\n        this._debug('connect called when already connected');\n        return;\n      }\n      if (this._status === 'connecting') {\n        return;\n      }\n\n      this._debug('start connecting');\n      this._setStatus('connecting');\n      this._clientID = null;\n      this._reconnect = true;\n      this._setupTransport();\n    }\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(reason, shouldReconnect) {\n\n      if (this._isDisconnected()) {\n        return;\n      }\n\n      this._debug('disconnected:', reason, shouldReconnect);\n\n      var reconnect = shouldReconnect || false;\n\n      if (reconnect === false) {\n        this._reconnect = false;\n      }\n\n      this._clearConnectedState(reconnect);\n\n      if (!this._isDisconnected()) {\n        this._setStatus('disconnected');\n        if (this._refreshTimeout) {\n          clearTimeout(this._refreshTimeout);\n        }\n        if (this._reconnecting === false) {\n          this.emit('disconnect', {\n            reason: reason,\n            reconnect: reconnect\n          });\n        }\n      }\n\n      if (!this._transportClosed) {\n        this._transport.close();\n      }\n    }\n  }, {\n    key: '_refreshFailed',\n    value: function _refreshFailed() {\n      this._numRefreshFailed = 0;\n      if (!this._isDisconnected()) {\n        this._disconnect('refresh failed', false);\n      }\n      if (this._config.onRefreshFailed !== null) {\n        this._config.onRefreshFailed();\n      }\n    }\n  }, {\n    key: '_refresh',\n    value: function _refresh() {\n      // ask web app for connection parameters - user ID,\n      // timestamp, info and token\n      var self = this;\n\n      this._debug('refresh credentials');\n\n      if (self._config.refreshAttempts === 0) {\n        this._debug('refresh attempts set to 0, do not send refresh request at all');\n        self._refreshFailed();\n        return;\n      }\n\n      if (self._refreshTimeout !== null) {\n        clearTimeout(self._refreshTimeout);\n      }\n\n      var cb = function cb(error, data) {\n        if (error === true) {\n          // We don't perform any connection status related actions here as we are\n          // relying on Centrifugo that must close connection eventually.\n          self._debug('error getting connection credentials from refresh endpoint', data);\n          self._numRefreshFailed++;\n          if (self._refreshTimeout) {\n            clearTimeout(self._refreshTimeout);\n          }\n          if (self._config.refreshAttempts !== null && self._numRefreshFailed >= self._config.refreshAttempts) {\n            self._refreshFailed();\n            return;\n          }\n          self._refreshTimeout = setTimeout(function () {\n            self._refresh.call(self);\n          }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n          return;\n        }\n        self._numRefreshFailed = 0;\n        if (self._credentials === null) {\n          return;\n        }\n        self._credentials.user = data.user;\n        self._credentials.exp = data.exp;\n        if ('info' in data) {\n          self._credentials.info = data.info;\n        }\n        self._credentials.sign = data.sign;\n        if (self._isDisconnected()) {\n          self._debug('credentials refreshed, connect from scratch');\n          self._connect();\n        } else {\n          self._debug('send refreshed credentials');\n\n          var msg = {\n            method: self._methodType.REFRESH,\n            params: self._credentials\n          };\n\n          self._call(msg).then(function (result) {\n            self._refreshResponse(self._decoder.decodeCommandResult(self._methodType.REFRESH, result));\n          }, function () {\n            self._disconnect('refresh error', true);\n          });\n        }\n      };\n\n      if (this._config.onRefresh !== null) {\n        var context = {};\n        this._config.onRefresh(context, cb);\n      } else {\n        this._ajax(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n      }\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(sub) {\n\n      var channel = sub.channel;\n\n      if (!(channel in this._subs)) {\n        this._subs[channel] = sub;\n      }\n\n      if (!this.isConnected()) {\n        // subscribe will be called later\n        sub._setNew();\n        return;\n      }\n\n      sub._setSubscribing();\n\n      var msg = {\n        method: this._methodType.SUBSCRIBE,\n        params: {\n          channel: channel\n        }\n      };\n\n      // If channel name does not start with privateChannelPrefix - then we\n      // can just send subscription message to Centrifuge. If channel name\n      // starts with privateChannelPrefix - then this is a private channel\n      // and we should ask web application backend for permission first.\n      if ((0, _utils.startsWith)(channel, this._config.privateChannelPrefix)) {\n        // private channel\n        if (this._isAuthBatching) {\n          this._authChannels[channel] = true;\n        } else {\n          this.startAuthBatching();\n          this._subscribe(sub);\n          this.stopAuthBatching();\n        }\n      } else {\n        var recover = this._recover(channel);\n\n        if (recover === true) {\n          msg.params.recover = true;\n          msg.params.last = this._getLastID(channel);\n        }\n        var _self = this;\n\n        this._call(msg).then(function (result) {\n          _self._subscribeResponse(channel, _self._decoder.decodeCommandResult(_self._methodType.SUBSCRIBE, result));\n        }, function (err) {\n          _self._subscribeError(err);\n        });\n      }\n    }\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe(sub) {\n      if (this.isConnected()) {\n        // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n        this._addMessage({\n          method: self._methodType.UNSUBSCRIBE,\n          params: {\n            channel: sub.channel\n          }\n        });\n      }\n    }\n  }, {\n    key: 'getSub',\n    value: function getSub(channel) {\n      return this._getSub(channel);\n    }\n  }, {\n    key: '_getSub',\n    value: function _getSub(channel) {\n      var sub = this._subs[channel];\n      if (!sub) {\n        return null;\n      }\n      return sub;\n    }\n  }, {\n    key: '_connectResponse',\n    value: function _connectResponse(result) {\n      if (this.isConnected()) {\n        return;\n      }\n\n      if (this._latencyStart !== null) {\n        this._latency = new Date().getTime() - this._latencyStart.getTime();\n        this._latencyStart = null;\n      }\n\n      if (result.expires) {\n        var isExpired = result.expired;\n\n        if (isExpired) {\n          this._reconnecting = true;\n          this._disconnect('expired', true);\n          this._refresh();\n          return;\n        }\n      }\n      this._clientID = result.client;\n      this._setStatus('connected');\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n\n      var self = this;\n\n      if (result.expires) {\n        this._refreshTimeout = setTimeout(function () {\n          self._refresh.call(self);\n        }, result.ttl * 1000);\n      }\n\n      if (this._config.resubscribe) {\n        this.startBatching();\n        this.startAuthBatching();\n        for (var channel in this._subs) {\n          if (this._subs.hasOwnProperty(channel)) {\n            var sub = this._subs[channel];\n            if (sub._shouldResubscribe()) {\n              this._subscribe(sub);\n            }\n          }\n        }\n        this.stopAuthBatching();\n        this.stopBatching(true);\n      }\n\n      this._restartPing();\n      this.emit('connect', {\n        client: result.client,\n        transport: this._transportName,\n        latency: this._latency\n      });\n    }\n  }, {\n    key: '_stopPing',\n    value: function _stopPing() {\n      if (this._pongTimeout !== null) {\n        clearTimeout(this._pongTimeout);\n      }\n      if (this._pingInterval !== null) {\n        clearInterval(this._pingInterval);\n      }\n    }\n  }, {\n    key: '_startPing',\n    value: function _startPing() {\n      if (this._config.ping !== true || this._config.pingInterval <= 0) {\n        return;\n      }\n      if (!this.isConnected()) {\n        return;\n      }\n\n      var self = this;\n\n      this._pingInterval = setInterval(function () {\n        if (!self.isConnected()) {\n          self._stopPing();\n          return;\n        }\n        self.ping();\n        self._pongTimeout = setTimeout(function () {\n          self._disconnect('no ping', true);\n        }, self._config.pongWaitTimeout);\n      }, this._config.pingInterval);\n    }\n  }, {\n    key: '_restartPing',\n    value: function _restartPing() {\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_subscribeError',\n    value: function _subscribeError(channel, error) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n      if (error.code === 0 && error.message === _errorTimeout) {\n        // client side timeout.\n        this._disconnect('timeout', true);\n        return;\n      }\n      sub._setSubscribeError(error);\n    }\n  }, {\n    key: '_subscribeResponse',\n    value: function _subscribeResponse(channel, result) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n\n      var publications = result.publications;\n\n      if (publications && publications.length > 0) {\n        // handle missed publications.\n        publications = publications.reverse();\n        for (var i in publications) {\n          if (publications.hasOwnProperty(i)) {\n            this._handlePublication({\n              body: publications[i]\n            });\n          }\n        }\n      } else {\n        if ('last' in result) {\n          // no missed messages found so set last message id from result.\n          this._lastPublicationUID[channel] = result.last;\n        }\n      }\n\n      var recovered = false;\n\n      if ('recovered' in result) {\n        recovered = result.recovered;\n      }\n      sub._setSubscribeSuccess(recovered);\n    }\n  }, {\n    key: '_handleCommandReply',\n    value: function _handleCommandReply(message) {\n      var id = message.id;\n      var result = message.result;\n\n      if (!(id in this._callbacks)) {\n        return;\n      }\n      var callbacks = this._callbacks[id];\n      delete this._callbacks[id];\n\n      if (!(0, _utils.errorExists)(message)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n          return;\n        }\n        callback(result);\n      } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n          return;\n        }\n        errback(message.error);\n      }\n    }\n  }, {\n    key: '_handleJoin',\n    value: function _handleJoin(channel, data) {\n      var join = this._decoder.decodeMessageData(this._messageType.JOIN, data);\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('join', join);\n    }\n  }, {\n    key: '_handleLeave',\n    value: function _handleLeave(channel, data) {\n      var leave = this._decoder.decodeMessageData(this._messageType.LEAVE, data);\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('leave', leave);\n    }\n  }, {\n    key: '_handleUnsub',\n    value: function _handleUnsub(channel) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.unsubscribe();\n    }\n  }, {\n    key: '_handlePublication',\n    value: function _handlePublication(channel, data) {\n      var publication = this._decoder.decodeMessageData(this._messageType.PUBLICATION, data);\n      // keep last uid received from channel.\n      this._lastPublicationUID[channel] = publication.uid;\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('message', publication);\n    }\n  }, {\n    key: '_refreshResponse',\n    value: function _refreshResponse(result) {\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n      if (result.expires) {\n        var _self2 = this;\n        var expired = result.expired;\n\n        if (expired) {\n          _self2._refreshTimeout = setTimeout(function () {\n            _self2._refresh.call(_self2);\n          }, _self2._config.refreshInterval + Math.round(Math.random() * 1000));\n          return;\n        }\n        this._clientID = result.client;\n        _self2._refreshTimeout = setTimeout(function () {\n          _self2._refresh.call(_self2);\n        }, result.ttl * 1000);\n      }\n    }\n  }, {\n    key: '_handleAsyncReply',\n    value: function _handleAsyncReply(reply) {\n      var result = this._decoder.decodeMessage(reply.result);\n      var type = 0;\n      if ('type' in result) {\n        type = result['type'];\n      }\n      var channel = result.channel;\n\n      if (type === 0) {\n        this._handlePublication(channel, result.data);\n      } else if (type === 1) {\n        this._handleJoin(channel, result.data);\n      } else if (type === 2) {\n        this._handleLeave(channel, result.data);\n      } else if (type === 3) {\n        this._handleUnsub(channel);\n      }\n    }\n  }, {\n    key: '_dispatchReply',\n    value: function _dispatchReply(reply) {\n      if (reply === undefined || reply === null) {\n        this._debug('dispatch: got undefined or null reply');\n        return;\n      }\n\n      var id = reply.id;\n\n      if (id && id > 0) {\n        this._handleCommandReply(reply);\n      } else {\n        this._handleAsyncReply(reply);\n      }\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var messages = this._messages.slice(0);\n      this._messages = [];\n      this._send(messages);\n    }\n  }, {\n    key: '_ping',\n    value: function _ping() {\n      this._addMessage({\n        method: this._methodType.PING\n      });\n    }\n  }, {\n    key: '_recover',\n    value: function _recover(channel) {\n      return channel in this._lastPublicationUID;\n    }\n  }, {\n    key: '_getLastID',\n    value: function _getLastID(channel) {\n      var lastUID = this._lastPublicationUID[channel];\n\n      if (lastUID) {\n        this._debug('last uid found and sent for channel', channel);\n        return lastUID;\n      }\n      this._debug('no last uid found for channel', channel);\n      return '';\n    }\n  }, {\n    key: '_createErrorObject',\n    value: function _createErrorObject(message, code) {\n      var errObject = {\n        error: {\n          message: message,\n          code: code || 0\n        }\n      };\n\n      return errObject;\n    }\n  }, {\n    key: '_registerCall',\n    value: function _registerCall(id, callback, errback) {\n      var self = this;\n\n      this._callbacks[id] = {\n        callback: callback,\n        errback: errback\n      };\n      setTimeout(function () {\n        delete self._callbacks[id];\n        if ((0, _utils.isFunction)(errback)) {\n          errback(self._createErrorObject(_errorTimeout));\n        }\n      }, this._config.timeout);\n    }\n  }, {\n    key: '_addMessage',\n    value: function _addMessage(message, async) {\n      var id = void 0;\n      if (!async) {\n        id = this._nextMessageId();\n        message.id = id;\n      }\n      if (this._isBatching === true) {\n        this._messages.push(message);\n      } else {\n        this._send([message]);\n      }\n      if (!async) {\n        return id;\n      }\n      return 0;\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return this._isConnected();\n    }\n  }, {\n    key: 'connect',\n    value: function connect() {\n      this._connect();\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._disconnect('client', false);\n    }\n  }, {\n    key: 'ping',\n    value: function ping() {\n      return this._ping();\n    }\n  }, {\n    key: 'startBatching',\n    value: function startBatching() {\n      // start collecting messages without sending them to Centrifuge until flush\n      // method called\n      this._isBatching = true;\n    }\n  }, {\n    key: 'stopBatching',\n    value: function stopBatching(flush) {\n      // stop collecting messages\n      flush = flush || false;\n      this._isBatching = false;\n      if (flush === true) {\n        this.flush();\n      }\n    }\n  }, {\n    key: 'flush',\n    value: function flush() {\n      // send batched messages to Centrifuge\n      this._flush();\n    }\n  }, {\n    key: 'startAuthBatching',\n    value: function startAuthBatching() {\n      // start collecting private channels to create bulk authentication\n      // request to authEndpoint when stopAuthBatching will be called\n      this._isAuthBatching = true;\n    }\n  }, {\n    key: 'stopAuthBatching',\n    value: function stopAuthBatching() {\n      var i, channel;\n\n      // create request to authEndpoint with collected private channels\n      // to ask if this client can subscribe on each channel\n      this._isAuthBatching = false;\n      var authChannels = this._authChannels;\n\n      this._authChannels = {};\n      var channels = [];\n\n      for (channel in authChannels) {\n        if (authChannels.hasOwnProperty(channel)) {\n          var sub = this._getSub(channel);\n\n          if (!sub) {\n            continue;\n          }\n          channels.push(channel);\n        }\n      }\n\n      if (channels.length === 0) {\n        return;\n      }\n\n      var data = {\n        client: this._clientID,\n        channels: channels\n      };\n\n      var self = this;\n\n      var cb = function cb(error, data) {\n        if (error === true) {\n          self._debug('authorization request failed');\n          for (i in channels) {\n            if (channels.hasOwnProperty(i)) {\n              channel = channels[i];\n              self._subscribeResponse({\n                error: 'authorization request failed',\n                body: {\n                  channel: channel\n                }\n              });\n            }\n          }\n          return;\n        }\n\n        // try to send all subscriptions in one request.\n        var batch = false;\n\n        if (!self._isBatching) {\n          self.startBatching();\n          batch = true;\n        }\n\n        for (i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            channel = channels[i];\n            var channelResponse = data[channel];\n\n            if (!channelResponse) {\n              // subscription:error\n              self._subscribeResponse({\n                error: 'channel not found in authorization response',\n                body: {\n                  channel: channel\n                }\n              });\n              continue;\n            }\n            if (!channelResponse.status || channelResponse.status === 200) {\n              var msg = {\n                method: self._methodType.SUBSCRIBE,\n                params: {\n                  channel: channel,\n                  client: self._clientID,\n                  info: channelResponse.info,\n                  sign: channelResponse.sign\n                }\n              };\n              var recover = self._recover(channel);\n\n              if (recover === true) {\n                msg.params.recover = true;\n                msg.params.last = self._getLastID(channel);\n              }\n              self._call(msg).then(function (result) {\n                self._subscribeResponse(channel, self._decoder.decodeCommandResult(self._methodType.SUBSCRIBE, result));\n              }, function (err) {\n                self._subscribeError(channel, err);\n              });\n            } else {\n              self._subscribeResponse({\n                error: channelResponse.status,\n                body: {\n                  channel: channel\n                }\n              });\n            }\n          }\n        }\n\n        if (batch) {\n          self.stopBatching(true);\n        }\n      };\n\n      if (this._config.onAuth !== null) {\n        this._config.onAuth({\n          data: data\n        }, cb);\n      } else {\n        this._ajax(this._config.authEndpoint, this._config.authParams, this._config.authHeaders, data, cb);\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(channel, events) {\n      if (arguments.length < 1) {\n        throw new Error('Illegal arguments number: required 1, got ' + arguments.length);\n      }\n      if (!(0, _utils.isString)(channel)) {\n        throw new Error('Illegal argument type: channel must be a string');\n      }\n      if (!this._config.resubscribe && !this.isConnected()) {\n        throw new Error('Can not only subscribe in connected state when resubscribe option is off');\n      }\n\n      var currentSub = this._getSub(channel);\n\n      if (currentSub !== null) {\n        currentSub._setEvents(events);\n        if (currentSub._isUnsubscribed()) {\n          currentSub.subscribe();\n        }\n        return currentSub;\n      }\n      var sub = new Subscription(this, channel, events);\n      this._subs[channel] = sub;\n      sub.subscribe();\n      return sub;\n    }\n  }]);\n\n  return Centrifuge;\n}(EventEmitter);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar methodTypeJSON = exports.methodTypeJSON = {\n  CONNECT: 'connect',\n  REFRESH: 'refresh',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  PUBLISH: 'publish',\n  PRESENCE: 'presence',\n  PRESENCE_STATS: 'presence_stats',\n  HISTORY: 'history',\n  PING: 'ping',\n  RPC: 'rpc',\n  MESSAGE: 'message'\n};\n\nvar messageTypeJSON = exports.messageTypeJSON = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3\n};\n\nvar JsonEncoder = exports.JsonEncoder = function () {\n  function JsonEncoder() {\n    _classCallCheck(this, JsonEncoder);\n  }\n\n  _createClass(JsonEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var encodedCommands = [];\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          encodedCommands.push(JSON.stringify(commands[i]));\n        }\n      }\n      return encodedCommands.join('\\n');\n    }\n  }]);\n\n  return JsonEncoder;\n}();\n\nvar JsonDecoder = exports.JsonDecoder = function () {\n  function JsonDecoder() {\n    _classCallCheck(this, JsonDecoder);\n  }\n\n  _createClass(JsonDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var encodedReplies = data.split('\\n');\n      for (var i in encodedReplies) {\n        if (encodedReplies.hasOwnProperty(i)) {\n          if (!encodedReplies[i]) {\n            continue;\n          }\n          var reply = JSON.parse(encodedReplies[i]);\n          replies.push(reply);\n        }\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      return data;\n    }\n  }, {\n    key: 'decodeMessage',\n    value: function decodeMessage(data) {\n      return data;\n    }\n  }, {\n    key: 'decodeMessageData',\n    value: function decodeMessageData(messageType, data) {\n      return data;\n    }\n  }]);\n\n  return JsonDecoder;\n}();\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(8);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(9);\nvar Promise = __webpack_require__(10);\n\nvar _STATE_NEW = 0;\nvar _STATE_SUBSCRIBING = 1;\nvar _STATE_SUCCESS = 2;\nvar _STATE_ERROR = 3;\nvar _STATE_UNSUBSCRIBED = 4;\n\nvar Subscription = function (_EventEmitter) {\n  _inherits(Subscription, _EventEmitter);\n\n  function Subscription(centrifuge, channel, events) {\n    _classCallCheck(this, Subscription);\n\n    var _this = _possibleConstructorReturn(this, (Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call(this));\n\n    _this.channel = channel;\n    _this._centrifuge = centrifuge;\n    _this._status = _STATE_NEW;\n    _this._error = null;\n    _this._isResubscribe = false;\n    _this._recovered = false;\n    _this._ready = false;\n    _this._promise = null;\n    _this._noResubscribe = false;\n    _this._setEvents(events);\n    _this._initializePromise();\n    return _this;\n  }\n\n  _createClass(Subscription, [{\n    key: '_initializePromise',\n    value: function _initializePromise() {\n      // this helps us to wait until subscription will successfully\n      // subscribe and call actions such as presence, history etc in\n      // synchronous way.\n      var self = this;\n\n      this._ready = false;\n\n      this._promise = new Promise(function (resolve, reject) {\n        self._resolve = function (value) {\n          self._ready = true;\n          resolve(value);\n        };\n        self._reject = function (err) {\n          self._ready = true;\n          reject(err);\n        };\n      });\n    }\n  }, {\n    key: '_setEvents',\n    value: function _setEvents(events) {\n      if (!events) {\n        return;\n      }\n      if ((0, _utils.isFunction)(events)) {\n        // events is just a function to handle publication received from channel.\n        this.on('message', events);\n      } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n        var knownEvents = ['message', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n        for (var i = 0, l = knownEvents.length; i < l; i++) {\n          var ev = knownEvents[i];\n          if (ev in events) {\n            this.on(ev, events[ev]);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_isNew',\n    value: function _isNew() {\n      return this._status === _STATE_NEW;\n    }\n  }, {\n    key: '_isUnsubscribed',\n    value: function _isUnsubscribed() {\n      return this._status === _STATE_UNSUBSCRIBED;\n    }\n  }, {\n    key: '_isSubscribing',\n    value: function _isSubscribing() {\n      return this._status === _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_isReady',\n    value: function _isReady() {\n      return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_isSuccess',\n    value: function _isSuccess() {\n      return this._status === _STATE_SUCCESS;\n    }\n  }, {\n    key: '_isError',\n    value: function _isError() {\n      return this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_setNew',\n    value: function _setNew() {\n      this._status = _STATE_NEW;\n    }\n  }, {\n    key: '_setSubscribing',\n    value: function _setSubscribing() {\n      if (this._ready === true) {\n        // new promise for this subscription\n        this._initializePromise();\n        this._isResubscribe = true;\n      }\n      this._status = _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_setSubscribeSuccess',\n    value: function _setSubscribeSuccess(recovered) {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._recovered = recovered;\n      this._status = _STATE_SUCCESS;\n      var successContext = this._getSubscribeSuccessContext(recovered);\n\n      this.emit('subscribe', successContext);\n      this._resolve(successContext);\n    }\n  }, {\n    key: '_setSubscribeError',\n    value: function _setSubscribeError(err) {\n      if (this._status === _STATE_ERROR) {\n        return;\n      }\n      this._status = _STATE_ERROR;\n      this._error = err;\n      var errContext = this._getSubscribeErrorContext();\n\n      this.emit('error', errContext);\n      this._reject(errContext);\n    }\n  }, {\n    key: '_triggerUnsubscribe',\n    value: function _triggerUnsubscribe() {\n      this.emit('unsubscribe', {\n        channel: this.channel\n      });\n    }\n  }, {\n    key: '_setUnsubscribed',\n    value: function _setUnsubscribed(noResubscribe) {\n      if (this._status === _STATE_UNSUBSCRIBED) {\n        return;\n      }\n      this._status = _STATE_UNSUBSCRIBED;\n      if (noResubscribe === true) {\n        this._noResubscribe = true;\n      }\n      this._triggerUnsubscribe();\n    }\n  }, {\n    key: '_shouldResubscribe',\n    value: function _shouldResubscribe() {\n      return !this._noResubscribe;\n    }\n  }, {\n    key: '_getSubscribeSuccessContext',\n    value: function _getSubscribeSuccessContext() {\n      return {\n        channel: this.channel,\n        isResubscribe: this._isResubscribe,\n        recovered: this._recovered\n      };\n    }\n  }, {\n    key: '_getSubscribeErrorContext',\n    value: function _getSubscribeErrorContext() {\n      var subscribeErrorContext = this._error;\n      subscribeErrorContext.channel = this.channel;\n      subscribeErrorContext.isResubscribe = this._isResubscribe;\n      return subscribeErrorContext;\n    }\n  }, {\n    key: 'ready',\n    value: function ready(callback, errback) {\n      if (this._ready) {\n        if (this._isSuccess()) {\n          callback(this._getSubscribeSuccessContext());\n        } else {\n          errback(this._getSubscribeErrorContext());\n        }\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._centrifuge._subscribe(this);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this._setUnsubscribed(true);\n      this._centrifuge._unsubscribe(this);\n    }\n  }, {\n    key: '_methodCall',\n    value: function _methodCall(message, type) {\n      var self = this;\n      return new Promise(function (resolve, reject) {\n        if (self._isUnsubscribed()) {\n          reject(self._centrifuge._createErrorObject('subscription unsubscribed'));\n          return;\n        }\n        self._promise.then(function () {\n          if (!self._centrifuge.isConnected()) {\n            reject(self._centrifuge._createErrorObject('disconnected'));\n            return;\n          }\n          self._centrifuge._call(message).then(function (result) {\n            resolve(self._centrifuge._decoder.decodeCommandResult(type, result));\n          }, function (err) {\n            reject(err);\n          });\n        }, function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'publish',\n    value: function publish(data) {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PUBLISH,\n        params: {\n          channel: self.channel,\n          data: data\n        }\n      }, this._centrifuge._methodType.PUBLISH);\n    }\n  }, {\n    key: 'presence',\n    value: function presence() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE,\n        params: {\n          channel: self.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE);\n    }\n  }, {\n    key: 'presenceStats',\n    value: function presenceStats() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE_STATS,\n        params: {\n          channel: self.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE_STATS);\n    }\n  }, {\n    key: 'history',\n    value: function history() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.HISTORY,\n        params: {\n          channel: self.channel\n        }\n      }, this._centrifuge._methodType.HISTORY);\n    }\n  }]);\n\n  return Subscription;\n}(EventEmitter);\n\nexports.default = Subscription;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = __webpack_require__(45);\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = __webpack_require__(1),\r\n    types    = __webpack_require__(7),\r\n    util     = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(6);\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = __webpack_require__(1),\r\n    OneOf     = __webpack_require__(13),\r\n    Field     = __webpack_require__(5),\r\n    MapField  = __webpack_require__(25),\r\n    Service   = __webpack_require__(26),\r\n    Message   = __webpack_require__(14),\r\n    Reader    = __webpack_require__(12),\r\n    Writer    = __webpack_require__(11),\r\n    util      = __webpack_require__(0),\r\n    encoder   = __webpack_require__(23),\r\n    decoder   = __webpack_require__(28),\r\n    verifier  = __webpack_require__(29),\r\n    converter = __webpack_require__(30),\r\n    wrappers  = __webpack_require__(31);\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = __webpack_require__(5);\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = __webpack_require__(7),\r\n    util    = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(6);\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = __webpack_require__(27),\r\n    util   = __webpack_require__(0),\r\n    rpc    = __webpack_require__(21);\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = __webpack_require__(1),\r\n    types   = __webpack_require__(7),\r\n    util    = __webpack_require__(0);\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = __webpack_require__(1),\r\n    util      = __webpack_require__(0);\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = __webpack_require__(1),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) gen\r\n        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");\r\n            else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = __webpack_require__(14);\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(6);\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = __webpack_require__(5),\r\n    Enum    = __webpack_require__(1),\r\n    OneOf   = __webpack_require__(13),\r\n    util    = __webpack_require__(0);\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type = Type_;\r\n    parse = parse_;\r\n    common = common_;\r\n};\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CentrifugeProtobuf = exports.ProtobufDecoder = exports.JsonDecoder = exports.ProtobufEncoder = exports.JsonEncoder = exports.messageTypeProtobuf = exports.methodTypeProtobuf = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _centrifuge = __webpack_require__(15);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar protobuf = __webpack_require__(34);\nvar proto = protobuf.Root.fromJSON(__webpack_require__(49));\n\nvar methodValues = proto.lookupEnum('MethodType').values;\n\nvar methodTypeProtobuf = exports.methodTypeProtobuf = {\n  CONNECT: methodValues.CONNECT,\n  REFRESH: methodValues.REFRESH,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  MESSAGE: methodValues.MESSAGE\n};\n\nvar methodSchema = {\n  CONNECT: [proto.lookupType('proto.ConnectRequest'), proto.lookupType('proto.ConnectResult')],\n  REFRESH: [proto.lookupType('proto.RefreshRequest'), proto.lookupType('proto.RefreshResult')],\n  SUBSCRIBE: [proto.lookupType('proto.SubscribeRequest'), proto.lookupType('proto.SubscribeResult')],\n  UNSUBSCRIBE: [proto.lookupType('proto.UnsubscribeRequest'), proto.lookupType('proto.UnsubscribeResult')],\n  PUBLISH: [proto.lookupType('proto.PublishRequest'), proto.lookupType('proto.PublishResult')],\n  PRESENCE: [proto.lookupType('proto.PresenceRequest'), proto.lookupType('proto.PresenceResult')],\n  PRESENCE_STATS: [proto.lookupType('proto.PresenceStatsRequest'), proto.lookupType('proto.PresenceStatsResult')],\n  HISTORY: [proto.lookupType('proto.HistoryRequest'), proto.lookupType('proto.HistoryResult')],\n  PING: [proto.lookupType('proto.PingRequest'), proto.lookupType('proto.PingResult')],\n  RPC: [proto.lookupType('proto.RPCRequest'), proto.lookupType('proto.RPCResult')],\n  MESSAGE: [proto.lookupType('proto.MessageRequest'), null]\n};\n\nvar messageTypeProtobuf = exports.messageTypeProtobuf = {\n  PUBLICATION: proto.lookupEnum('MessageType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('MessageType').values.JOIN,\n  LEAVE: proto.lookupEnum('MessageType').values.LEAVE,\n  UNSUB: proto.lookupEnum('MessageType').values.UNSUB\n};\n\nvar MessageSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub')\n};\n\nvar Message = proto.lookupType('proto.Message');\nvar Command = proto.lookupType('proto.Command');\nvar Reply = proto.lookupType('proto.Reply');\n\nvar JsonEncoder = exports.JsonEncoder = function () {\n  function JsonEncoder() {\n    _classCallCheck(this, JsonEncoder);\n  }\n\n  _createClass(JsonEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var encodedCommands = [];\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          encodedCommands.push(JSON.stringify(commands[i]));\n        }\n      }\n      return encodedCommands.join('\\n');\n    }\n  }]);\n\n  return JsonEncoder;\n}();\n\nvar ProtobufEncoder = exports.ProtobufEncoder = function () {\n  function ProtobufEncoder() {\n    _classCallCheck(this, ProtobufEncoder);\n  }\n\n  _createClass(ProtobufEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var writer = protobuf.Writer.create();\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          var command = Object.assign({}, commands[i]);\n          if (command.params) {\n            var type = void 0;\n            switch (command.method) {\n              case methodTypeProtobuf.CONNECT:\n                type = methodSchema.CONNECT[0];\n                break;\n              case methodTypeProtobuf.REFRESH:\n                type = methodSchema.REFRESH;\n                break;\n              case methodTypeProtobuf.SUBSCRIBE:\n                type = methodSchema.SUBSCRIBE[0];\n                break;\n              case methodTypeProtobuf.UNSUBSCRIBE:\n                type = methodSchema.UNSUBSCRIBE[0];\n                break;\n              case methodTypeProtobuf.PUBLISH:\n                type = methodSchema.PUBLISH[0];\n                break;\n              case methodTypeProtobuf.PRESENCE:\n                type = methodSchema.PRESENCE[0];\n                break;\n              case methodTypeProtobuf.PRESENCE_STATS:\n                type = methodSchema.PRESENCE_STATS[0];\n                break;\n              case methodTypeProtobuf.HISTORY:\n                type = methodSchema.HISTORY[0];\n                break;\n              case methodTypeProtobuf.PING:\n                type = methodSchema.PING[0];\n                break;\n              case methodTypeProtobuf.RPC:\n                type = methodSchema.RPC[0];\n                break;\n              case methodTypeProtobuf.Message:\n                type = methodSchema.MESSAGE[0];\n                break;\n            }\n            command.params = type.encode(command.params).finish();\n          }\n          Command.encodeDelimited(command, writer);\n        }\n      }\n      return writer.finish();\n    }\n  }]);\n\n  return ProtobufEncoder;\n}();\n\nvar JsonDecoder = exports.JsonDecoder = function () {\n  function JsonDecoder() {\n    _classCallCheck(this, JsonDecoder);\n  }\n\n  _createClass(JsonDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var encodedReplies = data.split('\\n');\n      for (var i in encodedReplies) {\n        if (encodedReplies.hasOwnProperty(i)) {\n          if (!encodedReplies[i]) {\n            continue;\n          }\n          var reply = JSON.parse(encodedReplies[i]);\n          replies.push(reply);\n        }\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      return data;\n    }\n  }, {\n    key: 'decodeMessage',\n    value: function decodeMessage(data) {\n      return data;\n    }\n  }, {\n    key: 'decodeMessageData',\n    value: function decodeMessageData(messageType, data) {\n      return data;\n    }\n  }]);\n\n  return JsonDecoder;\n}();\n\nvar ProtobufDecoder = exports.ProtobufDecoder = function () {\n  function ProtobufDecoder() {\n    _classCallCheck(this, ProtobufDecoder);\n  }\n\n  _createClass(ProtobufDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var reader = protobuf.Reader.create(new Uint8Array(data));\n      while (reader.pos < reader.len) {\n        var reply = Reply.decodeDelimited(reader);\n        replies.push(reply);\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      var type;\n      switch (methodType) {\n        case methodTypeProtobuf.CONNECT:\n          type = methodSchema.CONNECT[1];\n          break;\n        case methodTypeProtobuf.REFRESH:\n          type = methodSchema.REFRESH[1];\n          break;\n        case methodTypeProtobuf.SUBSCRIBE:\n          type = methodSchema.SUBSCRIBE[1];\n          break;\n        case methodTypeProtobuf.UNSUBSCRIBE:\n          type = methodSchema.UNSUBSCRIBE[1];\n          break;\n        case methodTypeProtobuf.PUBLISH:\n          type = methodSchema.PUBLISH[1];\n          break;\n        case methodTypeProtobuf.PRESENCE:\n          type = methodSchema.PRESENCE[1];\n          break;\n        case methodTypeProtobuf.PRESENCE_STATS:\n          type = methodSchema.PRESENCE_STATS[1];\n          break;\n        case methodTypeProtobuf.HISTORY:\n          type = methodSchema.HISTORY[1];\n          break;\n        case methodTypeProtobuf.PING:\n          type = methodSchema.PING[1];\n          break;\n        case methodTypeProtobuf.RPC:\n          type = methodSchema.RPC[1];\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: 'decodeMessage',\n    value: function decodeMessage(data) {\n      return this._decode(Message, data);\n    }\n  }, {\n    key: 'decodeMessageData',\n    value: function decodeMessageData(messageType, data) {\n      var type;\n      switch (messageType) {\n        case messageTypeProtobuf.PUBLICATION:\n          type = MessageSchema.PUBLICATION;\n          break;\n        case messageTypeProtobuf.JOIN:\n          type = MessageSchema.JOIN;\n          break;\n        case messageTypeProtobuf.LEAVE:\n          type = MessageSchema.LEAVE;\n          break;\n        case messageTypeProtobuf.UNSUB:\n          type = MessageSchema.UNSUB;\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: '_decode',\n    value: function _decode(type, data) {\n      var res = void 0;\n      try {\n        res = type.decode(data);\n      } catch (err) {\n        return null;\n      }\n      return res;\n    }\n  }]);\n\n  return ProtobufDecoder;\n}();\n\nvar CentrifugeProtobuf = exports.CentrifugeProtobuf = function (_Centrifuge) {\n  _inherits(CentrifugeProtobuf, _Centrifuge);\n\n  function CentrifugeProtobuf() {\n    _classCallCheck(this, CentrifugeProtobuf);\n\n    return _possibleConstructorReturn(this, (CentrifugeProtobuf.__proto__ || Object.getPrototypeOf(CentrifugeProtobuf)).apply(this, arguments));\n  }\n\n  _createClass(CentrifugeProtobuf, [{\n    key: '_setFormat',\n    value: function _setFormat(format) {\n      if (format === 'protobuf') {\n        this._binary = true;\n        this._methodType = methodTypeProtobuf;\n        this._messageType = messageTypeProtobuf;\n        this._encoder = new ProtobufEncoder();\n        this._decoder = new ProtobufDecoder();\n      } else {\n        this._encoder = new JsonEncoder();\n        this._decoder = new JsonDecoder();\n      }\n    }\n  }]);\n\n  return CentrifugeProtobuf;\n}(_centrifuge.Centrifuge);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// light library entry point.\r\n\r\n\r\nmodule.exports = __webpack_require__(35);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = module.exports = __webpack_require__(36);\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = __webpack_require__(23);\r\nprotobuf.decoder          = __webpack_require__(28);\r\nprotobuf.verifier         = __webpack_require__(29);\r\nprotobuf.converter        = __webpack_require__(30);\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = __webpack_require__(4);\r\nprotobuf.Namespace        = __webpack_require__(6);\r\nprotobuf.Root             = __webpack_require__(32);\r\nprotobuf.Enum             = __webpack_require__(1);\r\nprotobuf.Type             = __webpack_require__(24);\r\nprotobuf.Field            = __webpack_require__(5);\r\nprotobuf.OneOf            = __webpack_require__(13);\r\nprotobuf.MapField         = __webpack_require__(25);\r\nprotobuf.Service          = __webpack_require__(26);\r\nprotobuf.Method           = __webpack_require__(27);\r\n\r\n// Runtime\r\nprotobuf.Message          = __webpack_require__(14);\r\nprotobuf.wrappers         = __webpack_require__(31);\r\n\r\n// Utility\r\nprotobuf.types            = __webpack_require__(7);\r\nprotobuf.util             = __webpack_require__(0);\r\n\r\n// Configure reflection\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = __webpack_require__(11);\r\nprotobuf.BufferWriter = __webpack_require__(43);\r\nprotobuf.Reader       = __webpack_require__(12);\r\nprotobuf.BufferReader = __webpack_require__(44);\r\n\r\n// Utility\r\nprotobuf.util         = __webpack_require__(2);\r\nprotobuf.rpc          = __webpack_require__(21);\r\nprotobuf.roots        = __webpack_require__(22);\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = LongBits;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = __webpack_require__(11);\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = __webpack_require__(12);\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(19),\r\n    inquire   = __webpack_require__(20);\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"REFRESH\":1,\"SUBSCRIBE\":2,\"UNSUBSCRIBE\":3,\"PUBLISH\":4,\"PRESENCE\":5,\"PRESENCE_STATS\":6,\"HISTORY\":7,\"PING\":8,\"RPC\":9,\"MESSAGE\":10}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"MessageType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3}},\"Message\":{\"fields\":{\"type\":{\"type\":\"MessageType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"connInfo\":{\"type\":\"bytes\",\"id\":3},\"chanInfo\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"uid\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2},\"info\":{\"type\":\"ClientInfo\",\"id\":3}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{}},\"ConnectRequest\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"exp\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"opts\":{\"type\":\"string\",\"id\":4},\"sign\":{\"type\":\"string\",\"id\":5}}},\"ConnectResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"ConnectResult\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"expired\":{\"type\":\"bool\",\"id\":4},\"ttl\":{\"type\":\"uint32\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"exp\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"opts\":{\"type\":\"string\",\"id\":4},\"sign\":{\"type\":\"string\",\"id\":5}}},\"RefreshResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"RefreshResult\",\"id\":2}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"expired\":{\"type\":\"bool\",\"id\":4},\"ttl\":{\"type\":\"uint32\",\"id\":5}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"sign\":{\"type\":\"string\",\"id\":4},\"recover\":{\"type\":\"bool\",\"id\":5},\"last\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"SubscribeResult\",\"id\":2}}},\"SubscribeResult\":{\"fields\":{\"last\":{\"type\":\"string\",\"id\":1},\"recovered\":{\"type\":\"bool\",\"id\":2},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":3}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"UnsubscribeResult\",\"id\":2}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PublishResult\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PresenceResult\",\"id\":2}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PresenceStatsResult\",\"id\":2}}},\"PresenceStatsResult\":{\"fields\":{\"numClients\":{\"type\":\"uint32\",\"id\":1},\"numUsers\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"HistoryResult\",\"id\":2}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{\"data\":{\"type\":\"string\",\"id\":1}}},\"PingResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PingResult\",\"id\":2}}},\"PingResult\":{\"fields\":{\"data\":{\"type\":\"string\",\"id\":1}}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"RPCResult\",\"id\":2}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"MessageRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"Centrifuge\":{\"methods\":{\"Communicate\":{\"requestType\":\"Command\",\"requestStream\":true,\"responseType\":\"Reply\",\"responseStream\":true}}}}}}}\n\n/***/ }),\n/* 50 */,\n/* 51 */,\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _protobuf = __webpack_require__(33);\n\nexports.default = _protobuf.CentrifugeProtobuf;\nmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// centrifuge.protobuf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 47bab6f8ac7bae08148c","\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util.js\n// module id = 0\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/enum.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/minimal.js\n// module id = 2\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1 2","\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/object.js\n// module id = 4\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/field.js\n// module id = 5\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    Field    = require(\"./field\"),\r\n    util     = require(\"./util\");\r\n\r\nvar Type,    // cyclic\r\n    Service; // \"\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\nNamespace._configure = function(Type_, Service_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/namespace.js\n// module id = 6\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/types.js\n// module id = 7\n// module chunks = 0 1","export const startsWith = function (value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport const isString = function (value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'string' || value instanceof String;\n};\n\nexport const isFunction = function (value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport const log = function (level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport const backoff = function (step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = min * Math.pow(2, step + 1);\n\n  if (interval > max) {\n    interval = max;\n  }\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport const errorExists = function (data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 9\n// module chunks = 0 1 2","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.4+314e4831\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 10\n// module chunks = 0 1 2","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer.js\n// module id = 11\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader.js\n// module id = 12\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/oneof.js\n// module id = 13\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/message.js\n// module id = 14\n// module chunks = 0 1","const EventEmitter = require('events');\nconst Promise = require('es6-promise');\nconst Subscription = require('./subscription');\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  methodTypeJSON,\n  messageTypeJSON\n} from './json';\n\nimport {\n  isFunction,\n  isString,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._methodType = methodTypeJSON;\n    this._messageType = messageTypeJSON;\n    this._url = url;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._subs = {};\n    this._lastPublicationUID = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isAuthBatching = false;\n    this._authChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingInterval = null;\n    this._pongTimeout = null;\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._credentials = null;\n    this._config = {\n      debug: false,\n      sockjs: null,\n      retry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      resubscribe: true,\n      ping: true,\n      pingInterval: 30000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 3000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      authEndpoint: '/centrifuge/auth',\n      authHeaders: {},\n      authParams: {},\n      onAuth: null\n    };\n    this._configure(options);\n  }\n\n  setCredentials(credentials) {\n    this._credentials = credentials;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    var self = this;\n    var query = '';\n\n    self._debug('sending AJAX request to', url);\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (let i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (let headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback(true, 'JSON returned was invalid, yet status code was 200. Data was: ' + xhr.responseText);\n          }\n          if (parsed) { // prevents double execution.\n            callback(false, data);\n          }\n        } else {\n          self._log(\"Couldn't get auth info from application\", xhr.status);\n          callback(true, xhr.status);\n        }\n      }\n    };\n\n    setTimeout(function () {\n      xhr.send(JSON.stringify(data));\n    }, 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client');\n    } else {\n      this._encoder = new JsonEncoder();\n      this._decoder = new JsonDecoder();\n    }\n  }\n\n  _configure(configuration) {\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (this._credentials !== null) {\n      if (!this._credentials.user && this._credentials.user !== '') {\n        this._debug('user not set in credentials');\n      }\n\n      if (!this._credentials.exp) {\n        this._debug('exp not set in credentials');\n      }\n\n      if (!this._credentials.info) {\n        this._debug('info not set in credentials');\n        this._credentials.info = '';\n      }\n\n      if (!this._credentials.sign) {\n        this._debug('sign not set in credentials');\n      }\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    var interval = backoff(this._retries, this._config.retry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n\n    // fire errbacks of registered outgoing calls.\n    for (let uid in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(uid)) {\n        const callbacks = this._callbacks[uid];\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback(this._createErrorObject('disconnected'));\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (let channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n          }\n          sub._setSubscribing();\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    if (!this._config.resubscribe || !this._reconnect) {\n      // completely clear connected state\n      this._subs = {};\n    }\n  };\n\n  _send(commands) {\n    if (!commands.length) {\n      return;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n  }\n\n  _setupTransport() {\n    var self = this;\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      this._transport = new WebSocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = function () {\n      self._transportClosed = false;\n      self._reconnecting = false;\n      if (self._isSockjs) {\n        self._transportName = 'sockjs-' + self._transport.transport;\n        self._transport.onheartbeat = function () {\n          self._restartPing();\n        };\n      } else {\n        self._transportName = 'websocket';\n      }\n\n      self._resetRetry();\n\n      let msg = {\n        method: self._methodType.CONNECT\n      };\n\n      if (self._credentials) {\n        msg.params = self._credentials;\n      }\n\n      self._latencyStart = new Date();\n      self._call(msg).then(function (result) {\n        self._connectResponse(self._decoder.decodeCommandResult(self._methodType.CONNECT, result));\n      }, function () {\n        self._disconnect('connect error', true);\n      });\n    };\n\n    this._transport.onerror = function (error) {\n      self._debug('transport level error', error);\n    };\n\n    this._transport.onclose = function (closeEvent) {\n      self._transportClosed = true;\n      let reason = 'connection closed';\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n\n          self._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          self._debug('reason is a plain string', reason);\n          needReconnect = reason !== 'disconnect';\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (self._config.onTransportClose !== null) {\n        self._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      self._disconnect(reason, needReconnect);\n\n      if (self._reconnect === true) {\n        self._reconnecting = true;\n        const interval = self._getRetryInterval();\n\n        self._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(function () {\n          if (self._reconnect === true) {\n            self._connect.call(self);\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = function (event) {\n      const replies = self._decoder.decodeReplies(event.data);\n      for (let i in replies) {\n        if (replies.hasOwnProperty(i)) {\n          self._debug('Received reply', replies[i]);\n          self._dispatchReply(replies[i]);\n        }\n      }\n      self._restartPing();\n    };\n  };\n\n  rpc(data) {\n    const self = this;\n    const msg = {\n      method: self._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n    const promise = this._call(msg);\n\n    return new Promise(function (resolve, reject) {\n      promise.then(function (result) {\n        resolve(self._decoder.decodeCommandResult(self._methodType.RPC, result));\n      }, function (error) {\n        reject(error);\n      });\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: self._methodType.MESSAGE,\n      params: {\n        data: data\n      }\n    };\n\n    return this._callAsync(msg);\n  }\n\n  _callAsync(msg) {\n    this._addMessage(msg, true);\n  }\n\n  _call(msg) {\n    var self = this;\n\n    return new Promise(function (resolve, reject) {\n      const id = self._addMessage(msg);\n      self._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask web app for connection parameters - user ID,\n    // timestamp, info and token\n    var self = this;\n\n    this._debug('refresh credentials');\n\n    if (self._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      self._refreshFailed();\n      return;\n    }\n\n    if (self._refreshTimeout !== null) {\n      clearTimeout(self._refreshTimeout);\n    }\n\n    const cb = function (error, data) {\n      if (error === true) {\n        // We don't perform any connection status related actions here as we are\n        // relying on Centrifugo that must close connection eventually.\n        self._debug('error getting connection credentials from refresh endpoint', data);\n        self._numRefreshFailed++;\n        if (self._refreshTimeout) {\n          clearTimeout(self._refreshTimeout);\n        }\n        if (self._config.refreshAttempts !== null && self._numRefreshFailed >= self._config.refreshAttempts) {\n          self._refreshFailed();\n          return;\n        }\n        self._refreshTimeout = setTimeout(function () {\n          self._refresh.call(self);\n        }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n        return;\n      }\n      self._numRefreshFailed = 0;\n      if (self._credentials === null) {\n        return;\n      }\n      self._credentials.user = data.user;\n      self._credentials.exp = data.exp;\n      if ('info' in data) {\n        self._credentials.info = data.info;\n      }\n      self._credentials.sign = data.sign;\n      if (self._isDisconnected()) {\n        self._debug('credentials refreshed, connect from scratch');\n        self._connect();\n      } else {\n        self._debug('send refreshed credentials');\n\n        const msg = {\n          method: self._methodType.REFRESH,\n          params: self._credentials\n        };\n\n        self._call(msg).then(function (result) {\n          self._refreshResponse(self._decoder.decodeCommandResult(self._methodType.REFRESH, result));\n        }, function () {\n          self._disconnect('refresh error', true);\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n    }\n  };\n\n  _subscribe(sub) {\n\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing();\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel\n      if (this._isAuthBatching) {\n        this._authChannels[channel] = true;\n      } else {\n        this.startAuthBatching();\n        this._subscribe(sub);\n        this.stopAuthBatching();\n      }\n    } else {\n      const recover = this._recover(channel);\n\n      if (recover === true) {\n        msg.params.recover = true;\n        msg.params.last = this._getLastID(channel);\n      }\n      const self = this;\n\n      this._call(msg).then(function (result) {\n        self._subscribeResponse(channel, self._decoder.decodeCommandResult(self._methodType.SUBSCRIBE, result));\n      }, function (err) {\n        self._subscribeError(err);\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: self._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _connectResponse(result) {\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    if (result.expires) {\n      const isExpired = result.expired;\n\n      if (isExpired) {\n        this._reconnecting = true;\n        this._disconnect('expired', true);\n        this._refresh();\n        return;\n      }\n    }\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    const self = this;\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(function () {\n        self._refresh.call(self);\n      }, result.ttl * 1000);\n    }\n\n    if (this._config.resubscribe) {\n      this.startBatching();\n      this.startAuthBatching();\n      for (let channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          const sub = this._subs[channel];\n          if (sub._shouldResubscribe()) {\n            this._subscribe(sub);\n          }\n        }\n      }\n      this.stopAuthBatching();\n      this.stopBatching(true);\n    }\n\n    this._restartPing();\n    this.emit('connect', {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    });\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n    }\n    if (this._pingInterval !== null) {\n      clearInterval(this._pingInterval);\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    const self = this;\n\n    this._pingInterval = setInterval(function () {\n      if (!self.isConnected()) {\n        self._stopPing();\n        return;\n      }\n      self.ping();\n      self._pongTimeout = setTimeout(function () {\n        self._disconnect('no ping', true);\n      }, self._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let publications = result.publications;\n\n    if (publications && publications.length > 0) {\n      // handle missed publications.\n      publications = publications.reverse();\n      for (let i in publications) {\n        if (publications.hasOwnProperty(i)) {\n          this._handlePublication({\n            body: publications[i]\n          });\n        }\n      }\n    } else {\n      if ('last' in result) {\n        // no missed messages found so set last message id from result.\n        this._lastPublicationUID[channel] = result.last;\n      }\n    }\n\n    let recovered = false;\n\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n  };\n\n  _handleCommandReply(message) {\n    const id = message.id;\n    const result = message.result;\n\n    if (!(id in this._callbacks)) {\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    delete this._callbacks[id];\n\n    if (!errorExists(message)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback(result);\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        return;\n      }\n      errback(message.error);\n    }\n  }\n\n  _handleJoin(channel, data) {\n    const join = this._decoder.decodeMessageData(this._messageType.JOIN, data);\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', join);\n  };\n\n  _handleLeave(channel, data) {\n    const leave = this._decoder.decodeMessageData(this._messageType.LEAVE, data);\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', leave);\n  };\n\n  _handleUnsub(channel) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n  };\n\n  _handlePublication(channel, data) {\n    const publication = this._decoder.decodeMessageData(this._messageType.PUBLICATION, data);\n    // keep last uid received from channel.\n    this._lastPublicationUID[channel] = publication.uid;\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('message', publication);\n  };\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n    if (result.expires) {\n      const self = this;\n      const expired = result.expired;\n\n      if (expired) {\n        self._refreshTimeout = setTimeout(function () {\n          self._refresh.call(self);\n        }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n        return;\n      }\n      this._clientID = result.client;\n      self._refreshTimeout = setTimeout(function () {\n        self._refresh.call(self);\n      }, result.ttl * 1000);\n    }\n  };\n\n  _handleAsyncReply(reply) {\n    const result = this._decoder.decodeMessage(reply.result);\n    let type = 0;\n    if ('type' in result) {\n      type = result['type'];\n    }\n    const channel = result.channel;\n\n    if (type === 0) {\n      this._handlePublication(channel, result.data);\n    } else if (type === 1) {\n      this._handleJoin(channel, result.data);\n    } else if (type === 2) {\n      this._handleLeave(channel, result.data);\n    } else if (type === 3) {\n      this._handleUnsub(channel);\n    }\n  }\n\n  _dispatchReply(reply) {\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      return;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleCommandReply(reply);\n    } else {\n      this._handleAsyncReply(reply);\n    }\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._send(messages);\n  };\n\n  _ping() {\n    this._addMessage({\n      method: this._methodType.PING\n    });\n  };\n\n  _recover(channel) {\n    return channel in this._lastPublicationUID;\n  };\n\n  _getLastID(channel) {\n    const lastUID = this._lastPublicationUID[channel];\n\n    if (lastUID) {\n      this._debug('last uid found and sent for channel', channel);\n      return lastUID;\n    }\n    this._debug('no last uid found for channel', channel);\n    return '';\n\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      error: {\n        message: message,\n        code: code || 0\n      }\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    const self = this;\n\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback\n    };\n    setTimeout(function () {\n      delete self._callbacks[id];\n      if (isFunction(errback)) {\n        errback(self._createErrorObject(_errorTimeout));\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message, async) {\n    let id;\n    if (!async) {\n      id = this._nextMessageId();\n      message.id = id;\n    }\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._send([message]);\n    }\n    if (!async) {\n      return id;\n    }\n    return 0;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching(flush) {\n    // stop collecting messages\n    flush = flush || false;\n    this._isBatching = false;\n    if (flush === true) {\n      this.flush();\n    }\n  };\n\n  flush() {\n    // send batched messages to Centrifuge\n    this._flush();\n  };\n\n  startAuthBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to authEndpoint when stopAuthBatching will be called\n    this._isAuthBatching = true;\n  };\n\n  stopAuthBatching() {\n    var i,\n      channel;\n\n    // create request to authEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isAuthBatching = false;\n    const authChannels = this._authChannels;\n\n    this._authChannels = {};\n    const channels = [];\n\n    for (channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const self = this;\n\n    const cb = function (error, data) {\n      if (error === true) {\n        self._debug('authorization request failed');\n        for (i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            channel = channels[i];\n            self._subscribeResponse({\n              error: 'authorization request failed',\n              body: {\n                channel: channel\n              }\n            });\n          }\n        }\n        return;\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!self._isBatching) {\n        self.startBatching();\n        batch = true;\n      }\n\n      for (i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          channel = channels[i];\n          const channelResponse = data[channel];\n\n          if (!channelResponse) {\n            // subscription:error\n            self._subscribeResponse({\n              error: 'channel not found in authorization response',\n              body: {\n                channel: channel\n              }\n            });\n            continue;\n          }\n          if (!channelResponse.status || channelResponse.status === 200) {\n            const msg = {\n              method: self._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                client: self._clientID,\n                info: channelResponse.info,\n                sign: channelResponse.sign\n              }\n            };\n            const recover = self._recover(channel);\n\n            if (recover === true) {\n              msg.params.recover = true;\n              msg.params.last = self._getLastID(channel);\n            }\n            self._call(msg).then(function (result) {\n              self._subscribeResponse(channel, self._decoder.decodeCommandResult(self._methodType.SUBSCRIBE, result));\n            }, function (err) {\n              self._subscribeError(channel, err);\n            });\n          } else {\n            self._subscribeResponse({\n              error: channelResponse.status,\n              body: {\n                channel: channel\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        self.stopBatching(true);\n      }\n\n    };\n\n    if (this._config.onAuth !== null) {\n      this._config.onAuth({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.authEndpoint, this._config.authParams, this._config.authHeaders, data, cb);\n    }\n  };\n\n  subscribe(channel, events) {\n    if (arguments.length < 1) {\n      throw new Error('Illegal arguments number: required 1, got ' + arguments.length);\n    }\n    if (!isString(channel)) {\n      throw new Error('Illegal argument type: channel must be a string');\n    }\n    if (!this._config.resubscribe && !this.isConnected()) {\n      throw new Error('Can not only subscribe in connected state when resubscribe option is off');\n    }\n\n    const currentSub = this._getSub(channel);\n\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","export const methodTypeJSON = {\n  CONNECT: 'connect',\n  REFRESH: 'refresh',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  PUBLISH: 'publish',\n  PRESENCE: 'presence',\n  PRESENCE_STATS: 'presence_stats',\n  HISTORY: 'history',\n  PING: 'ping',\n  RPC: 'rpc',\n  MESSAGE: 'message'\n};\n\nexport const messageTypeJSON = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    let replies = [];\n    const encodedReplies = data.split('\\n');\n    for (let i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodeMessage(data) {\n    return data;\n  }\n\n  decodeMessageData(messageType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 17\n// module chunks = 0 1 2","const EventEmitter = require('events');\nconst Promise = require('es6-promise');\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._recovered = false;\n    this._ready = false;\n    this._promise = null;\n    this._noResubscribe = false;\n    this._setEvents(events);\n    this._initializePromise();\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    var self = this;\n\n    this._ready = false;\n\n    this._promise = new Promise(function (resolve, reject) {\n      self._resolve = function (value) {\n        self._ready = true;\n        resolve(value);\n      };\n      self._reject = function (err) {\n        self._ready = true;\n        reject(err);\n      };\n    });\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('message', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['message', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing() {\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n      this._isResubscribe = true;\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._recovered = recovered;\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n\n    this.emit('error', errContext);\n    this._reject(errContext);\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._noResubscribe = true;\n    }\n    this._triggerUnsubscribe();\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext() {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: this._recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    let subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    var self = this;\n    return new Promise(function (resolve, reject) {\n      if (self._isUnsubscribed()) {\n        reject(self._centrifuge._createErrorObject('subscription unsubscribed'));\n        return;\n      }\n      self._promise.then(function () {\n        if (!self._centrifuge.isConnected()) {\n          reject(self._centrifuge._createErrorObject('disconnected'));\n          return;\n        }\n        self._centrifuge._call(message).then(function (result) {\n          resolve(self._centrifuge._decoder.decodeCommandResult(type, result));\n        }, function (err) {\n          reject(err);\n        });\n      }, function (err) {\n        reject(err);\n      });\n    });\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: self.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/aspromise/index.js\n// module id = 19\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/inquire/index.js\n// module id = 20\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc.js\n// module id = 21\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/roots.js\n// module id = 22\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/encoder.js\n// module id = 23\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/type.js\n// module id = 24\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/mapfield.js\n// module id = 25\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/service.js\n// module id = 26\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/method.js\n// module id = 27\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/decoder.js\n// module id = 28\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/verifier.js\n// module id = 29\n// module chunks = 0 1","\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) gen\r\n        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");\r\n            else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/converter.js\n// module id = 30\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/wrappers.js\n// module id = 31\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type = Type_;\r\n    parse = parse_;\r\n    common = common_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/root.js\n// module id = 32\n// module chunks = 0 1","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nexport const methodTypeProtobuf = {\n  CONNECT: methodValues.CONNECT,\n  REFRESH: methodValues.REFRESH,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  MESSAGE: methodValues.MESSAGE\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('proto.ConnectRequest'),\n    proto.lookupType('proto.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('proto.RefreshRequest'),\n    proto.lookupType('proto.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('proto.SubscribeRequest'),\n    proto.lookupType('proto.SubscribeResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('proto.UnsubscribeRequest'),\n    proto.lookupType('proto.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('proto.PublishRequest'),\n    proto.lookupType('proto.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('proto.PresenceRequest'),\n    proto.lookupType('proto.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('proto.PresenceStatsRequest'),\n    proto.lookupType('proto.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('proto.HistoryRequest'),\n    proto.lookupType('proto.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('proto.PingRequest'),\n    proto.lookupType('proto.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('proto.RPCRequest'),\n    proto.lookupType('proto.RPCResult')\n  ],\n  MESSAGE: [\n    proto.lookupType('proto.MessageRequest'),\n    null\n  ]\n};\n\nexport const messageTypeProtobuf = {\n  PUBLICATION: proto.lookupEnum('MessageType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('MessageType').values.JOIN,\n  LEAVE: proto.lookupEnum('MessageType').values.LEAVE,\n  UNSUB: proto.lookupEnum('MessageType').values.UNSUB\n};\n\nconst MessageSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub')\n};\n\nconst Message = proto.lookupType('proto.Message');\nconst Command = proto.lookupType('proto.Command');\nconst Reply = proto.lookupType('proto.Reply');\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    let writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          switch (command.method) {\n            case methodTypeProtobuf.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case methodTypeProtobuf.REFRESH:\n              type = methodSchema.REFRESH;\n              break;\n            case methodTypeProtobuf.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case methodTypeProtobuf.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case methodTypeProtobuf.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case methodTypeProtobuf.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case methodTypeProtobuf.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case methodTypeProtobuf.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case methodTypeProtobuf.PING:\n              type = methodSchema.PING[0];\n              break;\n            case methodTypeProtobuf.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case methodTypeProtobuf.Message:\n              type = methodSchema.MESSAGE[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    let replies = [];\n    const encodedReplies = data.split('\\n');\n    for (let i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodeMessage(data) {\n    return data;\n  }\n\n  decodeMessageData(messageType, data) {\n    return data;\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    let replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case methodTypeProtobuf.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case methodTypeProtobuf.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case methodTypeProtobuf.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case methodTypeProtobuf.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case methodTypeProtobuf.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case methodTypeProtobuf.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case methodTypeProtobuf.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case methodTypeProtobuf.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case methodTypeProtobuf.PING:\n        type = methodSchema.PING[1];\n        break;\n      case methodTypeProtobuf.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodeMessage(data) {\n    return this._decode(Message, data);\n  }\n\n  decodeMessageData(messageType, data) {\n    var type;\n    switch (messageType) {\n      case messageTypeProtobuf.PUBLICATION:\n        type = MessageSchema.PUBLICATION;\n        break;\n      case messageTypeProtobuf.JOIN:\n        type = MessageSchema.JOIN;\n        break;\n      case messageTypeProtobuf.LEAVE:\n        type = MessageSchema.LEAVE;\n        break;\n      case messageTypeProtobuf.UNSUB:\n        type = MessageSchema.UNSUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n\n  _setFormat(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = methodTypeProtobuf;\n      this._messageType = messageTypeProtobuf;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n    } else {\n      this._encoder = new JsonEncoder();\n      this._decoder = new JsonDecoder();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/protobuf.js","// light library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-light\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/light.js\n// module id = 34\n// module chunks = 0 1","\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Configure reflection\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-light.js\n// module id = 35\n// module chunks = 0 1","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-minimal.js\n// module id = 36\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/base64/index.js\n// module id = 37\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/eventemitter/index.js\n// module id = 38\n// module chunks = 0 1","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/float/index.js\n// module id = 39\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/utf8/index.js\n// module id = 40\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/pool/index.js\n// module id = 41\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/longbits.js\n// module id = 42\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer_buffer.js\n// module id = 43\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader_buffer.js\n// module id = 44\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc/service.js\n// module id = 45\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/codegen/index.js\n// module id = 46\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/fetch/index.js\n// module id = 47\n// module chunks = 0 1","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/path/index.js\n// module id = 48\n// module chunks = 0 1","module.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"REFRESH\":1,\"SUBSCRIBE\":2,\"UNSUBSCRIBE\":3,\"PUBLISH\":4,\"PRESENCE\":5,\"PRESENCE_STATS\":6,\"HISTORY\":7,\"PING\":8,\"RPC\":9,\"MESSAGE\":10}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"MessageType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3}},\"Message\":{\"fields\":{\"type\":{\"type\":\"MessageType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"connInfo\":{\"type\":\"bytes\",\"id\":3},\"chanInfo\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"uid\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2},\"info\":{\"type\":\"ClientInfo\",\"id\":3}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{}},\"ConnectRequest\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"exp\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"opts\":{\"type\":\"string\",\"id\":4},\"sign\":{\"type\":\"string\",\"id\":5}}},\"ConnectResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"ConnectResult\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"expired\":{\"type\":\"bool\",\"id\":4},\"ttl\":{\"type\":\"uint32\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"exp\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"opts\":{\"type\":\"string\",\"id\":4},\"sign\":{\"type\":\"string\",\"id\":5}}},\"RefreshResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"RefreshResult\",\"id\":2}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"expired\":{\"type\":\"bool\",\"id\":4},\"ttl\":{\"type\":\"uint32\",\"id\":5}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"info\":{\"type\":\"string\",\"id\":3},\"sign\":{\"type\":\"string\",\"id\":4},\"recover\":{\"type\":\"bool\",\"id\":5},\"last\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"SubscribeResult\",\"id\":2}}},\"SubscribeResult\":{\"fields\":{\"last\":{\"type\":\"string\",\"id\":1},\"recovered\":{\"type\":\"bool\",\"id\":2},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":3}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"UnsubscribeResult\",\"id\":2}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PublishResult\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PresenceResult\",\"id\":2}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PresenceStatsResult\",\"id\":2}}},\"PresenceStatsResult\":{\"fields\":{\"numClients\":{\"type\":\"uint32\",\"id\":1},\"numUsers\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"HistoryResult\",\"id\":2}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{\"data\":{\"type\":\"string\",\"id\":1}}},\"PingResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"PingResult\",\"id\":2}}},\"PingResult\":{\"fields\":{\"data\":{\"type\":\"string\",\"id\":1}}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResponse\":{\"fields\":{\"error\":{\"type\":\"Error\",\"id\":1},\"result\":{\"type\":\"RPCResult\",\"id\":2}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"MessageRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"Centrifuge\":{\"methods\":{\"Communicate\":{\"requestType\":\"Command\",\"requestStream\":true,\"responseType\":\"Reply\",\"responseStream\":true}}}}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.proto.json\n// module id = 49\n// module chunks = 0 1","import {CentrifugeProtobuf} from './protobuf.js';\n\nexport default CentrifugeProtobuf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index_protobuf.js"],"sourceRoot":""}